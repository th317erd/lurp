{"version":3,"file":"index.js","mappings":"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","sources":["webpack://mythix-ui-core/./node_modules/deepmerge/dist/cjs.js","webpack://mythix-ui-core/webpack/bootstrap","webpack://mythix-ui-core/webpack/runtime/define property getters","webpack://mythix-ui-core/webpack/runtime/hasOwnProperty shorthand","webpack://mythix-ui-core/webpack/runtime/make namespace object","webpack://mythix-ui-core/./lib/sha256.js","webpack://mythix-ui-core/./lib/utils.js","webpack://mythix-ui-core/./lib/elements.js","webpack://mythix-ui-core/./lib/query-engine.js","webpack://mythix-ui-core/./lib/components.js","webpack://mythix-ui-core/./lib/mythix-ui-require.js","webpack://mythix-ui-core/./lib/mythix-ui-language-provider.js","webpack://mythix-ui-core/./lib/mythix-ui-spinner.js","webpack://mythix-ui-core/./lib/index.js"],"sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable no-magic-numbers */\n\nexport function SHA256(_input) {\n  let input = _input;\n\n  let mathPow = Math.pow;\n  let maxWord = mathPow(2, 32);\n  let lengthProperty = 'length';\n  let i; let j; // Used as a counter across the whole file\n  let result = '';\n\n  let words = [];\n  let asciiBitLength = input[lengthProperty] * 8;\n\n  //* caching results is optional - remove/add slash from front of this line to toggle\n  // Initial hash value: first 32 bits of the fractional parts of the square roots of the first 8 primes\n  // (we actually calculate the first 64, but extra values are just ignored)\n  let hash = SHA256.h = SHA256.h || [];\n  // Round constants: first 32 bits of the fractional parts of the cube roots of the first 64 primes\n  let k = SHA256.k = SHA256.k || [];\n  let primeCounter = k[lengthProperty];\n  /*/\n    let hash = [], k = [];\n    let primeCounter = 0;\n    //*/\n\n  let isComposite = {};\n  for (let candidate = 2; primeCounter < 64; candidate++) {\n    if (!isComposite[candidate]) {\n      for (i = 0; i < 313; i += candidate)\n        isComposite[i] = candidate;\n\n      hash[primeCounter] = (mathPow(candidate, 0.5) * maxWord) | 0;\n      k[primeCounter++] = (mathPow(candidate, 1 / 3) * maxWord) | 0;\n    }\n  }\n\n  input += '\\x80'; // Append Ƈ' bit (plus zero padding)\n  while (input[lengthProperty] % 64 - 56)\n    input += '\\x00'; // More zero padding\n\n  for (i = 0; i < input[lengthProperty]; i++) {\n    j = input.charCodeAt(i);\n    if (j >> 8)\n      return; // ASCII check: only accept characters in range 0-255\n    words[i >> 2] |= j << ((3 - i) % 4) * 8;\n  }\n\n  words[words[lengthProperty]] = ((asciiBitLength / maxWord) | 0);\n  words[words[lengthProperty]] = (asciiBitLength);\n\n  // process each chunk\n  for (j = 0; j < words[lengthProperty];) {\n    let w = words.slice(j, j += 16); // The message is expanded into 64 words as part of the iteration\n    let oldHash = hash;\n\n    // This is now the undefinedworking hash\", often labelled as variables a...g\n    // (we have to truncate as well, otherwise extra entries at the end accumulate\n    hash = hash.slice(0, 8);\n\n    for (i = 0; i < 64; i++) {\n      // Expand the message into 64 words\n      // Used below if\n      let w15 = w[i - 15]; let w2 = w[i - 2];\n\n      // Iterate\n      let a = hash[0]; let e = hash[4];\n      let temp1 = hash[7]\n                + (((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7))) // S1\n                + ((e & hash[5]) ^ ((~e) & hash[6])) // ch\n                + k[i]\n                // Expand the message schedule if needed\n                + (w[i] = (i < 16) ? w[i] : (\n                  w[i - 16]\n                        + (((w15 >>> 7) | (w15 << 25)) ^ ((w15 >>> 18) | (w15 << 14)) ^ (w15 >>> 3)) // s0\n                        + w[i - 7]\n                        + (((w2 >>> 17) | (w2 << 15)) ^ ((w2 >>> 19) | (w2 << 13)) ^ (w2 >>> 10)) // s1\n                ) | 0\n                );\n      // This is only used once, so *could* be moved below, but it only saves 4 bytes and makes things unreadble\n      let temp2 = (((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10))) // S0\n                + ((a & hash[1]) ^ (a & hash[2]) ^ (hash[1] & hash[2])); // maj\n\n      hash = [(temp1 + temp2) | 0].concat(hash); // We don't bother trimming off the extra ones, they're harmless as long as we're truncating when we do the slice()\n      hash[4] = (hash[4] + temp1) | 0;\n    }\n\n    for (i = 0; i < 8; i++)\n      hash[i] = (hash[i] + oldHash[i]) | 0;\n  }\n\n  for (i = 0; i < 8; i++) {\n    for (j = 3; j + 1; j--) {\n      let b = (hash[i] >> (j * 8)) & 255;\n      result += ((b < 16) ? 0 : '') + b.toString(16);\n    }\n  }\n\n  return result;\n}\n","import { SHA256 } from './sha256.js';\n\nexport {\n  SHA256,\n};\n\n/**\n *  type: Namespace\n *  name: Utils\n *  groupName: Utils\n *  desc: |\n *    `import { Utils } from 'mythix-ui-core@1.0';`\n *\n *    Misc utility functions and global constants are found within this namespace.\n */\n\nfunction pad(str, count, char = '0') {\n  return str.padStart(count, char);\n}\n\nexport const MYTHIX_NAME_VALUE_PAIR_HELPER  = Symbol.for('@mythix/mythix-ui/constants/name-value-pair-helper');\nexport const MYTHIX_SHADOW_PARENT           = Symbol.for('@mythix/mythix-ui/constants/shadow-parent');\nexport const MYTHIX_TYPE                    = Symbol.for('@mythix/mythix-ui/constants/element-definition');\n\nexport const DYNAMIC_PROPERTY_TYPE          = Symbol.for('@mythix/mythix-ui/types/MythixUI::DynamicProperty');\n\nconst ELEMENT_DEFINITION_TYPE               = Symbol.for('@mythix/mythix-ui/types/MythixUI::ElementDefinition');\nconst QUERY_ENGINE_TYPE                     = Symbol.for('@mythix/mythix-ui/types/MythixUI::QueryEngine');\n\nconst ID_COUNT_LENGTH         = 19;\nconst IS_CLASS                = (/^class \\S+ \\{/);\nconst NATIVE_CLASS_TYPE_NAMES = [\n  'AggregateError',\n  'Array',\n  'ArrayBuffer',\n  'BigInt',\n  'BigInt64Array',\n  'BigUint64Array',\n  'Boolean',\n  'DataView',\n  'Date',\n  'DedicatedWorkerGlobalScope',\n  'Error',\n  'EvalError',\n  'FinalizationRegistry',\n  'Float32Array',\n  'Float64Array',\n  'Function',\n  'Int16Array',\n  'Int32Array',\n  'Int8Array',\n  'Map',\n  'Number',\n  'Object',\n  'Proxy',\n  'RangeError',\n  'ReferenceError',\n  'RegExp',\n  'Set',\n  'SharedArrayBuffer',\n  'String',\n  'Symbol',\n  'SyntaxError',\n  'TypeError',\n  'Uint16Array',\n  'Uint32Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'URIError',\n  'WeakMap',\n  'WeakRef',\n  'WeakSet',\n];\n\nconst NATIVE_CLASS_TYPES_META = NATIVE_CLASS_TYPE_NAMES.map((typeName) => {\n  return [ typeName, globalThis[typeName] ];\n}).filter((meta) => meta[1]);\n\nlet idCounter = 0n;\n\n/**\n * groupName: Utils\n * desc: |\n *   Generate a partially random unique ID. The id generated will be a `Date.now()`\n *   value with an incrementing BigInt postfixed to it.\n * return: |\n *   @types string; A unique ID.\n * examples:\n *   - |\n *     ```javascript\n *     console.log('ID: ', mythixUI.generateID());\n *     // output -> '17041430271790000000000000000007'\n *     ```\n */\nexport function generateID() {\n  idCounter += BigInt(1);\n  return `${Date.now()}${pad(idCounter.toString(), ID_COUNT_LENGTH)}`;\n}\n\n/**\n * groupName: Utils\n * desc: |\n *   Create an unresolved specialized Promise instance, with the intent that it will be\n *   resolved later.\n *\n *   The Promise instance is specialized because the following properties are injected into it:\n *   1. `resolve(resultValue)` - When called, resolves the promise with the first provided argument\n *   2. `reject(errorValue)` - When called, rejects the promise with the first provided argument\n *   3. `status()` - When called, will return the fulfillment status of the promise, as a `string`, one of: `\"pending\", \"fulfilled\"`, or `\"rejected\"`\n *   4. `id<string>` - A randomly generated ID for this promise\n * return: |\n *   @types Promise; An unresolved Promise that can be resolved or rejected by calling `promise.resolve(result)` or `promise.reject(error)` respectively.\n */\nexport function createResolvable() {\n  let status = 'pending';\n  let resolve;\n  let reject;\n\n  let promise = new Promise((_resolve, _reject) => {\n    resolve = (value) => {\n      if (status === 'pending') {\n        status = 'fulfilled';\n        _resolve(value);\n      }\n\n      return promise;\n    };\n\n    reject = (value) => {\n      if (status === 'pending') {\n        status = 'rejected';\n        _reject(value);\n      }\n\n      return promise;\n    };\n  });\n\n  Object.defineProperties(promise, {\n    'resolve': {\n      writable:     false,\n      enumerable:   false,\n      configurable: false,\n      value:        resolve,\n    },\n    'reject': {\n      writable:     false,\n      enumerable:   false,\n      configurable: false,\n      value:        reject,\n    },\n    'status': {\n      writable:     false,\n      enumerable:   false,\n      configurable: false,\n      value:        () => status,\n    },\n    'id': {\n      writable:     false,\n      enumerable:   false,\n      configurable: false,\n      value:        generateID(),\n    },\n  });\n\n  return promise;\n}\n\n/**\n * groupName: Utils\n * desc: |\n *   Runtime type reflection helper. This is intended to be a more robust replacement for the `typeof` operator.\n *\n *   This method always returns a name (as a `string`) of the underlying datatype \"class\".\n *   \"class\" is in double quotes here because it will even return the \"class\" for primitive types. For example, a\n *   primitive `typeof x === 'number'` type is returned as its corresponding Object type `'Number'`. For `boolean` it will instead\n *   return `'Boolean'`, and for `'string'`, it will instead return `'String'`. This is true of all underlying primitive types.\n *\n *   For all other datatypes, it will return the real class name. For example, `typeOf(new Map())` will return `'Map'`.\n *   `typeOf(Map)` will return `'Class'`. This is true of all internal and user defined types.\n * arguments:\n *   - name: value\n *     dataType: any\n *     desc: The value whose type you wish to discover.\n * return: |\n *   @types string; The name of the provided type, or the string `'undefined'` if the provided value has no type.\n * notes:\n *   - This method will look for a [Symbol.toStringTag](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag)\n *     key on the value provided... and if found, will use it to assist with finding the correct type name.\n *   - If the `value` provided is `undefined`, `null`, or `NaN`, then the type `'undefined'` will be returned.\n */\nexport function typeOf(value) {\n  if (value == null || Object.is(value, NaN))\n    return '';\n\n  if (Object.is(value, Infinity) || Object.is(value, -Infinity))\n    return '::Number';\n\n  let thisType = typeof value;\n  if (thisType === 'bigint')\n    return '::BigInt';\n\n  if (thisType === 'symbol')\n    return '::Symbol';\n\n  if (thisType !== 'object') {\n    if (thisType === 'function') {\n      let nativeTypeMeta = NATIVE_CLASS_TYPES_META.find((typeMeta) => (value === typeMeta[1]));\n      if (nativeTypeMeta)\n        return `[Class ::${nativeTypeMeta[0]}]`;\n\n      if (value.prototype && typeof value.prototype.constructor === 'function' && IS_CLASS.test('' + value.prototype.constructor))\n        return `[Class ${value.name}]`;\n\n      if (value.prototype && typeof value.prototype[Symbol.toStringTag] === 'function') {\n        let result = value.prototype[Symbol.toStringTag]();\n        if (result)\n          return `[Class ${result}]`;\n      }\n    }\n\n    return `::${thisType.charAt(0).toUpperCase()}${thisType.substring(1)}`;\n  }\n\n  if (Array.isArray(value))\n    return '::Array';\n\n  if (value instanceof String)\n    return '::String';\n\n  if (value instanceof Number)\n    return '::Number';\n\n  if (value instanceof Boolean)\n    return '::Boolean';\n\n  let nativeTypeMeta = NATIVE_CLASS_TYPES_META.find((typeMeta) => {\n    try {\n      return (typeMeta[0] !== 'Object' && value instanceof typeMeta[1]);\n    } catch (e) {\n      return false;\n    }\n  });\n  if (nativeTypeMeta)\n    return `::${nativeTypeMeta[0]}`;\n\n  if (typeof Math !== 'undefined' && value === Math)\n    return '::Math';\n\n  if (typeof JSON !== 'undefined' && value === JSON)\n    return '::JSON';\n\n  if (typeof Atomics !== 'undefined' && value === Atomics)\n    return '::Atomics';\n\n  if (typeof Reflect !== 'undefined' && value === Reflect)\n    return '::Reflect';\n\n  if (value[Symbol.toStringTag])\n    return (typeof value[Symbol.toStringTag] === 'function') ? value[Symbol.toStringTag]() : value[Symbol.toStringTag];\n\n  if (isPlainObject(value))\n    return '::Object';\n\n  return value.constructor.name || 'Object';\n}\n\nexport function isType(value, ...types) {\n  let valueType = typeOf(value);\n  for (let type of types) {\n    try {\n      if (typeOf(type, '::String') && valueType === type)\n        return true;\n      else if (typeof type === 'function' && value instanceof type)\n        return true;\n    } catch (e) {\n      continue;\n    }\n  }\n\n  return false;\n}\n\nexport function isValidNumber(value) {\n  if (Object.is(value, NaN) || Object.is(value, Infinity) || Object.is(value, -Infinity))\n    return false;\n\n  return isType(value, '::Number');\n}\n\nexport function isPlainObject(value) {\n  if (!value)\n    return false;\n\n  if (typeof value !== 'object')\n    return false;\n\n  if (value.constructor === Object || value.constructor == null)\n    return true;\n\n  return false;\n}\n\nexport function isPrimitive(value) {\n  if (value == null || Object.is(value, NaN))\n    return false;\n\n  if (typeof value === 'symbol')\n    return false;\n\n  if (Object.is(value, Infinity) || Object.is(value, -Infinity))\n    return false;\n\n  return isType(value, '::String', '::Number', '::Boolean', '::BigInt');\n}\n\nexport function isCollectable(value) {\n  if (value == null || Object.is(value, NaN) || Object.is(Infinity) || Object.is(-Infinity))\n    return false;\n\n  if (typeof value === 'symbol')\n    return false;\n\n  if (isType(value, '::String', '::Number', '::Boolean', '::BigInt'))\n    return false;\n\n  return true;\n}\n\nexport function isNOE(value) {\n  if (value == null)\n    return true;\n\n  if (Object.is(value, NaN))\n    return true;\n\n  if (value === '')\n    return true;\n\n  if (isType(value, '::String') && (/^[\\s\\r\\n]*$/).test(value))\n    return true;\n\n  if (isType(value.length, '::Number'))\n    return (value.length === 0);\n\n  if (isPlainObject(value) && Object.keys(value).length === 0)\n    return true;\n\n  return false;\n}\n\nexport function isNotNOE(value) {\n  return !isNOE(value);\n}\n\nexport function toCamelCase(value) {\n  return ('' + value)\n    .replace(/^\\W/, '')\n    .replace(/[\\W]+$/, '')\n    .replace(/([A-Z]+)/g, '-$1')\n    .toLowerCase()\n    .replace(/\\W+(.)/g, (m, p) => {\n      return p.toUpperCase();\n    })\n    .replace(/^(.)(.*)$/, (m, f, l) => `${f.toLowerCase()}${l}`);\n}\n\nexport function toSnakeCase(value) {\n  return ('' + value)\n    .replace(/[A-Z]+/g, (m, offset) => ((offset) ? `-${m.toLowerCase()}` : m.toLowerCase()))\n    .toLowerCase();\n}\n\nexport function bindMethods(_proto, skipProtos) {\n  let proto           = _proto;\n  let alreadyVisited  = new Set();\n\n  while (proto) {\n    if (proto === Object.prototype)\n      return;\n\n    let descriptors = Object.getOwnPropertyDescriptors(proto);\n    let keys        = Object.keys(descriptors).concat(Object.getOwnPropertySymbols(descriptors));\n\n    for (let i = 0, il = keys.length; i < il; i++) {\n      let key = keys[i];\n      if (key === 'constructor' || key === 'prototype')\n        continue;\n\n      if (alreadyVisited.has(key))\n        continue;\n\n      alreadyVisited.add(key);\n\n      let descriptor = descriptors[key];\n\n      // Can it be changed?\n      if (descriptor.configurable === false)\n        continue;\n\n      // If is getter, then skip\n      if (Object.prototype.hasOwnProperty.call(descriptor, 'get') || Object.prototype.hasOwnProperty.call(descriptor, 'set')) {\n        let newDescriptor = { ...descriptor };\n        if (newDescriptor.get)\n          newDescriptor.get = newDescriptor.get.bind(this);\n\n        if (newDescriptor.set)\n          newDescriptor.set = newDescriptor.set.bind(this);\n\n        Object.defineProperty(this, key, newDescriptor);\n        continue;\n      }\n\n      let value = descriptor.value;\n\n      // Skip prototype of Object\n      // eslint-disable-next-line no-prototype-builtins\n      if (Object.prototype.hasOwnProperty(key) && Object.prototype[key] === value)\n        continue;\n\n      if (typeof value !== 'function')\n        continue;\n\n      Object.defineProperty(this, key, { ...descriptor, value: value.bind(this) });\n    }\n\n    proto = Object.getPrototypeOf(proto);\n    if (proto === Object.prototype)\n      break;\n\n    if (skipProtos && skipProtos.indexOf(proto) >= 0)\n      break;\n  }\n}\n\nconst METADATA_WEAKMAP = new WeakMap();\n\nexport function metadata(target, key, value) {\n  let data = METADATA_WEAKMAP.get(target);\n  if (arguments.length === 1)\n    return data;\n\n  if (arguments.length === 2)\n    return (data) ? data.get(key) : undefined;\n\n  if (!data) {\n    if (!isCollectable(target))\n      throw new Error(`Unable to set metadata on provided object: ${(typeof target === 'symbol') ? target.toString() : target}`);\n\n    data = new Map();\n    METADATA_WEAKMAP.set(target, data);\n  }\n\n  data.set(key, value);\n\n  return value;\n}\n\nconst OBJ_ID_WEAKMAP = new WeakMap();\nlet idCount = 1n;\n\nexport function getObjID(obj) {\n  let id = OBJ_ID_WEAKMAP.get(obj);\n  if (id == null) {\n    let thisID = `${idCount++}`;\n    OBJ_ID_WEAKMAP.set(obj, thisID);\n\n    return thisID;\n  }\n\n  return id;\n}\n\nexport function nextTick(callback) {\n  if (typeof globalThis.requestAnimationFrame === 'function') {\n    globalThis.requestAnimationFrame(() => {\n      callback();\n    });\n  } else {\n    (new Promise((resolve) => {\n      resolve();\n    })).then(() => {\n      callback();\n    });\n  }\n}\n\nconst DYNAMIC_PROPERTY_VALUE      = Symbol.for('@mythix/mythix-ui/dynamic-property/constants/value');\nconst DYNAMIC_PROPERTY_CMT        = Symbol.for('@mythix/mythix-ui/dynamic-property/constants/clean-memory-timer');\nconst DYNAMIC_PROPERTY_IS_SETTING = Symbol.for('@mythix/mythix-ui/dynamic-property/constants/is-setting');\nconst DYNAMIC_PROPERTY_SET        = Symbol.for('@mythix/mythix-ui/dynamic-property/constants/set');\n\nexport class DynamicProperty extends EventTarget {\n  static [Symbol.hasInstance](instance) {\n    try {\n      if (instance && MYTHIX_TYPE in instance)\n        return (instance[MYTHIX_TYPE] === DYNAMIC_PROPERTY_TYPE);\n    } catch (e) {\n      return false;\n    }\n\n    return false;\n  }\n\n  static set = DYNAMIC_PROPERTY_SET;\n\n  constructor(defaultValue) {\n    super();\n\n    Object.defineProperties(this, {\n      [MYTHIX_TYPE]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        DYNAMIC_PROPERTY_TYPE,\n      },\n      [DYNAMIC_PROPERTY_VALUE]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        defaultValue,\n      },\n      [DYNAMIC_PROPERTY_CMT]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        null,\n      },\n      [DYNAMIC_PROPERTY_IS_SETTING]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        false,\n      },\n    });\n\n    let proxy = new Proxy(this, {\n      get:  (target, propName) => {\n        if (propName in target) {\n          let value = target[propName];\n          return (typeof value === 'function') ? value.bind(target) : value;\n        }\n\n        let value = target[DYNAMIC_PROPERTY_VALUE][propName];\n        return (value === 'function') ? value.bind(target[DYNAMIC_PROPERTY_VALUE]) : value;\n      },\n      set:  (target, propName, value) => {\n        if (propName in target)\n          target[propName] = value;\n        else\n          target[DYNAMIC_PROPERTY_VALUE][propName] = value;\n\n        return true;\n      },\n    });\n\n    return proxy;\n  }\n\n  [Symbol.toPrimitive](hint) {\n    if (hint === 'number')\n      return +this[DYNAMIC_PROPERTY_VALUE];\n    else if (hint === 'string')\n      return this.toString();\n\n    return this.valueOf();\n  }\n\n  toString() {\n    let value = this[DYNAMIC_PROPERTY_VALUE];\n    return (value && typeof value.toString === 'function') ? value.toString() : ('' + value);\n  }\n\n  valueOf() {\n    return this[DYNAMIC_PROPERTY_VALUE];\n  }\n\n  [DYNAMIC_PROPERTY_SET](_newValue) {\n    if (this[DYNAMIC_PROPERTY_IS_SETTING])\n      return;\n\n    let newValue = _newValue;\n    if (isType(newValue, DynamicProperty))\n      newValue = newValue.valueOf();\n\n    if (this[DYNAMIC_PROPERTY_VALUE] === newValue)\n      return;\n\n    try {\n      this[DYNAMIC_PROPERTY_IS_SETTING] = true;\n\n      let oldValue    = this[DYNAMIC_PROPERTY_VALUE];\n      let updateEvent = new Event('update');\n\n      updateEvent.originator = this;\n      updateEvent.oldValue = oldValue;\n      updateEvent.value = newValue;\n\n      this[DYNAMIC_PROPERTY_VALUE] = newValue;\n\n      this.dispatchEvent(updateEvent);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this[DYNAMIC_PROPERTY_IS_SETTING] = false;\n    }\n  }\n}\n\nconst VALID_JS_IDENTIFIER = /^[a-zA-Z_$][a-zA-Z0-9_$]*$/;\nfunction getContextCallArgs(context, ...extraContexts) {\n  let contextCallArgs = Array.from(\n    new Set(getAllPropertyNames(context).concat(\n      Object.keys(globalThis.mythixUI.globalScope || {}),\n      [ 'attributes', 'classList', '$$', 'i18n' ],\n      ...extraContexts.map((extraContext) => Object.keys(extraContext || {})),\n    )),\n  ).filter((name) => VALID_JS_IDENTIFIER.test(name));\n\n  return `{${contextCallArgs.join(',')}}`;\n}\n\nexport function getParentNode(element) {\n  if (!element)\n    return null;\n\n  if (element.parentNode && element.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE)\n    return metadata(element.parentNode, MYTHIX_SHADOW_PARENT);\n\n  if (!element.parentNode && element.nodeType === Node.DOCUMENT_FRAGMENT_NODE)\n    return metadata(element, MYTHIX_SHADOW_PARENT);\n\n  return element.parentNode;\n}\n\nexport function createScope(..._targets) {\n  const findPropNameScope = (target, propName) => {\n    if (target == null || Object.is(target, NaN))\n      return;\n\n    if (propName in target)\n      return target;\n\n    if (!(target instanceof Node))\n      return;\n\n    const fetchPublishContext = (element) => {\n      let currentElement = element;\n      if (!currentElement)\n        return;\n\n      let componentPublishContext;\n      do {\n        if (propName in currentElement)\n          return currentElement;\n\n        componentPublishContext = currentElement.publishContext;\n        if (typeof componentPublishContext === 'function')\n          break;\n\n        currentElement = getParentNode(currentElement);\n      } while (currentElement);\n\n      if (!componentPublishContext || !currentElement)\n        return;\n\n      let publishedContext = componentPublishContext.call(currentElement);\n      if (!publishedContext || !(propName in publishedContext))\n        return fetchPublishContext(getParentNode(currentElement));\n\n      return publishedContext;\n    };\n\n    return fetchPublishContext(target);\n  };\n\n  let targets         = _targets.filter(Boolean);\n  let firstElement    = targets.find((target) => (target instanceof Node)) || targets[0];\n  let baseContext     = {};\n  let fallbackContext = {\n    globalScope:  (globalThis.mythixUI && globalThis.mythixUI.globalScope),\n    i18n:         (path, defaultValue) => {\n      let languageProvider = specialClosest(firstElement, 'mythix-language-provider');\n      if (!languageProvider)\n        return defaultValue;\n\n      return languageProvider.i18n(path, defaultValue);\n    },\n    dynamicPropID,\n  };\n\n  targets = targets.concat(fallbackContext);\n  let proxy   = new Proxy(baseContext, {\n    ownKeys: () => {\n      let allKeys = [];\n\n      for (let target of targets)\n        allKeys = allKeys.concat(getAllPropertyNames(target));\n\n      let globalScope = (globalThis.mythixUI && globalThis.mythixUI.globalScope);\n      if (globalScope)\n        allKeys = allKeys.concat(Object.keys(globalScope));\n\n      return Array.from(new Set(allKeys));\n    },\n    has: (_, propName) => {\n      for (let target of targets) {\n        let scope = findPropNameScope(target, propName);\n        if (!scope)\n          continue;\n\n        return true;\n      }\n\n      let globalScope = (globalThis.mythixUI && globalThis.mythixUI.globalScope);\n      if (!globalScope)\n        return false;\n\n      return (propName in globalScope);\n    },\n    get: (_, propName) => {\n      for (let target of targets) {\n        let scope = findPropNameScope(target, propName);\n        if (!scope)\n          continue;\n\n        return scope[propName];\n      }\n\n      let globalScope = (globalThis.mythixUI && globalThis.mythixUI.globalScope);\n      if (!globalScope)\n        return;\n\n      return globalScope[propName];\n    },\n    set: (_, propName, value) => {\n      const doSet = (scope, propName, value) => {\n        if (isType(scope[propName], DynamicProperty))\n          scope[propName][DynamicProperty.set](value);\n        else\n          scope[propName] = value;\n\n        return true;\n      };\n\n      for (let target of targets) {\n        let scope = findPropNameScope(target, propName);\n        if (!scope)\n          continue;\n\n        return doSet(scope, propName, value);\n      }\n\n      let globalScope = (globalThis.mythixUI && globalThis.mythixUI.globalScope);\n      if (!globalScope)\n        return false;\n\n      return doSet(globalScope, propName, value);\n    },\n  });\n\n  fallbackContext.$$ = proxy;\n\n  return proxy;\n}\n\nconst EVENT_ACTION_JUST_NAME = /^%?[\\w.$]+$/;\nexport function createTemplateMacro({ prefix, body, scope }) {\n  let functionBody = body;\n  if (EVENT_ACTION_JUST_NAME.test(functionBody)) {\n    if (functionBody.charAt(0) === '%') {\n      functionBody = `(this.dynamicPropID || globalThis.mythixUI.globalScope.dynamicPropID)('${functionBody.substring(1).trim().replace(/[^\\w$]/g, '')}')`;\n    } else {\n      functionBody = `(() => {\n        try {\n          let ____$ = ${functionBody};\n          return (typeof ____$ === 'function') ? ____$.apply(this, Array.from(arguments).slice(1)) : ____$;\n        } catch (e) {\n          return this.${functionBody}.apply(this, Array.from(arguments).slice(1));\n        }\n      })();`;\n    }\n  }\n\n  let contextCallArgs = getContextCallArgs(scope);\n\n  functionBody = `${(prefix) ? `${prefix};` : ''}return ${(functionBody || '(void 0)').replace(/^\\s*return\\s+/, '').trim()};`;\n  return (new Function(contextCallArgs, functionBody)).bind(scope, scope);\n}\n\nexport function parseTemplateParts(text, _options) {\n  let options       = _options || {};\n  let scope         = options.scope;\n  let parts         = [];\n  let currentOffset = 0;\n\n  text.replace(/(?<!\\\\)(@@)(.+?)\\1/g, (m, start, macro, offset) => {\n    if (currentOffset < offset)\n      parts.push({ type: 'literal', value: text.substring(currentOffset, offset) });\n\n    currentOffset = offset + m.length;\n\n    let method  = createTemplateMacro({ body: macro, scope });\n    let value   = method();\n\n    parts.push({ type: 'macro', value, method });\n  });\n\n  if (currentOffset < text.length)\n    parts.push({ type: 'literal', value: text.substring(currentOffset) });\n\n  return parts;\n}\n\nexport function compileTemplateFromParts(parts) {\n  let result = parts\n    .map((part) => part.value)\n    .filter((item) => (item != null && item !== ''));\n\n  if (result.some((item) => (item[MYTHIX_TYPE] === ELEMENT_DEFINITION_TYPE || item[MYTHIX_TYPE] === QUERY_ENGINE_TYPE)))\n    return result;\n\n  if (result.some((item) => isType(item, '::String')))\n    return result.join('');\n\n  return (result.length < 2) ? result[0] : result;\n}\n\nconst FORMAT_TERM_ALLOWABLE_NODES = [ 3, 2 ]; // TEXT_NODE, ATTRIBUTE_NODE\nexport function formatNodeValue(node, _options) {\n  if (node.parentNode && (/^(style|script)$/).test(node.parentNode.localName))\n    return node.nodeValue;\n\n  if (!node || FORMAT_TERM_ALLOWABLE_NODES.indexOf(node.nodeType) < 0)\n    throw new TypeError('\"formatNodeValue\" unsupported node type provided. Only TEXT_NODE and ATTRIBUTE_NODE types are supported.');\n\n  let options       = _options || {};\n  let text          = node.nodeValue;\n  let templateParts = parseTemplateParts(text, options);\n\n  templateParts.forEach(({ value }) => {\n    if (options.bindToDynamicProperties !== false && isType(value, DynamicProperty)) {\n      value.addEventListener('update', () => {\n        let result = ('' + compileTemplateFromParts(templateParts));\n        if (result !== node.nodeValue)\n          node.nodeValue = result;\n      }, { capture: true });\n    }\n  });\n\n  let result = compileTemplateFromParts(templateParts);\n  if (result == null)\n    result = '';\n\n  return (options.disallowHTML === true) ? ('' + result) : result;\n}\n\nconst IS_TEMPLATE = /(?<!\\\\)@@/;\nexport function isTemplate(value) {\n  if (!isType(value, '::String'))\n    return false;\n\n  return IS_TEMPLATE.test(value);\n}\n\nconst IS_EVENT_NAME     = /^on/;\nconst EVENT_NAME_CACHE  = new Map();\n\nexport function getAllEventNamesForElement(element) {\n  let tagName = (!element.tagName) ? element : element.tagName.toUpperCase();\n  let cache   = EVENT_NAME_CACHE.get(tagName);\n  if (cache)\n    return cache;\n\n  let eventNames = [];\n\n  for (let key in element) {\n    if (key.length > 2 && IS_EVENT_NAME.test(key))\n      eventNames.push(key.toLowerCase());\n  }\n\n  EVENT_NAME_CACHE.set(tagName, eventNames);\n\n  return eventNames;\n}\n\nexport function bindEventToElement(element, eventName, _callback) {\n  let options = {};\n  let callback;\n\n  if (isPlainObject(_callback)) {\n    callback  = _callback.callback;\n    options   = _callback.options || {};\n  } else {\n    callback = _callback;\n  }\n\n  if (isType(callback, '::String'))\n    callback = createTemplateMacro({ prefix: 'let event=arguments[1]', body: callback, scope: this });\n\n  element.addEventListener(eventName, callback, options);\n\n  return { callback, options };\n}\n\nexport function fetchPath(obj, key, defaultValue) {\n  if (obj == null || Object.is(obj, NaN) || Object.is(obj, Infinity) || Object.is(obj, -Infinity))\n    return defaultValue;\n\n  if (key == null || Object.is(key, NaN) || Object.is(key, Infinity) || Object.is(key, -Infinity))\n    return defaultValue;\n\n  let parts         = key.split(/\\./g).filter(Boolean);\n  let currentValue  = obj;\n\n  for (let i = 0, il = parts.length; i < il; i++) {\n    let part = parts[i];\n    let nextValue = currentValue[part];\n    if (nextValue == null)\n      return defaultValue;\n\n    currentValue = nextValue;\n  }\n\n  if (globalThis.Node && currentValue && currentValue instanceof globalThis.Node && (currentValue.nodeType === Node.TEXT_NODE || currentValue.nodeType === Node.ATTRIBUTE_NODE))\n    return currentValue.nodeValue;\n\n  return (currentValue == null) ? defaultValue : currentValue;\n}\n\nconst IS_NUMBER = /^([-+]?)(\\d*(?:\\.\\d+)?)(e[-+]\\d+)?$/;\nconst IS_BOOLEAN = /^(true|false)$/;\n\nexport function coerce(value) {\n  if (value === 'null')\n    return null;\n\n  if (value === 'undefined')\n    return undefined;\n\n  if (value === 'NaN')\n    return NaN;\n\n  if (value === 'Infinity' || value === '+Infinity')\n    return Infinity;\n\n  if (value === '-Infinity')\n    return -Infinity;\n\n  if (IS_NUMBER.test(value))\n    // eslint-disable-next-line no-magic-numbers\n    return parseFloat(value, 10);\n\n  if (IS_BOOLEAN.test(value))\n    return (value === 'true');\n\n  return ('' + value);\n}\n\nconst CACHED_PROPERTY_NAMES = new WeakMap();\nconst SKIP_PROTOTYPES       = [\n  globalThis.HTMLElement,\n  globalThis.Node,\n  globalThis.Element,\n  globalThis.Object,\n  globalThis.Array,\n];\n\nexport function getAllPropertyNames(_obj) {\n  if (!isCollectable(_obj))\n    return [];\n\n  let cachedNames = CACHED_PROPERTY_NAMES.get(_obj);\n  if (cachedNames)\n    return cachedNames;\n\n  let obj   = _obj;\n  let names = new Set();\n\n  while (obj) {\n    let objNames = Object.getOwnPropertyNames(obj);\n    for (let i = 0, il = objNames.length; i < il; i++)\n      names.add(objNames[i]);\n\n    obj = Object.getPrototypeOf(obj);\n    if (obj && SKIP_PROTOTYPES.indexOf(obj.constructor) >= 0)\n      break;\n  }\n\n  let finalNames = Array.from(names);\n  CACHED_PROPERTY_NAMES.set(_obj, finalNames);\n\n  return finalNames;\n}\n\nconst LANG_PROVIDER_DYNAMIC_PROPERTY_CACHE = new WeakMap();\nexport function getDynamicPropertyForPath(keyPath, defaultValue) {\n  let instanceCache = LANG_PROVIDER_DYNAMIC_PROPERTY_CACHE.get(this);\n  if (!instanceCache) {\n    instanceCache = new Map();\n    LANG_PROVIDER_DYNAMIC_PROPERTY_CACHE.set(this, instanceCache);\n  }\n\n  let property = instanceCache.get(keyPath);\n  if (!property) {\n    property = new DynamicProperty(defaultValue);\n    instanceCache.set(keyPath, property);\n  }\n\n  return property;\n}\n\nexport function specialClosest(node, selector) {\n  if (!node || !selector)\n    return;\n\n  let currentNode = node;\n  while (currentNode && (typeof currentNode.matches !== 'function' || !currentNode.matches(selector)))\n    currentNode = getParentNode(currentNode);\n\n  return currentNode;\n}\n\nexport function sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms || 0);\n  });\n}\n\nexport function dynamicProp(name, defaultValue, setter) {\n  let dynamicProperty = new DynamicProperty(defaultValue);\n\n  Object.defineProperties(this, {\n    [name]: {\n      enumerable:   true,\n      configurable: true,\n      get:          () => dynamicProperty,\n      set:          (newValue) => {\n        if (typeof setter === 'function')\n          dynamicProperty[DynamicProperty.set](setter(newValue));\n        else\n          dynamicProperty[DynamicProperty.set](newValue);\n      },\n    },\n  });\n\n  return dynamicProperty;\n}\n\nconst DYNAMIC_PROP_REGISTRY = new Map();\nexport function dynamicPropID(id) {\n  let prop = DYNAMIC_PROP_REGISTRY.get(id);\n  if (prop)\n    return prop;\n\n  prop = new DynamicProperty('');\n  DYNAMIC_PROP_REGISTRY.set(id, prop);\n\n  return prop;\n}\n\nexport function globalStoreNameValuePairHelper(target, name, value) {\n  metadata(\n    target,\n    MYTHIX_NAME_VALUE_PAIR_HELPER,\n    [ name, value ],\n  );\n\n  return target;\n}\n\nconst REGISTERED_DISABLE_TEMPLATE_SELECTORS = new Set([ '[data-templates-disable]', 'mythix-for-each' ]);\nexport function getDisableTemplateEngineSelector() {\n  return Array.from(REGISTERED_DISABLE_TEMPLATE_SELECTORS).join(',');\n}\n\nexport function registerDisableTemplateEngineSelector(selector) {\n  REGISTERED_DISABLE_TEMPLATE_SELECTORS.add(selector);\n}\n\nexport function unregisterDisableTemplateEngineSelector(selector) {\n  REGISTERED_DISABLE_TEMPLATE_SELECTORS.delete(selector);\n}\n\nfunction globalStoreHelper(dynamic, args) {\n  if (args.length === 0)\n    return;\n\n  const setOnGlobal = (name, value) => {\n    let currentValue = globalThis.mythixUI.globalScope[name];\n    if (isType(currentValue, DynamicProperty)) {\n      globalThis.mythixUI.globalScope[name][DynamicProperty.set](value);\n      return currentValue;\n    }\n\n    if (isType(value, DynamicProperty)) {\n      Object.defineProperties(globalThis.mythixUI.globalScope, {\n        [name]: {\n          enumerable:   true,\n          configurable: true,\n          get:          () => value,\n          set:          (newValue) => {\n            value[DynamicProperty.set](newValue);\n          },\n        },\n      });\n\n      return value;\n    } else if (dynamic) {\n      let prop = dynamicPropID(name);\n      Object.defineProperties(globalThis.mythixUI.globalScope, {\n        [name]: {\n          enumerable:   true,\n          configurable: true,\n          get:          () => prop,\n          set:          (newValue) => {\n            prop[DynamicProperty.set](newValue);\n          },\n        },\n      });\n\n      prop[DynamicProperty.set](value);\n\n      return prop;\n    } else {\n      globalThis.mythixUI.globalScope[name] = value;\n      return value;\n    }\n  };\n\n  let nameValuePair = metadata(args[0], MYTHIX_NAME_VALUE_PAIR_HELPER);\n  if (nameValuePair) {\n    let [ name, value ] = nameValuePair;\n    setOnGlobal(name, value);\n  } else if (args.length > 1 && isType(args[0], '::String')) {\n    let name  = args[0];\n    let value = args[1];\n    setOnGlobal(name, value);\n  } else {\n    let value = args[0];\n    let name  = (typeof this.getIdentifier === 'function') ? this.getIdentifier() : (this.getAttribute('id') || this.getAttribute('name'));\n    if (!name)\n      throw new Error('\"mythixUI.globalStore\": \"name\" is unknown, so unable to store value');\n\n    setOnGlobal(name, value);\n  }\n}\n\nexport function globalStore(...args) {\n  return globalStoreHelper.call(this, false, args);\n}\n\nexport function globalStoreDynamic(...args) {\n  return globalStoreHelper.call(this, true, args);\n}\n","import * as Utils from './utils.js';\n\n/**\n *  type: Namespace\n *  name: Elements\n *  groupName: Elements\n *  desc: |\n *    `import { Elements } from 'mythix-ui-core@1.0';`\n *\n *    Utility and element building functions for the DOM.\n */\n\nexport const UNFINISHED_DEFINITION    = Symbol.for('@mythix/mythix-ui/constants/unfinished');\nexport const ELEMENT_DEFINITION_TYPE  = Symbol.for('@mythix/mythix-ui/types/MythixUI::ElementDefinition');\n\nconst QUERY_ENGINE_TYPE = Symbol.for('@mythix/mythix-ui/types/MythixUI::QueryEngine');\n\nconst IS_PROP_NAME    = /^prop\\$/;\nconst IS_TARGET_PROP  = /^prototype|constructor$/;\n\nexport class ElementDefinition {\n  static [Symbol.hasInstance](instance) {\n    try {\n      if (instance && Utils.MYTHIX_TYPE in instance)\n        return (instance[Utils.MYTHIX_TYPE] === ELEMENT_DEFINITION_TYPE);\n    } catch (e) {\n      return false;\n    }\n\n    return false;\n  }\n\n  constructor(tagName, attributes, children) {\n    Object.defineProperties(this, {\n      [Utils.MYTHIX_TYPE]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        ELEMENT_DEFINITION_TYPE,\n      },\n      'tagName': {\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        tagName,\n      },\n      'attributes': {\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        attributes || {},\n      },\n      'children': {\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        children || [],\n      },\n    });\n  }\n\n  toString() {\n    let tagName = this.tagName;\n    if (tagName === '#text')\n      return this.attributes.value;\n\n    let attrs = ((attributes) => {\n      let parts = [];\n\n      for (let [ attributeName, value ] of Object.entries(attributes)) {\n        if (IS_PROP_NAME.test(attributeName))\n          continue;\n\n        let name = this.toDOMAttributeName(attributeName);\n        if (value == null)\n          parts.push(name);\n        else\n          parts.push(`${name}=\"${encodeValue(value)}\"`);\n      }\n\n      return parts.join(' ');\n    })(this.attributes);\n\n    let children = ((children) => {\n      return children\n        .filter((child) => (child != null && child !== false && !Object.is(child, NaN)))\n        .map((child) => ('' + child))\n        .join('');\n    })(this.children);\n\n    return `<${tagName}${(attrs) ? ` ${attrs}` : ''}>${(isVoidTag(tagName)) ? '' : `${children}</${tagName}>`}`;\n  }\n\n  toDOMAttributeName(attributeName) {\n    return attributeName.replace(/([A-Z])/g, '-$1').toLowerCase();\n  }\n\n  build(ownerDocument, templateOptions) {\n    if (this.tagName === '#fragment')\n      return this.children.map((child) => child.build(ownerDocument, templateOptions));\n\n    let attributes    = this.attributes;\n    let namespaceURI  = attributes.namespaceURI;\n    let options;\n    let element;\n\n    if (this.attributes.is)\n      options = { is: this.attributes.is };\n\n    if (this.tagName === '#text')\n      return processElements.call(this, ownerDocument.createTextNode(attributes.value || ''), templateOptions);\n\n    if (namespaceURI)\n      element = ownerDocument.createElementNS(namespaceURI, this.tagName, options);\n    else if (isSVGElement(this.tagName))\n      element = ownerDocument.createElementNS('http://www.w3.org/2000/svg', this.tagName, options);\n    else\n      element = ownerDocument.createElement(this.tagName);\n\n    const eventNames = Utils.getAllEventNamesForElement(element);\n    const handleAttribute = (element, attributeName, _attributeValue) => {\n      let attributeValue      = _attributeValue;\n      let lowerAttributeName  = attributeName.toLowerCase();\n\n      if (eventNames.indexOf(lowerAttributeName) >= 0) {\n        Utils.bindEventToElement.call(\n          Utils.createScope(element, templateOptions.scope), // this\n          element,\n          lowerAttributeName.substring(2),\n          attributeValue,\n        );\n      } else {\n        let modifiedAttributeName = this.toDOMAttributeName(attributeName);\n        element.setAttribute(modifiedAttributeName, attributeValue);\n      }\n    };\n\n    // Dynamic bindings are not allowed for properties\n    const handleProperty = (element, propertyName, propertyValue) => {\n      let name = propertyName.replace(IS_PROP_NAME, '');\n      element[name] = propertyValue;\n    };\n\n    let attributeNames = Object.keys(attributes);\n    for (let i = 0, il = attributeNames.length; i < il; i++) {\n      let attributeName   = attributeNames[i];\n      let attributeValue  = attributes[attributeName];\n\n      if (IS_PROP_NAME.test(attributeName))\n        handleProperty(element, attributeName, attributeValue);\n      else\n        handleAttribute(element, attributeName, attributeValue);\n    }\n\n    let children = this.children;\n    if (children.length > 0) {\n      for (let i = 0, il = children.length; i < il; i++) {\n        let child         = children[i];\n        let childElement  = child.build(ownerDocument, templateOptions);\n\n        if (Array.isArray(childElement))\n          childElement.flat(Infinity).forEach((child) => element.appendChild(child));\n        else\n          element.appendChild(childElement);\n      }\n    }\n\n    return processElements.call(\n      this,\n      element,\n      {\n        ...templateOptions,\n        processEventCallbacks: false,\n      },\n    );\n  }\n}\n\nconst IS_HTML_SAFE_CHARACTER = /^[\\sa-zA-Z0-9_-]$/;\nexport function encodeValue(value) {\n  return value.replace(/./g, (m) => {\n    return (IS_HTML_SAFE_CHARACTER.test(m)) ? m : `&#${m.charCodeAt(0)};`;\n  });\n}\n\nconst IS_VOID_TAG = /^area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr$/i;\nexport function isVoidTag(tagName) {\n  return IS_VOID_TAG.test(tagName.split(':').slice(-1)[0]);\n}\n\nexport function processElements(_node, _options) {\n  let node = _node;\n  if (!node)\n    return node;\n\n  let options       = _options || {};\n  let scope         = options.scope;\n  if (!scope) {\n    scope = Utils.createScope(node);\n    options = { ...options, scope };\n  }\n\n  let disableTemplateEngineSelector = (options.forceTemplateEngine === true) ? undefined : options.disableTemplateEngineSelector;\n  let children                      = Array.from(node.childNodes);\n\n  if (options.forceTemplateEngine !== true && !disableTemplateEngineSelector) {\n    disableTemplateEngineSelector = Utils.getDisableTemplateEngineSelector();\n    options = { ...options, disableTemplateEngineSelector };\n  }\n\n  let isTemplateEngineDisabled = false;\n  if (disableTemplateEngineSelector && Utils.specialClosest(node, disableTemplateEngineSelector))\n    isTemplateEngineDisabled = true;\n\n  if (typeof options.helper === 'function') {\n    let result = options.helper.call(this, { scope, options, node, children, isTemplateEngineDisabled, disableTemplateEngineSelector });\n    if (result instanceof Node)\n      node = result;\n    else if (result === false)\n      return node;\n  }\n\n  if (node.nodeType === Node.TEXT_NODE || node.nodeType === Node.ATTRIBUTE_NODE) {\n    if (!isTemplateEngineDisabled) {\n      let result = Utils.formatNodeValue(node, options);\n      if (Array.isArray(result) && result.some((item) => (item[Utils.MYTHIX_TYPE] === ELEMENT_DEFINITION_TYPE || item[Utils.MYTHIX_TYPE] === QUERY_ENGINE_TYPE))) {\n        let ownerDocument = options.ownerDocument || scope.ownerDocument || node.ownerDocument || document;\n        let fragment      = ownerDocument.createDocumentFragment();\n\n        for (let item of result) {\n          if (item[Utils.MYTHIX_TYPE] === ELEMENT_DEFINITION_TYPE) {\n            let elements = item.build(ownerDocument, { scope });\n            if (!elements)\n              continue;\n\n            if (Array.isArray(elements))\n              elements.flat(Infinity).forEach((element) => fragment.appendChild(element));\n            else\n              fragment.appendChild(elements);\n          } else if (item[Utils.MYTHIX_TYPE] === QUERY_ENGINE_TYPE) {\n            item.appendTo(fragment);\n          } else {\n            let textNode = ownerDocument.createTextNode(('' + item));\n            fragment.appendChild(textNode);\n          }\n        }\n\n        return fragment;\n      } else if (result !== node.nodeValue) {\n        node.nodeValue =  result;\n      }\n    }\n\n    return node;\n  } else if (node.nodeType === Node.ELEMENT_NODE || node.nodeType === Node.DOCUMENT_NODE) {\n    let eventNames      = Utils.getAllEventNamesForElement(node);\n    let attributeNames  = node.getAttributeNames();\n\n    for (let i = 0, il = attributeNames.length; i < il; i++) {\n      let attributeName       = attributeNames[i];\n      let lowerAttributeName  = attributeName.toLowerCase();\n      let attributeValue      = node.getAttribute(attributeName);\n\n      if (eventNames.indexOf(lowerAttributeName) >= 0) {\n        if (options.processEventCallbacks !== false) {\n          Utils.bindEventToElement.call(\n            Utils.createScope(node, scope), // this\n            node,\n            lowerAttributeName.substring(2),\n            attributeValue,\n          );\n\n          node.removeAttribute(attributeName);\n        }\n      } else if (Utils.isTemplate(attributeValue)) {\n        let attributeNode = node.getAttributeNode(attributeName);\n        if (attributeNode)\n          attributeNode.nodeValue = Utils.formatNodeValue(attributeNode, { ...options, disallowHTML: true });\n      }\n    }\n  }\n\n  if (options.processChildren === false)\n    return node;\n\n  for (let childNode of children) {\n    let result = processElements.call(this, childNode, options);\n    if (result instanceof Node && result !== childNode && hasChild(node, childNode))\n      node.replaceChild(result, childNode);\n  }\n\n  return node;\n}\n\nexport function hasChild(parentNode, childNode) {\n  if (!parentNode || !childNode)\n    return false;\n\n  for (let child of Array.from(parentNode.childNodes)) {\n    if (child === childNode)\n      return true;\n  }\n\n  return false;\n}\n\nexport function build(tagName, defaultAttributes, scope) {\n  if (!tagName || !Utils.isType(tagName, '::String'))\n    throw new Error('Can not create an ElementDefinition without a \"tagName\".');\n\n  const finalizer = (..._children) => {\n    const wrangleChildren = (children) => {\n      return children.flat(Infinity).map((value) => {\n        if (value == null || Object.is(value, NaN))\n          return null;\n\n        if (typeof value === 'symbol')\n          return null;\n\n        if (value[UNFINISHED_DEFINITION])\n          return value();\n\n        if (value[Utils.MYTHIX_TYPE] === ELEMENT_DEFINITION_TYPE)\n          return value;\n\n        if (value[Utils.MYTHIX_TYPE] === QUERY_ENGINE_TYPE)\n          return wrangleChildren(value.getUnderlyingArray());\n\n        if (value instanceof Node)\n          return nodeToElementDefinition(value);\n\n        if (!Utils.isType(value, '::String', Utils.DynamicProperty))\n          return null;\n\n        return new ElementDefinition('#text', { value: ('' + value) });\n      }).flat(Infinity).filter(Boolean);\n    };\n\n    let children = wrangleChildren(_children || []);\n    return new ElementDefinition(tagName, scope, children);\n  };\n\n  let rootProxy = new Proxy(finalizer, {\n    get: (target, attributeName) => {\n      if (attributeName === UNFINISHED_DEFINITION)\n        return true;\n\n      if (typeof attributeName === 'symbol' || IS_TARGET_PROP.test(attributeName))\n        return target[attributeName];\n\n      if (!scope) {\n        let scopedProxy = build(tagName, defaultAttributes, Object.assign(Object.create(null), defaultAttributes || {}));\n        return scopedProxy[attributeName];\n      }\n\n      return new Proxy(\n        (value) => {\n          scope[attributeName] = value;\n          return rootProxy;\n        },\n        {\n          get: (target, propName) => {\n            if (attributeName === UNFINISHED_DEFINITION)\n              return true;\n\n            if (typeof attributeName === 'symbol' || IS_TARGET_PROP.test(attributeName))\n              return target[attributeName];\n\n            scope[attributeName] = true;\n            return rootProxy[propName];\n          },\n        },\n      );\n    },\n  });\n\n  return rootProxy;\n}\n\nexport function nodeToElementDefinition(node) {\n  if (node.nodeType === Node.TEXT_NODE)\n    return new ElementDefinition('#text', { value: ('' + node.nodeValue) });\n\n  if (node.nodeType !== Node.ELEMENT_NODE)\n    return;\n\n  let attributes = {};\n  for (let attributeName of node.getAttributeNames())\n    attributes[attributeName] = node.getAttribute(attributeName);\n\n  let children = Array.from(node.childNodes).map(nodeToElementDefinition);\n  return new ElementDefinition(node.tagName, attributes, children);\n}\n\nconst IS_TEMPLATE = /^(template)$/i;\n\n/**\n   * parent: Elements\n   * groupName: Elements\n   * desc: |\n   *   Almost like `Object.assign`, merge all component children into a single node (the `target`).\n   *\n   *   This is \"template intelligent\", meaning for `<template>` elements specifically, it will execute\n   *   `children = template.content.cloneNode(true).childNodes` to clone all the child nodes, and not\n   *   modify the original template. It is also template intelligent by the fact that if the `target` is\n   *   a template, it will add the children to `content` properly.\n   * arguments:\n   *   - name: target\n   *     dataTypes: Node\n   *     desc: |\n   *       The target Node to merge all children into. If this Node is a `<template>` Node, then it will\n   *       place all the merged children into `template.content`.\n   * notes:\n   *   - Any template Node will be cloned, and so the original will not be modified. All other nodes are **NOT**\n   *     cloned before the merge, and so will be stripped of their children.\n   *   - Make certain you deep clone any element first (except templates) if you don't want the provided elements\n   *     to be modified.\n   * return: |\n   *   @types Node; The provided `target`, with all children merged (added) into it.\n   */\nexport function mergeChildren(target, ...others) {\n  if (!(target instanceof Node))\n    return target;\n\n  let targetIsTemplate = IS_TEMPLATE.test(target.tagName);\n  for (let other of others) {\n    if (!(other instanceof Node))\n      continue;\n\n    let childNodes = (IS_TEMPLATE.test(other.tagName)) ? other.content.cloneNode(true).childNodes : other.childNodes;\n    for (let child of Array.from(childNodes)) {\n      let content = (IS_TEMPLATE.test(child.tagName)) ? child.content.cloneNode(true) : child;\n      if (targetIsTemplate)\n        target.content.appendChild(content);\n      else\n        target.appendChild(content);\n    }\n  }\n\n  return target;\n}\n\nconst IS_SVG_ELEMENT_NAME = /^(altglyph|altglyphdef|altglyphitem|animate|animateColor|animateMotion|animateTransform|animation|circle|clipPath|colorProfile|cursor|defs|desc|discard|ellipse|feblend|fecolormatrix|fecomponenttransfer|fecomposite|feconvolvematrix|fediffuselighting|fedisplacementmap|fedistantlight|fedropshadow|feflood|fefunca|fefuncb|fefuncg|fefuncr|fegaussianblur|feimage|femerge|femergenode|femorphology|feoffset|fepointlight|fespecularlighting|fespotlight|fetile|feturbulence|filter|font|fontFace|fontFaceFormat|fontFaceName|fontFaceSrc|fontFaceUri|foreignObject|g|glyph|glyphRef|handler|hKern|image|line|lineargradient|listener|marker|mask|metadata|missingGlyph|mPath|path|pattern|polygon|polyline|prefetch|radialgradient|rect|set|solidColor|stop|svg|switch|symbol|tbreak|text|textpath|tref|tspan|unknown|use|view|vKern)$/i;\nexport function isSVGElement(tagName) {\n  return IS_SVG_ELEMENT_NAME.test(tagName);\n}\n\nexport const Term = (value) => new ElementDefinition('#text', { value });\nexport const ElementGenerator = new Proxy(\n  {\n    Term,\n    $TEXT: Term,\n  },\n  {\n    get: function(target, propName) {\n      if (propName in target)\n        return target[propName];\n\n      if (IS_SVG_ELEMENT_NAME.test(propName)) {\n        // SVG elements\n        return build(propName, { namespaceURI: 'http://www.w3.org/2000/svg' });\n      }\n\n      return build(propName);\n    },\n    set: function() {\n      // NOOP\n      return true;\n    },\n  },\n);\n","import * as Utils     from './utils.js';\nimport * as Elements  from './elements.js';\n\nimport {\n  ElementDefinition,\n  UNFINISHED_DEFINITION,\n} from './elements.js';\n\nconst IS_INTEGER = /^\\d+$/;\n\nfunction isElement(value) {\n  if (!value)\n    return false;\n\n  // We have an Element or a Document\n  if (value.nodeType === Node.ELEMENT_NODE || value.nodeType === Node.DOCUMENT_NODE || value.nodeType === Node.DOCUMENT_FRAGMENT_NODE)\n    return true;\n\n  return false;\n}\n\nfunction isSlotted(element) {\n  if (!element)\n    return null;\n\n  return element.closest('slot');\n}\n\nfunction isNotSlotted(element) {\n  if (!element)\n    return null;\n\n  return !element.closest('slot');\n}\n\nfunction collectClassNames(...args) {\n  let classNames = [].concat(...args)\n      .flat(Infinity)\n      .map((part) => ('' + part).split(/\\s+/))\n      .flat(Infinity)\n      .filter(Boolean);\n\n  return classNames;\n}\n\nexport const QUERY_ENGINE_TYPE = Symbol.for('@mythix/mythix-ui/types/MythixUI::QueryEngine');\n\nexport class QueryEngine {\n  static [Symbol.hasInstance](instance) {\n    try {\n      if (instance && Utils.MYTHIX_TYPE in instance)\n        return (instance[Utils.MYTHIX_TYPE] === QUERY_ENGINE_TYPE);\n    } catch (e) {\n      return false;\n    }\n\n    return false;\n  }\n\n  static isElement    = isElement;\n  static isSlotted    = isSlotted;\n  static isNotSlotted = isNotSlotted;\n\n  static from = function(...args) {\n    if (args.length === 0)\n      return new QueryEngine([], { root: (isElement(this)) ? this : document, context: this });\n\n    const getOptions = () => {\n      let base = Object.create(null);\n      if (Utils.isPlainObject(args[argIndex]))\n        base = Object.assign(base, args[argIndex++]);\n\n      if (args[argIndex] instanceof QueryEngine)\n        base = Object.assign(Object.create(null), args[argIndex].getOptions() || {}, base);\n\n      return base;\n    };\n\n    const getRootElement = (optionsRoot) => {\n      if (isElement(optionsRoot))\n        return optionsRoot;\n\n      if (isElement(this))\n        return this;\n\n      return ((this && this.ownerDocument) || document);\n    };\n\n    let argIndex  = 0;\n    let options   = getOptions();\n    let root      = getRootElement(options.root);\n    let queryEngine;\n\n    options.root = root;\n    options.context = options.context || this;\n\n    if (args[argIndex] instanceof QueryEngine)\n      return new QueryEngine(args[argIndex].slice(), options);\n\n    if (Array.isArray(args[argIndex])) {\n      if (Utils.isType(args[argIndex + 1], '::Function'))\n        options.callback = args[1];\n\n      queryEngine = new QueryEngine(args[argIndex], options);\n    } else if (Utils.isType(args[argIndex], '::String')) {\n      options.selector = args[argIndex++];\n\n      if (Utils.isType(args[argIndex], '::Function'))\n        options.callback = args[argIndex++];\n\n      queryEngine = new QueryEngine(root.querySelectorAll(options.selector), options);\n    } else if (Utils.isType(args[argIndex], '::Function')) {\n      options.callback = args[argIndex++];\n\n      let result = options.callback.call(this, Elements.ElementGenerator, options);\n      if (!Array.isArray(result))\n        result = [ result ];\n\n      queryEngine = new QueryEngine(result, options);\n    }\n\n    if (options.invokeCallbacks !== false && typeof options.callback === 'function')\n      return queryEngine.map(options.callback);\n\n    return queryEngine;\n  };\n\n  getEngineClass() {\n    return QueryEngine;\n  }\n\n  constructor(elements, _options) {\n    let options = _options || {};\n\n    Object.defineProperties(this, {\n      [Utils.MYTHIX_TYPE]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        QUERY_ENGINE_TYPE,\n      },\n      '_mythixUIOptions': {\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        options,\n      },\n    });\n\n    Object.defineProperties(this, {\n      '_mythixUIElements': {\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        this.filterAndConstructElements(options.context, elements),\n      },\n    });\n\n    let rootProxy = new Proxy(this, {\n      get: (target, propName) => {\n        if (typeof propName === 'symbol') {\n          if (propName in target)\n            return target[propName];\n          else if (propName in target._mythixUIElements)\n            return target._mythixUIElements[propName];\n\n          return;\n        }\n\n        if (propName === 'length')\n          return target._mythixUIElements.length;\n\n        if (propName === 'prototype')\n          return target.prototype;\n\n        if (propName === 'constructor')\n          return target.constructor;\n\n        // Index lookup\n        if (IS_INTEGER.test(propName))\n          return target._mythixUIElements[propName];\n\n        if (propName in target)\n          return target[propName];\n\n        // Redirect any array methods:\n        //\n        // \"magicPropName\" is when the\n        // function name begins with \"$\",\n        // i.e. \"$filter\", or \"$map\". If\n        // this is the case, then the return\n        // value will always be coerced into\n        // a QueryEngine. Otherwise, it will\n        // only be coerced into a QueryEngine\n        // if EVERY element in the result is\n        // an \"elementy\" type value.\n        let magicPropName = (propName.charAt(0) === '$') ? propName.substring(1) : propName;\n        if (typeof Array.prototype[magicPropName] === 'function') {\n          return (...args) => {\n            let array   = target._mythixUIElements;\n            let result  = array[magicPropName](...args);\n\n            if (Array.isArray(result) && (magicPropName !== propName || result.every((item) => Utils.isType(item, ElementDefinition, Node, QueryEngine)))) {\n              const EngineClass = target.getEngineClass();\n              return new EngineClass(result, target.getOptions());\n            }\n\n            return result;\n          };\n        }\n\n        return target[propName];\n      },\n    });\n\n    return rootProxy;\n  }\n\n  getOptions() {\n    return this._mythixUIOptions;\n  }\n\n  getContext() {\n    let options = this.getOptions();\n    return options.context;\n  }\n\n  getRoot() {\n    let options = this.getOptions();\n    return options.root || document;\n  }\n\n  getUnderlyingArray() {\n    return this._mythixUIElements;\n  }\n\n  getOwnerDocument() {\n    return this.getRoot().ownerDocument || document;\n  }\n\n  filterAndConstructElements(context, elements) {\n    let finalElements = Array.from(elements).flat(Infinity).map((_item) => {\n      if (!_item)\n        return;\n\n      let item = _item;\n      if (item instanceof QueryEngine)\n        return item.getUnderlyingArray();\n\n      if (Utils.isType(item, Node))\n        return item;\n\n      if (item[UNFINISHED_DEFINITION])\n        item = item();\n\n      if (Utils.isType(item, '::String'))\n        item = Elements.Term(item);\n      else if (!Utils.isType(item, ElementDefinition))\n        return;\n\n      if (!context)\n        throw new Error('The \"context\" option for QueryEngine is required when constructing elements.');\n\n      return item.build(this.getOwnerDocument(), {\n        scope: Utils.createScope(context),\n      });\n    }).flat(Infinity).filter(Boolean);\n\n    return Array.from(new Set(finalElements));\n  }\n\n  select(...args) {\n    let argIndex  = 0;\n    let options   = Object.assign(Object.create(null), this.getOptions(), (Utils.isPlainObject(args[argIndex])) ? args[argIndex++] : {});\n\n    if (options.context && typeof options.context.$ === 'function')\n      return options.context.$.call(options.context, options, ...args.slice(argIndex));\n\n    const EngineClass = this.getEngineClass();\n    return EngineClass.from.call(options.context || this, options, ...args.slice(argIndex));\n  }\n\n  *entries() {\n    let elements = this._mythixUIElements;\n\n    for (let i = 0, il = elements.length; i < il; i++) {\n      let element = elements[i];\n      yield([i, element]);\n    }\n  }\n\n  *keys() {\n    for (let [ key, _ ] of this.entries())\n      yield key;\n  }\n\n  *values() {\n    for (let [ _, value ] of this.entries())\n      yield value;\n  }\n\n  *[Symbol.iterator]() {\n    return yield *this.values();\n  }\n\n  first(count) {\n    if (count == null || count === 0 || Object.is(count, NaN) || !Utils.isType(count, '::Number'))\n      return this.select([ this._mythixUIElements[0] ]);\n\n    return this.select(this._mythixUIElements.slice(Math.abs(count)));\n  }\n\n  last(count) {\n    if (count == null || count === 0 || Object.is(count, NaN) || !Utils.isType(count, '::Number'))\n      return this.select([ this._mythixUIElements[this._mythixUIElements.length - 1] ]);\n\n    return this.select(this._mythixUIElements.slice(Math.abs(count) * -1));\n  }\n\n  add(...elements) {\n    const EngineClass = this.getEngineClass();\n    return new EngineClass(this.slice().concat(...elements), this.getOptions());\n  }\n\n  subtract(...elements) {\n    let set = new Set(elements);\n\n    const EngineClass = this.getEngineClass();\n    return new EngineClass(this.filter((item) => {\n      return !set.has(item);\n    }), this.getOptions());\n  }\n\n  on(eventName, callback, options) {\n    for (let value of this.values()) {\n      if (!isElement(value))\n        continue;\n\n      value.addEventListener(eventName, callback, options);\n    }\n\n    return this;\n  }\n\n  off(eventName, callback, options) {\n    for (let value of this.values()) {\n      if (!isElement(value))\n        continue;\n\n      value.removeEventListener(eventName, callback, options);\n    }\n\n    return this;\n  }\n\n  appendTo(selectorOrElement) {\n    if (!this._mythixUIElements.length)\n      return this;\n\n    let element = selectorOrElement;\n    if (Utils.isType(selectorOrElement, '::String'))\n      element = this.getRoot().querySelector(selectorOrElement);\n\n    for (let child of this._mythixUIElements)\n      element.appendChild(child);\n  }\n\n  insertInto(selectorOrElement, referenceNode) {\n    if (!this._mythixUIElements.length)\n      return this;\n\n    let element = selectorOrElement;\n    if (Utils.isType(selectorOrElement, '::String'))\n      element = this.getRoot().querySelector(selectorOrElement);\n\n    let ownerDocument = this.getOwnerDocument();\n    let source        = this;\n\n    if (this._mythixUIElements.length > 1) {\n      let fragment = ownerDocument.createDocumentFragment();\n      for (let child of this._mythixUIElements)\n        fragment.appendChild(child);\n\n      source = [ fragment ];\n    }\n\n    element.insert(source[0], referenceNode);\n\n    return this;\n  }\n\n  replaceChildrenOf(selectorOrElement) {\n    let element = selectorOrElement;\n    if (Utils.isType(selectorOrElement, '::String'))\n      element = this.getRoot().querySelector(selectorOrElement);\n\n    while (element.childNodes.length)\n      element.removeChild(element.childNodes[0]);\n\n    return this.appendTo(element);\n  }\n\n  remove() {\n    for (let node of this._mythixUIElements) {\n      if (node && node.parentNode)\n        node.parentNode.removeChild(node);\n    }\n\n    return this;\n  }\n\n  classList(operation, ...args) {\n    let classNames = collectClassNames(args);\n    for (let node of this._mythixUIElements) {\n      if (node && node.classList) {\n        if (operation === 'toggle')\n          classNames.forEach((className) => node.classList.toggle(className));\n        else\n          node.classList[operation](...classNames);\n      }\n    }\n\n    return this;\n  }\n\n  addClass(...classNames) {\n    return this.classList('add', ...classNames);\n  }\n\n  removeClass(...classNames) {\n    return this.classList('remove', ...classNames);\n  }\n\n  toggleClass(...classNames) {\n    return this.classList('toggle', ...classNames);\n  }\n\n  slotted(yesNo) {\n    return this.filter((arguments.length === 0 || yesNo) ? isSlotted : isNotSlotted);\n  }\n\n  slot(slotName) {\n    return this.filter((element) => {\n      if (element && element.slot === slotName)\n        return true;\n\n      if (element.closest(`slot[name=\"${slotName.replace(/\"/g, '\\\\\"')}\"]`))\n        return true;\n\n      return false;\n    });\n  }\n}\n\n(globalThis.mythixUI = (globalThis.mythixUI || {})).QueryEngine = QueryEngine;\n","import * as Utils       from './utils.js';\nimport { QueryEngine }  from './query-engine.js';\nimport * as Elements    from './elements.js';\n\n/**\n *  type: Namespace\n *  name: Components\n *  groupName: Components\n *  desc: |\n *    `import { Components } from 'mythix-ui-core@1.0';`\n *\n *    Component and framework classes and functionality are found here.\n *  properties:\n *    - name: isMythixComponent\n *      dataType: symbol\n *      desc: |\n *        This symbol is used as an instance key for @see MythixUIComponent; instances.\n *\n *        For such instances, accessing this property simply returns `true`, allowing the caller\n *        to know if a specific instance (Element) is a Mythix UI component.\n *    - name: MYTHIX_INTERSECTION_OBSERVERS\n *      dataType: symbol\n *      desc: |\n *        This symbol is used as a @see Utils.metadata; key against elements with a `data-src` attribute.\n *        For elements with this attribute, set an [intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) is setup.\n *        When the intersection observer reports that the element is visible, then the URL specified by `data-src` is fetched, and dumped into\n *        the element as its children. This allows for dynamic \"partials\" that are loaded at run-time.\n *\n *        The value stored at this @see Utils.metadata; key is a Map of [intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver)\n *        instances. The keys of this map are the intersection observers themselves. The values are raw objects with the shape\n *        `{ wasVisible: boolean, ratioVisible: float, previousVisibility: boolean, visibility: boolean }`.\n */\n\nconst IS_ATTR_METHOD_NAME   = /^attr\\$(.*)$/;\nconst REGISTERED_COMPONENTS = new Set();\n\nexport const isMythixComponent              = Symbol.for('@mythix/mythix-ui/component/constants/is-mythix-component'); // @ref:Components.isMythixComponent\nexport const MYTHIX_INTERSECTION_OBSERVERS  = Symbol.for('@mythix/mythix-ui/component/constants/intersection-observers'); // @ref:Components.MYTHIX_INTERSECTION_OBSERVERS\nexport const MYTHIX_DOCUMENT_INITIALIZED    = Symbol.for('@mythix/mythix-ui/component/constants/document-initialized'); // @ref:Components.MYTHIX_DOCUMENT_INITIALIZED\n\nexport const MYTHIX_UI_COMPONENT_TYPE       = Symbol.for('@mythix/mythix-ui/types/MythixUI::MythixUIComponent');\n\n/***\n *  groupName: Components\n *  desc: |\n *    This the base class of all Mythix UI components. It inherits\n *    from HTMLElement, and so will end up being a [Web Component](https://developer.mozilla.org/en-US/docs/Web/API/Web_Components).\n *\n *    It is strongly recommended that you fully read up and understand\n *    [Web Components](https://developer.mozilla.org/en-US/docs/Web/API/Web_Components)\n *    if you don't already fully understand them. The core of Mythix UI is the\n *    [Web Component](https://developer.mozilla.org/en-US/docs/Web/API/Web_Components) standard,\n *    so you might end up a little confused if you don't already understand the foundation.\n *\n *  properties:\n *    - caption: \"... HTMLElement Instance Properties\"\n *      desc: \"All [HTMLElement Instance Properties](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement#instance_properties) are inherited from [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\"\n *      link: https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement#instance_properties\n *\n *    - name: isMythixComponent\n *      dataType: boolean\n *      caption: \"[static MythixUIComponent.isMythixComponent]\"\n *      desc: |\n *        Is `true` for Mythix UI components.\n *    - name: sensitiveTagName\n *      dataType: string\n *      caption: sensitiveTagName\n *      desc: |\n *        Works identically to [Element.tagName](https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName) for XML, where case is preserved.\n *        In HTML this works like [Element.tagName](https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName), but instead of the result\n *        always being UPPERCASE, the tag name will be returned with the casing preserved.\n *    - name: templateID\n *      dataType: string\n *      caption: templateID\n *      desc: |\n *        This is a convenience property that returns the value of `this.constructor.TEMPLATE_ID`\n *    - name: delayTimers\n *      dataType: \"Map&lt;string, Promise&gt;\"\n *      caption: delayTimers\n *      desc: |\n *        A Map instance that\n *        retains `setTimeout` ids so that @see MythixUIComponent.debounce; can properly function. Keys are @see MythixUIComponent.debounce;\n *        timer ids (of type `string`). Values are Promise instances.\n *        Each promise instance also has a special key `timerID` that contains a `setTimeout` id of a javascript timer.\n *      notes:\n *        - ⚠️ Use at your own risk. This is Mythix UI internal code that might change in the future.\n *      see:\n *        - MythixUIComponent.debounce\n *    - name: shadow\n *      dataType: \"[ShadowRoot](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot)\"\n *      caption: shadow\n *      desc: |\n *        The shadow root of this component (or `null` if none).\n *      notes:\n *        - This is the cached result of calling @see MythixUIComponent.createShadowDOM; when\n *          the component is first initialized.\n *    - name: template\n *      dataType: \"[template element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template)\"\n *      caption: template\n *      desc: |\n *        The [template](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template) element for this\n *        component, or `null` if there is no template found for the component.\n *      notes:\n *        - This is the cached result of calling @see MythixUIComponent.getComponentTemplate; when\n *          the component is first initialized.\n***/\n\nexport class MythixUIComponent extends HTMLElement {\n  static [Symbol.hasInstance](instance) {\n    try {\n      if (instance && Utils.MYTHIX_TYPE in instance)\n        return (instance[Utils.MYTHIX_TYPE] === MYTHIX_UI_COMPONENT_TYPE);\n    } catch (e) {\n      return false;\n    }\n\n    return false;\n  }\n\n  static compileStyleForDocument = compileStyleForDocument;\n  static register = function(_name, _Klass) {\n    let name = _name || this.tagName;\n\n    if (!customElements.get(name)) {\n      let Klass = _Klass || this;\n      Klass.observedAttributes = Klass.compileAttributeMethods(Klass);\n      customElements.define(name, Klass);\n\n      let registerEvent = new Event('mythix-component-registered');\n      registerEvent.componentName = name;\n      registerEvent.component = Klass;\n\n      if (typeof document !== 'undefined')\n        document.dispatchEvent(registerEvent);\n    }\n\n    return this;\n  };\n\n  static compileAttributeMethods = function(Klass) {\n    let proto = Klass.prototype;\n    let names = Utils.getAllPropertyNames(proto)\n      .filter((name) => IS_ATTR_METHOD_NAME.test(name))\n      .map((originalName) => {\n        let name = originalName.match(IS_ATTR_METHOD_NAME)[1];\n        if (REGISTERED_COMPONENTS.has(Klass))\n          return name;\n\n        let descriptor = getDescriptorFromPrototypeChain(proto, originalName);\n\n        // If we have a \"value\" then the\n        // user did it wrong... so just\n        // make this the \"setter\"\n        let method = descriptor.value;\n        if (method)\n          return name;\n\n        let originalGet = descriptor.get;\n        if (originalGet) {\n          Object.defineProperties(proto, {\n            [name]: {\n              enumerable:   false,\n              configurable: true,\n              get:          function() {\n                let currentValue  = this.getAttribute(name);\n                let context       = Object.create(this);\n                context.value = currentValue;\n                return originalGet.call(context, currentValue);\n              },\n              set:          function(newValue) {\n                this.setAttribute(name, newValue);\n              },\n            },\n          });\n        }\n\n        return Utils.toSnakeCase(name);\n      });\n\n    REGISTERED_COMPONENTS.add(Klass);\n\n    return names;\n  };\n\n  set attr$dataMythixSrc([ newValue, oldValue ]) {\n    this.awaitFetchSrcOnVisible(newValue, oldValue);\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Called when the component is added to the DOM.\n   * arguments:\n   *   - name: mutationRecord\n   *     dataTypes: MutationRecord\n   *     desc: |\n   *       The MutationRecord instance that that caused this method to be called.\n   */\n  onMutationAdded() {}\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Called when the component is removed from the DOM.\n   * arguments:\n   *   - name: mutationRecord\n   *     dataTypes: MutationRecord\n   *     desc: |\n   *       The MutationRecord instance that that caused this method to be called.\n   */\n  onMutationRemoved() {}\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Called when an element is added as a child.\n   * arguments:\n   *   - name: node\n   *     dataTypes: Element\n   *     desc: |\n   *       The child element being added.\n   *   - name: mutationRecord\n   *     dataTypes: MutationRecord\n   *     desc: |\n   *       The MutationRecord instance that that caused this method to be called.\n   */\n  onMutationChildAdded() {}\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Called when a child element is removed.\n   * arguments:\n   *   - name: node\n   *     dataTypes: Element\n   *     desc: |\n   *       The child element being removed.\n   *   - name: mutationRecord\n   *     dataTypes: MutationRecord\n   *     desc: |\n   *       The MutationRecord instance that that caused this method to be called.\n   */\n  onMutationChildRemoved() {}\n\n  static isMythixComponent = isMythixComponent;\n\n  constructor() {\n    super();\n\n    Object.defineProperties(this, {\n      [Utils.MYTHIX_TYPE]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        MYTHIX_UI_COMPONENT_TYPE,\n      },\n      [isMythixComponent]: { // @ref:MythixUIComponent.isMythixComponent\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        isMythixComponent,\n      },\n    });\n\n    Utils.bindMethods.call(this, this.constructor.prototype /*, [ HTMLElement.prototype ]*/);\n\n    Object.defineProperties(this, {\n      'sensitiveTagName': { // @ref:MythixUIComponent.sensitiveTagName\n        enumerable:   false,\n        configurable: true,\n        get:          () => ((this.prefix) ? `${this.prefix}:${this.localName}` : this.localName),\n      },\n      'templateID': { // @ref:MythixUIComponent.templateID\n        writable:     false,\n        enumerable:   false,\n        configurable: true,\n        value:        this.constructor.TEMPLATE_ID,\n      },\n      'delayTimers': { // @ref:MythixUIComponent.delayTimers\n        writable:     false,\n        enumerable:   false,\n        configurable: true,\n        value:        new Map(),\n      },\n      'documentInitialized': { // @ref:MythixUIComponent.documentInitialized\n        enumerable:   false,\n        configurable: true,\n        get:          () => Utils.metadata(this.constructor, MYTHIX_DOCUMENT_INITIALIZED),\n        set:          (value) => {\n          Utils.metadata(this.constructor, MYTHIX_DOCUMENT_INITIALIZED, !!value);\n        },\n      },\n    });\n\n    Object.defineProperties(this, {\n      'shadow': { // @ref:MythixUIComponent.shadow\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        this.createShadowDOM(),\n      },\n      'template': {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        this.getComponentTemplate(),\n      },\n    });\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   A convenience method for getting and setting attributes. If only one argument is provided\n   *   to this method, then it will act as a getter, getting the attribute specified by name.\n   *\n   *   If however two or more arguments are provided, then this is an attribute setter.\n   *\n   *   If the provided value is `undefined`, `null`, or `false`, then the attribute will be\n   *   removed.\n   *\n   *   If the provided value is `true`, then the attribute's value will be set to an empty string `''`.\n   *\n   *   Any other value is converted to a string and set as the attribute's value.\n   * arguments:\n   *   - name: name\n   *     dataTypes: string\n   *     desc: |\n   *       The name of the attribute to operate on.\n   *   - name: value\n   *     dataTypes: any\n   *     desc: |\n   *       If `undefined`, `null`, or `false`, remove the named attribute.\n   *       If `true`, set the named attribute's value to an empty string `''`.\n   *       For any other value, first convert it into a string, and then set the named attribute's value to the resulting string.\n   * return: |\n   *   1. @types string; If a single argument is provided, then return the value of the specified named attribute.\n   *   2. @types this; If more than one argument is provided, then set the specified attribute to the specified value,\n   *      and return `this` (to allow for chaining).\n   */\n  attr(name, value) {\n    if (arguments.length > 1) {\n      if (value == null || value === false)\n        this.removeAttribute(name);\n      else\n        this.setAttribute(name, (value === true) ? '' : ('' + value));\n\n      return this;\n    }\n\n    return this.getAttribute(name);\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Inject a new style sheet via a `<style>` element dynamically at run-time.\n   *\n   *   This method allows the caller to inject dynamic styles at run-time.\n   *   It will only inject the styles once, no matter how many times the\n   *   method is called--as long as the style content itself doesn't change.\n   *\n   *   The content is hashed via SHA256, and the hash is used as the style sheet id. This\n   *   allows you to call the method inside a component's @see MythixUIComponent.mounted;\n   *   method, without needing to worry about duplicating the styles over and over again.\n   * arguments:\n   *   - name: content\n   *     dataTypes: string\n   *     desc: |\n   *       The CSS stylesheet content to inject into a `<style>` element. This content is\n   *       used to generate an `id` for the `<style>` element, so that it only gets added\n   *       to the `document` once.\n   *   - name: media\n   *     dataTypes: string\n   *     default: \"'screen'\"\n   *     optional: true\n   *     desc: |\n   *       What to set the `media` attribute of the created `<style>` element to. Defaults\n   *       to `'screen'`.\n   * notes:\n   *   - ⚠️ It is often better to simply add a `<style>` element to your component's HTML template.\n   *     However, sometimes truly dynamic styles are needed, where the content won't be known\n   *     until runtime. This is the proper use case for this method.\n   *   - ⚠️ Please educated yourself (unlike people who love React) and do not overuse dynamic or inline styles.\n   *     While the result of this method is certainly a step above inline styles, this method has\n   *     [great potential to cause harm](https://worldofdev.info/6-reasons-why-you-shouldnt-style-inline/)\n   *     and spread your own ignorance to others. Use with **CARE**!\n   * return: |\n   *   @types Element; The `<style>` element for the specified style.\n   * examples:\n   *   - |\n   *     ```javascript\n   *     import { MythixUIComponent } from 'mythix-ui-core@1.0';\n   *\n   *     class MyComponent extends MythixUIComponent {\n   *       static tagName = 'my-component';\n   *\n   *       // ...\n   *\n   *       mounted() {\n   *         let { sidebarWidth } = this.loadUserPreferences();\n   *         this.injectStyleSheet(`nav.sidebar { width: ${sidebarWidth}px; }`, 'screen');\n   *       }\n   *     }\n   *\n   *     MyComponent.register();\n   *     ```\n   */\n  injectStyleSheet(content, media = 'screen') {\n    let styleID       = `IDSTYLE${Utils.SHA256(`${this.sensitiveTagName}:${content}:${media}`)}`;\n    let ownerDocument = this.ownerDocument || document;\n    let styleElement  = ownerDocument.querySelector(`style#${styleID}`);\n\n    if (styleElement)\n      return styleElement;\n\n    styleElement = ownerDocument.createElement('style');\n    styleElement.setAttribute('data-mythix-for', this.sensitiveTagName);\n    styleElement.setAttribute('id', styleID);\n    if (media)\n      styleElement.setAttribute('media', media);\n\n    styleElement.innerHTML = content;\n\n    document.head.appendChild(styleElement);\n\n    return styleElement;\n  }\n\n  processElements(node, _options) {\n    let options = _options || {};\n    if (!options.scope)\n      options = { ...options, scope: this.$$ };\n\n    return Elements.processElements(node, options);\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Get the parent Node of this element.\n   *\n   * notes:\n   *   - ⚠️ Unlike [Node.parentNode](https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode), this\n   *     will also search across Shadow DOM boundaries.\n   *   - ⚠️ **Searching across Shadow DOM boundaries only works for Mythix UI components!**\n   *   - Searching across Shadow DOM boundaries is accomplished via leveraging @see MythixUIComponent.metadata; for\n   *     `this` component. When a `null` parent is encountered, `getParentNode` will look for @see MythixUIComponent.metadata?caption=metadata; key `Utils.MYTHIX_SHADOW_PARENT`\n   *     (a symbol) on `this`. If found, the result is considered the [parent Node](https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode) of `this` component.\n   *\n   * return: |\n   *   @types Node; The parent node, if there is any, or `null` otherwise.\n   */\n  getParentNode() {\n    return Utils.getParentNode(this);\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   This is a replacement for [Element.attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow)\n   *   with one notable difference: It runs Mythix UI framework specific code after a shadow is attached.\n   *\n   *   Currently, the method completes the following actions:\n   *   1. Call `super.attachShadow(options)` to actually attach a Shadow DOM\n   *   2. Assign @see MythixUIComponent.metadata?caption=metadata; to the resulting `shadow`, using the key `Utils.MYTHIX_SHADOW_PARENT`, and value of `this`. @sourceRef _shadowMetadataAssignment; This allows @see getParentNode; to later find the parent of the shadow.\n   *   3. `return shadow`\n   * arguments:\n   *   - name: options\n   *     dataTypes: object\n   *     desc: |\n   *       [options](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#options) for [Element.attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow)\n   * notes:\n   *   - This is just a wrapper for [Element.attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow) that executes\n   *     custom framework functionality after the `super` call.\n   * return: |\n   *   @types ShadowRoot; The ShadowRoot instance created by [Element.attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow).\n   */\n  attachShadow(options) {\n    // Check environment support\n    if (typeof super.attachShadow !== 'function')\n      return;\n\n    let shadow = super.attachShadow(options);\n    Utils.metadata(shadow, Utils.MYTHIX_SHADOW_PARENT, this); // @ref:_shadowMetadataAssignment\n\n    return shadow;\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   A stub for developers to control the Shadow DOM of the component.\n   *\n   *   By default, this method will simply call @see MythixUIComponent.attachShadow; in `\"open\"` `mode`.\n   *\n   *   Developers can overload this to do nothing (have no Shadow DOM for a specific component for example),\n   *   or to do something else, such as specify they would like their component to be in `\"closed\"` `mode`.\n   *\n   *   The result of this method is assigned to `this.shadow` inside the `constructor` of the component.\n   * arguments:\n   *   - name: options\n   *     dataTypes: object\n   *     desc: |\n   *       [options](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#options) for [Element.attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow)\n   * notes:\n   *   - All this does is call `this.attachShadow`. Its purpose is for the developer to control\n   *     what happens with the component's Shadow DOM.\n   * return: |\n   *   @types ShadowRoot; The ShadowRoot instance created by @see MythixUIComponent.attachShadow;.\n   */\n  createShadowDOM(options) {\n    return this.attachShadow({ mode: 'open', ...(options || {}) });\n  }\n\n  mergeChildren(target, ...others) {\n    return Elements.mergeChildren(target, ...others);\n  }\n\n  getComponentTemplate(nameOrID) {\n    if (!this.ownerDocument)\n      return;\n\n    if (nameOrID) {\n      let result = this.ownerDocument.getElementById(nameOrID);\n      if (!result)\n        result = this.ownerDocument.querySelector(`template[data-mythix-component-name=\"${nameOrID}\" i],template[data-for=\"${nameOrID}\" i]`);\n\n      return result;\n    }\n\n    if (this.templateID)\n      return this.ownerDocument.getElementById(this.templateID);\n\n    return this.ownerDocument.querySelector(`template[data-mythix-component-name=\"${this.sensitiveTagName}\" i],template[data-for=\"${this.sensitiveTagName}\" i]`);\n  }\n\n  appendExternalToShadowDOM() {\n    if (!this.shadow)\n      return;\n\n    let ownerDocument = (this.ownerDocument || document);\n    let elements      = ownerDocument.head.querySelectorAll('[data-for]');\n\n    for (let element of Array.from(elements)) {\n      let selector = element.getAttribute('data-for');\n      if (Utils.isNOE(selector))\n        continue;\n\n      if (!this.matches(selector))\n        continue;\n\n      this.shadow.appendChild(element.cloneNode(true));\n    }\n  }\n\n  appendTemplateToShadowDOM(_template) {\n    if (!this.shadow)\n      return;\n\n    let template = _template || this.template;\n    if (template) {\n      ensureDocumentStyles.call(this, this.ownerDocument, this.sensitiveTagName, template);\n\n      let formattedTemplate = this.processElements(template.content.cloneNode(true));\n      this.shadow.appendChild(formattedTemplate);\n    }\n  }\n\n  connectedCallback() {\n    this.setAttribute('data-mythix-component-name', this.sensitiveTagName);\n\n    this.appendExternalToShadowDOM();\n    this.appendTemplateToShadowDOM();\n    this.processElements(this);\n\n    this.mounted();\n\n    this.documentInitialized = true;\n\n    Utils.nextTick(() => {\n      this.classList.add('mythix-ready');\n    });\n  }\n\n  disconnectedCallback() {\n    this.unmounted();\n  }\n\n  awaitFetchSrcOnVisible(newSrc) {\n    if (this.visibilityObserver) {\n      this.visibilityObserver.unobserve(this);\n      this.visibilityObserver = null;\n    }\n\n    if (!newSrc)\n      return;\n\n    let observer = visibilityObserver(({ wasVisible, disconnect }) => {\n      if (!wasVisible)\n        this.fetchSrc(this.getAttribute('data-mythix-src'));\n\n      disconnect();\n\n      this.visibilityObserver = null;\n    }, { elements: [ this ] });\n\n    Object.defineProperties(this, {\n      'visibilityObserver': {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        observer,\n      },\n    });\n  }\n\n  attributeChangedCallback(...args) {\n    let [\n      name,\n      oldValue,\n      newValue,\n    ] = args;\n\n    if (oldValue !== newValue) {\n      let magicName   = `attr$${Utils.toCamelCase(name)}`;\n      let descriptor  = getDescriptorFromPrototypeChain(this, magicName);\n      if (descriptor && typeof descriptor.set === 'function') {\n        // Call setter\n        this[magicName] = [ args[2], args[1] ].concat(args.slice(3));\n        return;\n      }\n    }\n\n    return this.attributeChanged(...args);\n  }\n\n  adoptedCallback(...args) {\n    return this.adopted(...args);\n  }\n\n  mounted() {}\n  unmounted() {}\n  attributeChanged() {}\n  adopted() {}\n\n  get $$() {\n    return Utils.createScope(this);\n  }\n\n  select(...args) {\n    let argIndex    = 0;\n    let options     = (Utils.isPlainObject(args[argIndex])) ? Object.assign(Object.create(null), args[argIndex++]) : {};\n    let queryEngine = QueryEngine.from.call(this, { root: this, ...options, invokeCallbacks: false }, ...args.slice(argIndex));\n    let shadowNodes;\n\n    options = queryEngine.getOptions();\n\n    if (options.shadow !== false && options.selector && options.root === this) {\n      shadowNodes = Array.from(\n        QueryEngine.from.call(\n          this,\n          { root: this.shadow },\n          options.selector,\n          options.callback,\n        ).values(),\n      );\n    }\n\n    if (shadowNodes)\n      queryEngine = queryEngine.add(shadowNodes);\n\n    if (options.slotted !== true)\n      queryEngine = queryEngine.slotted(false);\n\n    if (typeof options.callback === 'function')\n      return this.select(queryEngine.map(options.callback));\n\n    return queryEngine;\n  }\n\n  build(callback) {\n    let result = [ callback(Elements.ElementGenerator, {}) ].flat(Infinity).map((item) => {\n      if (item && item[Elements.UNFINISHED_DEFINITION])\n        return item();\n\n      return item;\n    }).filter(Boolean);\n\n    return (result.length < 2) ? result[0] : new Elements.ElementDefinition('#fragment', {}, result);\n  }\n\n  $build(callback) {\n    return QueryEngine.from.call(this, [ this.build(callback) ].flat(Infinity));\n  }\n\n  isAttributeTruthy(name) {\n    if (!this.hasAttribute(name))\n      return false;\n\n    let value = this.getAttribute(name);\n    if (value === '' || value === 'true')\n      return true;\n\n    return false;\n  }\n\n  getIdentifier() {\n    return this.getAttribute('id') || this.getAttribute('name') || this.getAttribute('data-name') || Utils.toCamelCase(this.sensitiveTagName);\n  }\n\n  metadata(key, value) {\n    return Utils.metadata(this, key, value);\n  }\n\n  dynamicProp(name, defaultValue, setter, _context) {\n    return Utils.dynamicProp.call(_context || this, name, defaultValue, setter);\n  }\n\n  dynamicData(obj) {\n    let keys = Object.keys(obj);\n    let data = Object.create(null);\n\n    for (let i = 0, il = keys.length; i < il; i++) {\n      let key   = keys[i];\n      let value = obj[key];\n      if (typeof value === 'function')\n        continue;\n\n      Utils.dynamicProp.call(data, key, value);\n    }\n\n    return data;\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   A self-resetting timeout. This method expects an `id` argument (or will generate one from the provided\n   *   callback method if not provided). It uses this provided `id` to create a timeout. This timeout has a special feature\n   *   however that differentiates it from a normal `setTimeout` call: if you call `this.debounce` again with the\n   *   same `id` **before** the time runs out, then it will automatically reset the timer. In short, only the last call\n   *   to `this.debounce` (given the same id) will take effect (unless the specified timeout is reached between calls).\n   * return: |\n   *   This method returns a specialized Promise instance. The instance is specialized because the following properties\n   *   are injected into it:\n   *   1. `resolve(resultValue)` - When called, resolves the promise with the first provided argument\n   *   2. `reject(errorValue)` - When called, rejects the promise with the first provided argument\n   *   3. `status()` - When called, will return the fulfillment status of the promise, as a `string`, one of: `\"pending\", \"fulfilled\"`, or `\"rejected\"`\n   *   4. `id<string>` - A randomly generated ID for this promise\n   *\n   *   See @see Utils.createResolvable;\n   * arguments:\n   *   - name: callback\n   *     dataTypes: function\n   *     desc: |\n   *       The method to call when the timeout has been met.\n   *   - name: timeMS\n   *     dataTypes: number\n   *     optional: true\n   *     default: 0\n   *     desc: |\n   *       The number of milliseconds to wait before calling `callback`.\n   *   - name: id\n   *     dataTypes: string\n   *     optional: true\n   *     default: \"null\"\n   *     desc: |\n   *       The identifier for this debounce timer. If not provided, then one\n   *       will be generated for you based on the provided callback.\n   * notes:\n   *   - Though not required, it is faster and less problematic to provide your own `id` argument\n   */\n  debounce(callback, timeMS, _id) {\n    var id = _id;\n\n    // If we don't get an id from the user, then guess the id by turning the function\n    // into a string (raw source) and use that for an id instead\n    if (id == null) {\n      id = ('' + callback);\n\n      // If this is a transpiled code, then an async generator will be used for async functions\n      // This wraps the real function, and so when converting the function into a string\n      // it will NOT be unique per call-site. For this reason, if we detect this issue,\n      // we will go the \"slow\" route and create a stack trace, and use that for the unique id\n      if (id.match(/asyncGeneratorStep/)) {\n        id = (new Error()).stack;\n        console.warn('mythix-ui warning: \"this.delay\" called without a specified \"id\" parameter. This will result in a performance hit. Please specify and \"id\" argument for your call: \"this.delay(callback, ms, \\'some-custom-call-site-id\\')\"');\n      }\n    } else {\n      id = ('' + id);\n    }\n\n    let promise = this.delayTimers.get(id);\n    if (promise) {\n      if (promise.timerID)\n        clearTimeout(promise.timerID);\n\n      promise.reject('cancelled');\n    }\n\n    promise = Utils.createResolvable();\n    this.delayTimers.set(id, promise);\n\n    // Let's not complain about\n    // uncaught errors\n    promise.catch(() => {});\n\n    promise.timerID = setTimeout(async () => {\n      try {\n        let result = await callback();\n        promise.resolve(result);\n      } catch (error) {\n        console.error('Error encountered while calling \"delay\" callback: ', error, callback.toString());\n        promise.reject(error);\n      }\n    }, timeMS || 0);\n\n    return promise;\n  }\n\n  classes(..._args) {\n    let args = _args.flat(Infinity).map((item) => {\n      if (Utils.isType(item, '::String'))\n        return item.trim();\n\n      if (Utils.isPlainObject(item)) {\n        let keys  = Object.keys(item);\n        let items = [];\n\n        for (let i = 0, il = keys.length; i < il; i++) {\n          let key   = keys[i];\n          let value = item[key];\n          if (!value)\n            continue;\n\n          items.push(key);\n        }\n\n        return items;\n      }\n\n      return null;\n    }).flat(Infinity).filter(Boolean);\n\n    return Array.from(new Set(args)).join(' ');\n  }\n\n  async fetchSrc(srcURL) {\n    if (!srcURL)\n      return;\n\n    try {\n      await loadPartialIntoElement.call(this, srcURL);\n      this.classList.add('mythix-ready');\n    } catch (error) {\n      console.error(`\"${this.sensitiveTagName}\": Failed to load specified resource: ${srcURL} (resolved to: ${error.url})`, error);\n    }\n  }\n}\n\nexport function getIdentifier(target) {\n  if (!target)\n    return 'undefined';\n\n  if (typeof target.getIdentifier === 'function')\n    return target.getIdentifier.call(target);\n\n  if (target instanceof Element)\n    return target.getAttribute('id') || target.getAttribute('name') || target.getAttribute('data-name') || Utils.toCamelCase(target.localName);\n\n  return 'undefined';\n}\n\nfunction formatRuleSet(rule, callback) {\n  if (!rule.selectorText)\n    return rule.cssText;\n\n  let _body   = rule.cssText.substring(rule.selectorText.length).trim();\n  let result  = (callback(rule.selectorText, _body) || []).filter(Boolean);\n  if (!result)\n    return '';\n\n  return result.join(' ');\n}\n\nfunction cssRulesToSource(cssRules, callback) {\n  return Array.from(cssRules || []).map((rule) => {\n    let ruleStr = formatRuleSet(rule, callback);\n    return `${cssRulesToSource(rule.cssRules, callback)}${ruleStr}`;\n  }).join('\\n\\n');\n}\n\nfunction compileStyleForDocument(elementName, styleElement) {\n  const handleHost = (m, type, _content) => {\n    let content = (!_content) ? _content : _content.replace(/^\\(/, '').replace(/\\)$/, '');\n\n    if (type === ':host') {\n      if (!content)\n        return elementName;\n\n      // Element selector?\n      if ((/^[a-zA-Z_]/).test(content))\n        return `${content}[data-mythix-component-name=\"${elementName}\"]`;\n\n      return `${elementName}${content}`;\n    } else {\n      return `${content} ${elementName}`;\n    }\n  };\n\n  return cssRulesToSource(\n    styleElement.sheet.cssRules,\n    (_selector, body) => {\n      let selector = _selector;\n      let tags     = [];\n\n      let updatedSelector = selector.replace(/(['\"])(?:\\\\.|[^\\1])+?\\1/, (m) => {\n        let index = tags.length;\n        tags.push(m);\n        return `@@@TAG[${index}]@@@`;\n      }).split(',').map((selector) => {\n        let modified = selector.replace(/(:host(?:-context)?)(\\(\\s*[^)]+?\\s*\\))?/, handleHost);\n        return (modified === selector) ? null : modified;\n      }).filter(Boolean).join(',').replace(/@@@TAG\\[(\\d+)\\]@@@/, (m, index) => {\n        return tags[+index];\n      });\n\n      if (!updatedSelector)\n        return;\n\n      return [ updatedSelector, body ];\n    },\n  );\n}\n\nexport function ensureDocumentStyles(ownerDocument, componentName, template) {\n  let objID             = Utils.getObjID(template);\n  let templateID        = Utils.SHA256(objID);\n  let templateChildren  = Array.from(template.content.childNodes);\n  let index             = 0;\n\n  for (let templateChild of templateChildren) {\n    if (!(/^style$/i).test(templateChild.tagName))\n      continue;\n\n    let styleID = `IDSTYLE${templateID}${++index}`;\n    if (!ownerDocument.head.querySelector(`style#${styleID}`)) {\n      let clonedStyleElement = templateChild.cloneNode(true);\n      ownerDocument.head.appendChild(clonedStyleElement);\n\n      let newStyleSheet = compileStyleForDocument(componentName, clonedStyleElement);\n      ownerDocument.head.removeChild(clonedStyleElement);\n\n      let styleNode = ownerDocument.createElement('style');\n      styleNode.setAttribute('data-mythix-for', this.sensitiveTagName);\n      styleNode.setAttribute('id', styleID);\n      styleNode.innerHTML = newStyleSheet;\n\n      document.head.appendChild(styleNode);\n    }\n  }\n}\n\nfunction getDescriptorFromPrototypeChain(startProto, descriptorName) {\n  let thisProto = startProto;\n  let descriptor;\n\n  while (thisProto && !(descriptor = Object.getOwnPropertyDescriptor(thisProto, descriptorName)))\n    thisProto = Object.getPrototypeOf(thisProto);\n\n  return descriptor;\n}\n\nconst SCHEME_RE     = /^[\\w-]+:\\/\\//;\nconst HAS_FILENAME  = /\\.[^/.]+$/;\n\nexport function resolveURL(rootLocation, _urlish, magic) {\n  let urlish = _urlish;\n  if (urlish instanceof URL)\n    return urlish;\n\n  if (!urlish)\n    return new URL(rootLocation);\n\n  if (urlish instanceof Location)\n    return new URL(urlish);\n\n  if (!Utils.isType(urlish, '::String'))\n    return;\n\n  const internalResolve = (_location, _urlPart, magic) => {\n    let originalURL = urlish;\n    if (SCHEME_RE.test(urlish))\n      return { url: new URL(urlish), originalURL: urlish };\n\n    // Magic!\n    if (magic === true && !HAS_FILENAME.test(urlish)) {\n      let parts     = urlish.split('/').map((part) => part.trim()).filter(Boolean);\n      let lastPart  = parts[parts.length - 1];\n      if (lastPart)\n        urlish = `${urlish.replace(/\\/+$/, '')}/${lastPart}.html`;\n    }\n\n    let location = new URL(_location);\n    return {\n      url: new URL(`${location.origin}${location.pathname}${urlish}`.replace(/\\/{2,}/g, '/')),\n      originalURL,\n    };\n  };\n\n  let {\n    url,\n    originalURL,\n  } = internalResolve(rootLocation, urlish.toString(), magic);\n\n  if (typeof globalThis.mythixUI.urlResolver === 'function') {\n    let fileName;\n    let path;\n\n    url.pathname.replace(/^(.*\\/)([^/]+)$/, (m, first, second) => {\n      path = first.replace(/\\/+$/, '/');\n      if (path.charAt(path.length - 1) !== '/')\n        path = `${path}/`;\n\n      fileName = second;\n      return m;\n    });\n\n    let newSrc = globalThis.mythixUI.urlResolver.call(this, { src: originalURL, url, path, fileName });\n    if (newSrc === false) {\n      console.warn(`\"mythix-require\": Not loading \"${originalURL}\" because the global \"mythixUI.urlResolver\" requested I not do so.`);\n      return;\n    }\n\n    if (newSrc !== originalURL)\n      url = resolveURL.call(this, rootLocation, newSrc, magic);\n  }\n\n  return url;\n}\n\nconst IS_TEMPLATE         = /^(template)$/i;\nconst IS_SCRIPT           = /^(script)$/i;\nconst REQUIRE_CACHE       = new Map();\nconst RESOLVE_SRC_ELEMENT = /^script|link|style|mythix-language-pack|mythix-require$/i;\n\nexport function importIntoDocumentFromSource(ownerDocument, location, _url, sourceString, _options) {\n  let options   = _options || {};\n  let url       = resolveURL.call(this, location, _url, options.magic);\n  let fileName;\n  let baseURL   = new URL(`${url.origin}${url.pathname.replace(/[^/]+$/, (m) => {\n    fileName = m;\n    return '';\n  })}${url.search}${url.hash}`);\n\n  let template = ownerDocument.createElement('template');\n  template.innerHTML = sourceString;\n\n  let children = Array.from(template.content.children).sort((a, b) => {\n    let x = a.tagName;\n    let y = b.tagName;\n\n    // eslint-disable-next-line eqeqeq\n    if (x == y)\n      return 0;\n\n    return (x < y) ? 1 : -1;\n  });\n\n  const fileNameToElementName = (fileName) => {\n    return fileName.trim().replace(/\\..*$/, '').replace(/\\b[A-Z]|[^A-Z][A-Z]/g, (_m) => {\n      let m = _m.toLowerCase();\n      return (m.length < 2) ? `-${m}` : `${m.charAt(0)}-${m.charAt(1)}`;\n    }).replace(/-{2,}/g, '-').replace(/^[^a-z]*/, '').replace(/[^a-z]*$/, '');\n  };\n\n  let guessedElementName  = fileNameToElementName(fileName);\n  let context             = {\n    guessedElementName,\n    children,\n    ownerDocument,\n    template,\n    url,\n    baseURL,\n    fileName,\n  };\n\n  if (typeof options.preProcess === 'function') {\n    template = context.template = options.preProcess.call(this, context);\n    children = Array.from(template.content.children);\n  }\n\n  let nodeHandler   = options.nodeHandler;\n  let templateCount = children.reduce((sum, element) => ((IS_TEMPLATE.test(element.tagName)) ? (sum + 1) : sum), 0);\n\n  context.templateCount = templateCount;\n\n  const resolveElementSrcAttribute = (element, baseURL) => {\n    // Resolve \"src\" attribute, since we are\n    // going to be moving the element around\n    let src = element.getAttribute('src');\n    if (src) {\n      src = resolveURL.call(this, baseURL, src, false);\n      element.setAttribute('src', src.toString());\n    }\n\n    return element;\n  };\n\n  for (let child of children) {\n    if (options.magic && RESOLVE_SRC_ELEMENT.test(child.localName))\n      child = resolveElementSrcAttribute(child, baseURL);\n\n    if (IS_TEMPLATE.test(child.tagName)) { // <template>\n      if (templateCount === 1 && child.getAttribute('data-for') == null && child.getAttribute('data-mythix-component-name') == null) {\n        console.warn(`${url}: <template> is missing a \"data-for\" attribute, linking it to its owner component. Guessing \"${guessedElementName}\".`);\n        child.setAttribute('data-for', guessedElementName);\n      }\n\n      if (typeof nodeHandler === 'function' && nodeHandler.call(this, child, { ...context, isTemplate: true, isHandled: true }) === false)\n        continue;\n\n      // append to head\n      let elementName = (child.getAttribute('data-for') || child.getAttribute('data-mythix-component-name'));\n      if (!ownerDocument.body.querySelector(`[data-for=\"${elementName}\" i],[data-mythix-component-name=\"${elementName}\" i]`))\n        ownerDocument.body.appendChild(child);\n    } else if (IS_SCRIPT.test(child.tagName)) { // <script>\n      let childClone = ownerDocument.createElement(child.tagName);\n      for (let attributeName of child.getAttributeNames())\n        childClone.setAttribute(attributeName, child.getAttribute(attributeName));\n\n      let src = child.getAttribute('src');\n      if (src) {\n        src = resolveURL.call(this, baseURL, src, false);\n        childClone.setAttribute('src', src.toString());\n      } else {\n        childClone.setAttribute('type', 'module');\n        childClone.innerHTML = child.textContent;\n      }\n\n      if (typeof nodeHandler === 'function' && nodeHandler.call(this, child, { ...context, isScript: true, isHandled: true }) === false)\n        continue;\n\n      let styleID = `ID${Utils.SHA256(`${guessedElementName}:${childClone.innerHTML}`)}`;\n      if (!childClone.getAttribute('id'))\n        childClone.setAttribute('id', styleID);\n\n      // append to head\n      if (!ownerDocument.querySelector(`script#${styleID}`))\n        ownerDocument.head.appendChild(childClone);\n    } else if ((/^(link|style)$/i).test(child.tagName)) { // <link> & <style>\n      let isStyle = (/^style$/i).test(child.tagName);\n      if (typeof nodeHandler === 'function' && nodeHandler.call(this, child, { ...context, isStyle, isLink: !isStyle, isHandled: true }) === false)\n        continue;\n\n      let id = `ID${Utils.SHA256(child.outerHTML)}`;\n      if (!child.getAttribute('id'))\n        child.setAttribute('id', id);\n\n      // append to head\n      if (!ownerDocument.querySelector(`${child.tagName}#${id}`))\n        ownerDocument.head.appendChild(child);\n    } else if ((/^meta$/i).test(child.tagName)) { // <meta>\n      if (typeof nodeHandler === 'function')\n        nodeHandler.call(this, child, { ...context, isMeta: true, isHandled: true });\n\n      // do nothing with these tags\n      continue;\n    } else { // Everything else\n      let isHandled = false;\n\n      if (child.localName === 'mythix-language-pack') {\n        let langPackID = `ID${Utils.SHA256(`${guessedElementName}:${child.outerHTML}`)}`;\n        if (!child.getAttribute('id'))\n          child.setAttribute('id', langPackID);\n\n        let languageProvider = this.closest('mythix-language-provider');\n        if (!languageProvider)\n          languageProvider = document.querySelector('mythix-language-provider');\n\n        if (languageProvider) {\n          if (!languageProvider.querySelector(`mythix-language-pack#${langPackID}`))\n            languageProvider.insertBefore(child, languageProvider.firstChild);\n\n          isHandled = true;\n        } // else do nothing... let it be dumped into the dom later\n      }\n\n      if (typeof nodeHandler === 'function')\n        nodeHandler.call(this, child, { ...context, isHandled });\n    }\n  }\n\n  if (typeof options.postProcess === 'function') {\n    template = context.template = options.postProcess.call(this, context);\n    children = Array.from(template.content.children);\n  }\n\n  return context;\n}\n\nexport async function require(urlOrName, _options) {\n  let options       = _options || {};\n  let ownerDocument = options.ownerDocument || document;\n  let url           = resolveURL.call(this, ownerDocument.location, urlOrName, options.magic);\n  let cacheKey;\n\n  if (!(/^(false|no-store|reload|no-cache)$/).test(url.searchParams.get('cache'))) {\n    if (url.searchParams.get('cacheParams') !== 'true') {\n      let cacheKeyURL = new URL(`${url.origin}${url.pathname}`);\n      cacheKey = cacheKeyURL.toString();\n    } else {\n      cacheKey = url.toString();\n    }\n\n    let cachedResponse = REQUIRE_CACHE.get(cacheKey);\n    if (cachedResponse) {\n      cachedResponse = await cachedResponse;\n      if (cachedResponse.response && cachedResponse.response.ok)\n        return { url, response: cachedResponse.response, ownerDocument, cached: true };\n    }\n  }\n\n  let promise = globalThis.fetch(url, options.fetchOptions).then(\n    async (response) => {\n      if (!response.ok) {\n        if (cacheKey)\n          REQUIRE_CACHE.delete(cacheKey);\n\n        let error = new Error(`${response.status} ${response.statusText}`);\n        error.url = url;\n        throw error;\n      }\n\n      let body = await response.text();\n      response.text = async () => body;\n      response.json = async () => JSON.parse(body);\n\n      return { url, response, ownerDocument, cached: false };\n    },\n    (error) => {\n      console.error('Error from Mythix UI \"require\": ', error);\n\n      if (cacheKey)\n        REQUIRE_CACHE.delete(cacheKey);\n\n      error.url = url;\n      throw error;\n    },\n  );\n\n  REQUIRE_CACHE.set(cacheKey, promise);\n\n  return await promise;\n}\n\nexport async function loadPartialIntoElement(src, _options) {\n  let options = _options || {};\n\n  let {\n    ownerDocument,\n    url,\n    response,\n  } = await require.call(\n    this,\n    src,\n    {\n      ownerDocument: this.ownerDocument || document,\n    },\n  );\n\n  let body = await response.text();\n  while (this.childNodes.length)\n    this.removeChild(this.childNodes[0]);\n\n  let scopeData = Object.create(null);\n  for (let [ key, value ] of url.searchParams.entries())\n    scopeData[key] = Utils.coerce(value);\n\n  importIntoDocumentFromSource.call(\n    this,\n    ownerDocument,\n    ownerDocument.location,\n    url,\n    body,\n    {\n      nodeHandler: (node, { isHandled, isTemplate }) => {\n        if ((isTemplate || !isHandled) && (node.nodeType === Node.ELEMENT_NODE || node.nodeType === Node.TEXT_NODE)) {\n          this.appendChild(\n            Elements.processElements.call(\n              this,\n              node,\n              {\n                ...options,\n                scope: Utils.createScope(scopeData, options.scope),\n              },\n            ),\n          );\n        }\n      },\n    },\n  );\n}\n\nexport function visibilityObserver(callback, _options) {\n  const intersectionCallback = (entries) => {\n    for (let i = 0, il = entries.length; i < il; i++) {\n      let entry   = entries[i];\n      let element = entry.target;\n      if (!entry.isIntersecting)\n        continue;\n\n      let elementObservers = Utils.metadata(element, MYTHIX_INTERSECTION_OBSERVERS);\n      if (!elementObservers) {\n        elementObservers = new Map();\n        Utils.metadata(element, MYTHIX_INTERSECTION_OBSERVERS, elementObservers);\n      }\n\n      let data = elementObservers.get(observer);\n      if (!data) {\n        data = { wasVisible: false, ratioVisible: entry.intersectionRatio };\n        elementObservers.set(observer, data);\n      }\n\n      if (entry.intersectionRatio > data.ratioVisible)\n        data.ratioVisible = entry.intersectionRatio;\n\n      data.previousVisibility = (data.visibility === undefined) ? data.visibility : data.visibility;\n      data.visibility = (entry.intersectionRatio > 0.0);\n\n      callback({ ...data, entry, element, index: i, disconnect: () => observer.unobserve(element) });\n\n      if (data.visibility && !data.wasVisible)\n        data.wasVisible = true;\n    }\n  };\n\n  let options = {\n    root:       null,\n    threshold:  0.0,\n    ...(_options || {}),\n  };\n\n  let observer  = new IntersectionObserver(intersectionCallback, options);\n  let elements  = (_options || {}).elements || [];\n\n  for (let i = 0, il = elements.length; i < il; i++)\n    observer.observe(elements[i]);\n\n  return observer;\n}\n\nconst NO_OBSERVER = Object.freeze({\n  wasVisible:         false,\n  ratioVisible:       0.0,\n  visibility:         false,\n  previousVisibility: false,\n});\n\nexport function getVisibilityMeta(element, observer) {\n  let elementObservers = Utils.metadata(element, MYTHIX_INTERSECTION_OBSERVERS);\n  if (!elementObservers)\n    return NO_OBSERVER;\n\n  return elementObservers.get(observer) || NO_OBSERVER;\n}\n","import * as Component from './components.js';\n\nconst IS_TEMPLATE       = /^(template)$/i;\nconst TEMPLATE_TEMPLATE = /^(\\*|\\|\\*|\\*\\|)$/;\n\nexport class MythixUIRequire extends Component.MythixUIComponent {\n  async mounted() {\n    let src = this.getAttribute('src');\n\n    try {\n      let {\n        ownerDocument,\n        url,\n        response,\n        cached,\n      } = await Component.require.call(\n        this,\n        src,\n        {\n          magic:          true,\n          ownerDocument:  this.ownerDocument || document,\n        },\n      );\n\n      if (cached)\n        return;\n\n      let body = await response.text();\n      Component.importIntoDocumentFromSource.call(\n        this,\n        ownerDocument,\n        ownerDocument.location,\n        url,\n        body,\n        {\n          magic:        true,\n          nodeHandler:  (node, { isHandled }) => {\n            if (!isHandled && node.nodeType === Node.ELEMENT_NODE)\n              document.body.appendChild(node);\n          },\n          preProcess:   ({ template, children }) => {\n            let starTemplate = children.find((child) => {\n              let dataFor = child.getAttribute('data-for');\n              return (IS_TEMPLATE.test(child.tagName) && TEMPLATE_TEMPLATE.test(dataFor));\n            });\n\n            if (!starTemplate)\n              return template;\n\n            let dataFor = starTemplate.getAttribute('data-for');\n            for (let child of children) {\n              if (child === starTemplate)\n                continue;\n\n              if (IS_TEMPLATE.test(child.tagName)) { // <template>\n                let starClone = starTemplate.content.cloneNode(true);\n                if (dataFor === '*|')\n                  child.content.insertBefore(starClone, child.content.childNodes[0] || null);\n                else\n                  child.content.appendChild(starClone);\n              }\n            }\n\n            starTemplate.parentNode.removeChild(starTemplate);\n\n            return template;\n          },\n        },\n      );\n    } catch (error) {\n      console.error(`\"mythix-require\": Failed to load specified resource: ${src}`, error);\n    }\n  }\n\n  async fetchSrc() {\n    // NOOP\n  }\n}\n\n(globalThis.mythixUI = (globalThis.mythixUI || {})).MythixUIRequire = MythixUIRequire;\n\nif (typeof customElements !== 'undefined' && !customElements.get('mythix-require'))\n  customElements.define('mythix-require', MythixUIRequire);\n","import deepMerge  from 'deepmerge';\nimport * as Utils from './utils.js';\n\nimport {\n  MythixUIComponent,\n  require,\n} from './components.js';\n\nexport class MythixUILanguagePack extends MythixUIComponent {\n  static tagName = 'mythix-language-pack';\n\n  createShadowDOM() {\n    // NOOP\n  }\n\n  getComponentTemplate() {\n    // NOOP\n  }\n\n  set attr$dataMythixSrc([ value ]) {\n    // NOOP... Trap this because we\n    // don't want to load a partial here\n  }\n\n  onMutationAdded(mutation) {\n    // When added to the DOM, ensure that we were\n    // added to the root of a language provider...\n    // If not, then move ourselves to the root\n    // of the language provider.\n    let parentLanguageProvider = this.closest('mythix-language-provider');\n    if (parentLanguageProvider && parentLanguageProvider !== mutation.target)\n      Utils.nextTick(() => parentLanguageProvider.insertBefore(this, parentLanguageProvider.firstChild));\n  }\n}\n\nconst IS_JSON_ENCTYPE                 = /^application\\/json/i;\nconst LANGUAGE_PACK_INSERT_GRACE_TIME = 50;\n\nexport class MythixUILanguageProvider extends MythixUIComponent {\n  static tagName = 'mythix-language-provider';\n\n  set attr$lang([ newValue, oldValue ]) {\n    this.loadAllLanguagePacksForLanguage(newValue, oldValue);\n  }\n\n  onMutationChildAdded(node) {\n    if (node.localName === 'mythix-language-pack') {\n      this.debounce(() => {\n        // Reload language packs after additions\n        this.loadAllLanguagePacksForLanguage(this.getCurrentLocale());\n      }, LANGUAGE_PACK_INSERT_GRACE_TIME, 'reloadLanguagePacks');\n    }\n  }\n\n  constructor() {\n    super();\n\n    Object.defineProperties(this, {\n      'terms': {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        Object.create(null),\n      },\n    });\n  }\n\n  i18n(_path, defaultValue) {\n    let path    = `global.i18n.${_path}`;\n    let result  = Utils.fetchPath(this.terms, path);\n\n    if (result == null)\n      return Utils.getDynamicPropertyForPath.call(this, path, (defaultValue == null) ? '' : defaultValue);\n\n    return result;\n  }\n\n  getCurrentLocale() {\n    return this.getAttribute('lang') || (this.ownerDocument || document).childNodes[1].getAttribute('lang') || 'en';\n  }\n\n  mounted() {\n    if (!this.getAttribute('lang'))\n      this.setAttribute('lang', (this.ownerDocument || document).childNodes[1].getAttribute('lang') || 'en');\n  }\n\n  createShadowDOM() {\n    // NOOP\n  }\n\n  getComponentTemplate() {\n    // NOOP\n  }\n\n  getSourcesForLang(lang) {\n    return this.select(`mythix-language-pack[lang^=\"${lang.replace(/\"/g, '\\\\\"')}\"]`);\n  }\n\n  loadAllLanguagePacksForLanguage(_lang) {\n    let lang            = _lang || 'en';\n    let sourceElements  = this.getSourcesForLang(lang).filter((sourceElement) => Utils.isNotNOE(sourceElement.getAttribute('src')));\n    if (!sourceElements || !sourceElements.length) {\n      console.warn(`\"mythix-language-provider\": No \"mythix-language-pack\" tag found for specified language \"${lang}\"`);\n      return;\n    }\n\n    this.loadAllLanguagePacks(lang, sourceElements);\n  }\n\n  async loadAllLanguagePacks(lang, sourceElements) {\n    try {\n      let promises  = sourceElements.map((sourceElement) => this.loadLanguagePack(lang, sourceElement));\n      let allTerms  = (await Promise.allSettled(promises)).map((result) => {\n        if (result.status !== 'fulfilled')\n          return;\n\n        return result.value;\n      }).filter(Boolean);\n\n      let terms         = deepMerge.all(Array.from(new Set(allTerms)));\n      let compiledTerms = this.compileLanguageTerms(lang, terms);\n\n      this.terms = compiledTerms;\n    } catch (error) {\n      console.error('\"mythix-language-provider\": Failed to load language packs', error);\n    }\n  }\n\n  async loadLanguagePack(lang, sourceElement) {\n    let src = sourceElement.getAttribute('src');\n    if (!src)\n      return;\n\n    try {\n      let { response }  = await require.call(this, src, { ownerDocument: this.ownerDocument || document });\n      let type          = this.getAttribute('enctype') || 'application/json';\n      if (IS_JSON_ENCTYPE.test(type)) {\n        // Handle JSON\n        return response.json();\n      } else {\n        new TypeError(`Don't know how to load a language pack of type \"${type}\"`);\n      }\n    } catch (error) {\n      console.error(`\"mythix-language-provider\": Failed to load specified resource: ${src}`, error);\n    }\n  }\n\n  compileLanguageTerms(lang, terms) {\n    const walkTerms = (terms, rawKeyPath) => {\n      let keys      = Object.keys(terms);\n      let termsCopy = {};\n\n      for (let i = 0, il = keys.length; i < il; i++) {\n        let key         = keys[i];\n        let value       = terms[key];\n        let newKeyPath  = rawKeyPath.concat(key);\n\n        if (Utils.isPlainObject(value) || Array.isArray(value)) {\n          termsCopy[key] = walkTerms(value, newKeyPath);\n        } else {\n          let property = Utils.getDynamicPropertyForPath.call(this, newKeyPath.join('.'), value);\n          termsCopy[key] = property;\n          property[Utils.DynamicProperty.set](value);\n        }\n      }\n\n      return termsCopy;\n    };\n\n    return walkTerms(terms, [ 'global', 'i18n' ]);\n  }\n}\n\nMythixUILanguagePack.register();\nMythixUILanguageProvider.register();\n\n(globalThis.mythixUI = (globalThis.mythixUI || {})).MythixUILanguagePack = MythixUILanguagePack;\nglobalThis.mythixUI.MythixUILanguageProvider = MythixUILanguageProvider;\n","/* eslint-disable no-magic-numbers */\n\nimport { MythixUIComponent } from './components.js';\n\n/*\nMany thanks to Sagee Conway for the following CSS spinners\nhttps://codepen.io/saconway/pen/vYKYyrx\n*/\n\nconst STYLE_SHEET =\n`\n:host {\n  --mythix-spinner-size: 1em;\n  width: var(--mythix-spinner-size);\n  height: var(--mythix-spinner-size);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-evenly;\n  position: relative;\n}\n:host(.small) {\n  --mythix-spinner-size: calc(1em * 0.75);\n}\n:host(.medium) {\n  --mythix-spinner-size: calc(1em * 1.5);\n}\n:host(.large) {\n  --mythix-spinner-size: calc(1em * 3);\n}\n.spinner-item,\n.spinner-item::before,\n.spinner-item::after {\n\tbox-sizing: border-box;\n}\n:host([kind=\"audio\"]) .spinner-item {\n  width: 11%;\n  height: 60%;\n  background: var(--mythix-spinner-segment-color);\n  animation: mythix-spinner-audio-animation calc(var(--theme-animation-duration, 1000ms) * 1.0) ease-in-out infinite;\n}\n@keyframes mythix-spinner-audio-animation {\n  50% {\n    transform: scaleY(0.25);\n  }\n}\n:host([kind=\"audio\"]) .spinner-item:nth-child(1) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n  animation-delay: calc(var(--theme-animation-duration, 1000ms) / 10 * -3);\n}\n:host([kind=\"audio\"]) .spinner-item:nth-child(2) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  animation-delay: calc(var(--theme-animation-duration, 1000ms) / 10 * -1);\n}\n:host([kind=\"audio\"]) .spinner-item:nth-child(3) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  animation-delay: calc(var(--theme-animation-duration, 1000ms) / 10 * -2);\n}\n:host([kind=\"audio\"]) .spinner-item:nth-child(4) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color4, var(--theme-primary-color, #333));\n  animation-delay: calc(var(--theme-animation-duration, 1000ms) / 10 * -1);\n}\n:host([kind=\"audio\"]) .spinner-item:nth-child(5) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color5, var(--theme-primary-color, #333));\n  animation-delay: calc(var(--theme-animation-duration, 1000ms) / 10 * -3);\n}\n:host([kind=\"circle\"]) .spinner-item {\n  --mythix-spinner-circle-thickness: calc(var(--mythix-spinner-size) * 0.075);\n  position: absolute;\n  width: var(--mythix-spinner-item-size);\n  height: var(--mythix-spinner-item-size);\n  top: calc(50% - var(--mythix-spinner-item-size) / 2);\n  left: calc(50% - var(--mythix-spinner-item-size) / 2);\n  border: var(--mythix-spinner-circle-thickness) solid transparent;\n  border-left: var(--mythix-spinner-circle-thickness) solid var(--mythix-spinner-segment-color);\n  border-right: var(--mythix-spinner-circle-thickness) solid var(--mythix-spinner-segment-color);\n  border-radius: 50%;\n  animation: mythix-spinner-circle-animation calc(var(--theme-animation-duration, 1000ms) * 1.0) linear infinite;\n}\n@keyframes mythix-spinner-circle-animation {\n  to {\n    transform: rotate(360deg);\n  }\n}\n:host([kind=\"circle\"]) .spinner-item:nth-of-type(1) {\n  --mythix-spinner-item-size: calc(var(--mythix-spinner-size) * 1.0);\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n  border-top: var(--mythix-spinner-circle-thickness) * 0.075) solid var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n  animation: mythix-spinner-circle-animation calc(var(--theme-animation-duration, 1000ms) * 1.0) linear infinite;\n}\n:host([kind=\"circle\"]) .spinner-item:nth-of-type(2) {\n  --mythix-spinner-item-size: calc(var(--mythix-spinner-size) * 0.7);\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  border-bottom: var(--mythix-spinner-circle-thickness) solid var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  animation: mythix-spinner-circle-animation calc(var(--theme-animation-duration, 1000ms) * 0.875) linear infinite;\n}\n:host([kind=\"circle\"]) .spinner-item:nth-of-type(3) {\n  --mythix-spinner-item-size: calc(var(--mythix-spinner-size) * 0.4);\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  border-top: var(--mythix-spinner-circle-thickness) solid var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  animation: mythix-spinner-circle-animation calc(var(--theme-animation-duration, 1000ms) * 0.75) linear infinite;\n}\n:host([kind=\"puzzle\"]) {\n  transform: translate(0, calc(var(--mythix-spinner-size) * 0.1)) rotate(45deg);\n}\n:host([kind=\"puzzle\"]) .spinner-item {\n  --mythix-spinner-item-size: calc(var(--mythix-spinner-size) / 2.5);\n  position: absolute;\n  width: var(--mythix-spinner-item-size);\n  height: var(--mythix-spinner-item-size);\n  border: calc(var(--mythix-spinner-size) * 0.1) solid var(--mythix-spinner-segment-color);\n}\n:host([kind=\"puzzle\"]) .spinner-item:nth-child(1) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n  top: 0;\n  left: 0;\n  animation: mythix-spinner-puzzle-animation1 calc(var(--theme-animation-duration, 1000ms) * 5.0) linear infinite;\n}\n@keyframes mythix-spinner-puzzle-animation1 {\n  0%, 8.33%, 16.66%, 100% {\n    transform: translate(0%, 0%);\n  }\n  24.99%, 33.32%, 41.65% {\n    transform: translate(100%, 0%);\n  }\n  49.98%, 58.31%, 66.64% {\n    transform: translate(100%, 100%);\n  }\n  74.97%, 83.30%, 91.63% {\n    transform: translate(0%, 100%);\n  }\n}\n:host([kind=\"puzzle\"]) .spinner-item:nth-child(2) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  top: 0;\n  left: var(--mythix-spinner-item-size);\n  animation: mythix-spinner-puzzle-animation2 calc(var(--theme-animation-duration, 1000ms) * 5.0) linear infinite;\n}\n@keyframes mythix-spinner-puzzle-animation2 {\n  0%, 8.33%, 91.63%, 100% {\n    transform: translate(0%, 0%);\n  }\n  16.66%, 24.99%, 33.32% {\n    transform: translate(0%, 100%);\n  }\n  41.65%, 49.98%, 58.31% {\n    transform: translate(-100%, 100%);\n  }\n  66.64%, 74.97%, 83.30% {\n    transform: translate(-100%, 0%);\n  }\n}\n:host([kind=\"puzzle\"]) .spinner-item:nth-child(3) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  top: var(--mythix-spinner-item-size);\n  left: var(--mythix-spinner-item-size);\n  animation: mythix-spinner-puzzle-animation3 calc(var(--theme-animation-duration, 1000ms) * 5.0) linear infinite;\n}\n@keyframes mythix-spinner-puzzle-animation3 {\n  0%, 83.30%, 91.63%, 100% {\n    transform: translate(0, 0);\n  }\n  8.33%, 16.66%, 24.99% {\n    transform: translate(-100%, 0);\n  }\n  33.32%, 41.65%, 49.98% {\n    transform: translate(-100%, -100%);\n  }\n  58.31%, 66.64%, 74.97% {\n    transform: translate(0, -100%);\n  }\n}\n:host([kind=\"wave\"]) .spinner-item {\n  --mythix-spinner-item-size: calc(var(--mythix-spinner-size) / 4);\n  min-width: var(--mythix-spinner-item-size);\n  width: var(--mythix-spinner-item-size);\n  height: var(--mythix-spinner-item-size);\n  border-radius: 50%;\n  border: none;\n  overflow: hidden;\n  background-color: var(--mythix-spinner-segment-color);\n  animation: mythix-spinner-wave-animation calc(var(--theme-animation-duration, 1000ms) * 1.15) ease-in-out infinite;\n}\n@keyframes mythix-spinner-wave-animation {\n  0%, 100% {\n    transform: translateY(75%);\n  }\n  50% {\n    transform: translateY(-75%);\n  }\n}\n:host([kind=\"wave\"]) .spinner-item:nth-child(1) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 6 * -1);\n}\n:host([kind=\"wave\"]) .spinner-item:nth-child(2) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 6 * -2);\n}\n:host([kind=\"wave\"]) .spinner-item:nth-child(3) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 6 * -3);\n}\n:host([kind=\"pipe\"]) .spinner-item {\n  width: 11%;\n  height: 40%;\n  background-color: var(--mythix-spinner-segment-color);\n  animation: mythix-spinner-pipe-animation calc(var(--theme-animation-duration, 1000ms) * 1.15) ease-in-out infinite;\n}\n@keyframes mythix-spinner-pipe-animation {\n  25% {\n    transform: scaleY(2);\n  }\n  50% {\n    transform: scaleY(1);\n  }\n}\n:host([kind=\"pipe\"]) .spinner-item:nth-child(1) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n}\n:host([kind=\"pipe\"]) .spinner-item:nth-child(2) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 10);\n}\n:host([kind=\"pipe\"]) .spinner-item:nth-child(3) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 10 * 2);\n}\n:host([kind=\"pipe\"]) .spinner-item:nth-child(4) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color4, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 10 * 3);\n}\n:host([kind=\"pipe\"]) .spinner-item:nth-child(5) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color5, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 10 * 4);\n}\n:host([kind=\"dot\"]) .spinner-item {\n  position: absolute;\n  top: calc(50% - var(--mythix-spinner-size) / 2);\n  left: calc(50% - var(--mythix-spinner-size) / 2);\n  width: var(--mythix-spinner-size);\n  height: var(--mythix-spinner-size);\n  background: var(--mythix-spinner-segment-color);\n  border-radius: 50%;\n  animation: mythix-spinner-dot-animation calc(var(--theme-animation-duration, 1000ms) * 3.0) ease-in-out infinite;\n}\n@keyframes mythix-spinner-dot-animation {\n  0%, 100% {\n    transform: scale(0.25);\n    opacity: 1;\n  }\n  50% {\n    transform: scale(1);\n    opacity: 0;\n  }\n}\n:host([kind=\"dot\"]) .spinner-item:nth-of-type(1) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n}\n:host([kind=\"dot\"]) .spinner-item:nth-of-type(2) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 3.0) / -2);\n}\n`;\n\nconst KINDS = {\n  'audio':  5,\n  'circle': 3,\n  'dot':    2,\n  'pipe':   5,\n  'puzzle': 3,\n  'wave':   3,\n};\n\nexport class MythixUISpinner extends MythixUIComponent {\n  static tagName = 'mythix-spinner';\n\n  set attr$kind([ newValue ]) {\n    this.handleKindAttributeChange(newValue);\n  }\n\n  mounted() {\n    if (!this.documentInitialized) {\n      // append template\n      let ownerDocument = this.ownerDocument || document;\n      this.$build(({ TEMPLATE }) => {\n        return TEMPLATE\n          .dataMythixName(this.sensitiveTagName)\n          .prop$innerHTML(`<style>${STYLE_SHEET}</style>`);\n      }).appendTo(ownerDocument.body);\n\n      let template = this.template = this.getComponentTemplate();\n      this.appendTemplateToShadowDOM(template);\n    }\n\n    let kind = this.getAttribute('kind');\n    if (!kind) {\n      kind = 'pipe';\n      this.setAttribute('kind', kind);\n    }\n\n    this.handleKindAttributeChange(kind);\n  }\n\n  handleKindAttributeChange(_kind) {\n    let kind        = ('' + _kind).toLowerCase();\n    if (!Object.prototype.hasOwnProperty.call(KINDS, kind)) {\n      console.warn(`\"mythix-spinner\" unknown \"kind\" provided: \"${kind}\". Supported \"kind\" attribute values are: \"pipe\", \"audio\", \"circle\", \"puzzle\", \"wave\", and \"dot\".`);\n      kind = 'pipe';\n    }\n\n    this.changeSpinnerChildren(KINDS[kind]);\n  }\n\n  buildSpinnerChildren(count) {\n    let children      = new Array(count);\n    let ownerDocument = (this.ownerDocument || document);\n\n    for (let i = 0; i < count; i++) {\n      let element = ownerDocument.createElement('div');\n      element.setAttribute('class', 'spinner-item');\n\n      children[i] = element;\n    }\n\n    return this.select(children);\n  }\n\n  changeSpinnerChildren(count) {\n    this.select('.spinner-item').remove();\n    this.buildSpinnerChildren(count).appendTo(this.shadow);\n\n    // Always append style again, so\n    // that it is the last child, and\n    // doesn't mess with \"nth-child\"\n    // selectors\n    this.select('style').appendTo(this.shadow);\n  }\n}\n\nMythixUISpinner.register();\n\n(globalThis.mythixUI = (globalThis.mythixUI || {})).MythixUIRequire = MythixUISpinner;\n","globalThis.mythixUI = (globalThis.mythixUI || {});\nglobalThis.mythixUI.globalScope = (globalThis.mythixUI.globalScope || {});\n\nif (typeof document !== 'undefined' && !globalThis.mythixUI.globalScope.url)\n  globalThis.mythixUI.globalScope.url = new URL(document.location);\n\nimport * as Utils from './utils.js';\nimport * as Components from './components.js';\nimport * as Elements from './elements.js';\n\nexport * as Utils from './utils.js';\n\nexport * from './query-engine.js';\nexport * as Components from './components.js';\nexport * as Elements from './elements.js';\nexport * from './mythix-ui-require.js';\nexport * from './mythix-ui-language-provider.js';\nexport * from './mythix-ui-spinner.js';\n\nconst MythixUIComponent = Components.MythixUIComponent;\n\nexport {\n  MythixUIComponent,\n};\n\nlet _mythixIsReady = false;\nObject.defineProperties(globalThis, {\n  'onmythixready': {\n    enumerable:   false,\n    configurable: true,\n    get:          () => {\n      return null;\n    },\n    set:          (callback) => {\n      if (_mythixIsReady) {\n        Promise.resolve().then(() => callback(new Event('mythix-ready')));\n        return;\n      }\n\n      document.addEventListener('mythix-ready', callback);\n    },\n  },\n});\n\nglobalThis.mythixUI.Utils = Utils;\nglobalThis.mythixUI.Components = Components;\nglobalThis.mythixUI.Elements = Elements;\nglobalThis.mythixUI.globalScope.globalStore = Utils.globalStore;\nglobalThis.mythixUI.globalScope.globalStoreDynamic = Utils.globalStoreDynamic;\n\nglobalThis.mythixUI.globalScope.dynamicPropID = function(id) {\n  return Utils.dynamicPropID(id);\n};\n\nif (typeof document !== 'undefined') {\n  let didVisibilityObservers = false;\n\n  const onDocumentReady = () => {\n    if (!didVisibilityObservers) {\n      let elements = Array.from(document.querySelectorAll('[data-mythix-src]'));\n      Components.visibilityObserver(({ disconnect, element, wasVisible }) => {\n        if (wasVisible)\n          return;\n\n        disconnect();\n\n        let src = element.getAttribute('data-mythix-src');\n        if (!src)\n          return;\n\n        Components.loadPartialIntoElement.call(element, src).then(() => {\n          element.classList.add('mythix-ready');\n        });\n      }, { elements });\n\n      didVisibilityObservers = true;\n    }\n\n    document.body.classList.add('mythix-ready');\n\n    if (_mythixIsReady)\n      return;\n\n    _mythixIsReady = true;\n\n    document.dispatchEvent(new Event('mythix-ready'));\n  };\n\n  Object.defineProperties(globalThis, {\n    '$': {\n      writable:     true,\n      enumerable:   true,\n      configurable: true,\n      value:        (...args) => document.querySelector(...args),\n    },\n    '$$': {\n      writable:     true,\n      enumerable:   true,\n      configurable: true,\n      value:        (...args) => document.querySelectorAll(...args),\n    },\n  });\n\n  let documentMutationObserver = globalThis.mythixUI.documentMutationObserver = new MutationObserver((mutations) => {\n    let disableTemplateEngineSelectorStr = Utils.getDisableTemplateEngineSelector();\n    for (let i = 0, il = mutations.length; i < il; i++) {\n      let mutation  = mutations[i];\n      let target    = mutation.target;\n\n      if (mutation.type === 'attributes') {\n        if (disableTemplateEngineSelectorStr && target.parentNode && typeof target.parentNode.closest === 'function' && target.parentNode.closest(disableTemplateEngineSelectorStr))\n          continue;\n\n        let attributeNode = target.getAttributeNode(mutation.attributeName);\n        let newValue      = (attributeNode) ? attributeNode.nodeValue : null;\n        let oldValue      = mutation.oldValue;\n\n        if (oldValue === newValue)\n          continue;\n\n        if (newValue && Utils.isTemplate(newValue))\n          attributeNode.nodeValue = Utils.formatNodeValue(attributeNode, { scope: Utils.createScope(target), disallowHTML: true });\n\n        let observedAttributes = target.constructor.observedAttributes;\n        if (observedAttributes && observedAttributes.indexOf(mutation.attributeName) < 0) {\n          if (target[Components.isMythixComponent])\n            target.attributeChangedCallback.call(target, mutation.attributeName, oldValue, newValue);\n        }\n      } else if (mutation.type === 'childList') {\n        let disableTemplating = (disableTemplateEngineSelectorStr && target && typeof target.closest === 'function' && target.closest('[data-templates-disable],mythix-for-each'));\n        let addedNodes        = mutation.addedNodes;\n        for (let j = 0, jl = addedNodes.length; j < jl; j++) {\n          let node = addedNodes[j];\n\n          if (node[Components.isMythixComponent] && node.onMutationAdded.call(node, mutation) === false)\n            continue;\n\n          if (!disableTemplating)\n            Elements.processElements(node);\n\n          if (target[Components.isMythixComponent])\n            target.onMutationChildAdded(node, mutation);\n        }\n\n        let removedNodes = mutation.removedNodes;\n        for (let j = 0, jl = removedNodes.length; j < jl; j++) {\n          let node = removedNodes[j];\n          if (node[Components.isMythixComponent] && node.onMutationRemoved.call(node, mutation) === false)\n            continue;\n\n          if (target[Components.isMythixComponent])\n            target.onMutationChildRemoved(node, mutation);\n        }\n      }\n    }\n  });\n\n  documentMutationObserver.observe(document, {\n    subtree:            true,\n    childList:          true,\n    attributes:         true,\n    attributeOldValue:  true,\n  });\n\n  Elements.processElements(document.head);\n  Elements.processElements(document.body);\n\n  setTimeout(() => {\n    if (document.readyState === 'complete')\n      onDocumentReady();\n    else\n      document.addEventListener('DOMContentLoaded', onDocumentReady);\n  }, 250);\n\n  window.addEventListener('load', onDocumentReady);\n}\n"],"names":["isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","mergeObject","destination","forEach","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","arrayMerge","sourceIsArray","all","array","Error","reduce","prev","next","deepmerge_1","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","r","toStringTag","SHA256","_input","i","j","input","mathPow","Math","pow","maxWord","lengthProperty","result","words","asciiBitLength","hash","h","k","primeCounter","isComposite","candidate","charCodeAt","w","slice","oldHash","w15","w2","a","e","temp1","b","MYTHIX_NAME_VALUE_PAIR_HELPER","MYTHIX_SHADOW_PARENT","MYTHIX_TYPE","DYNAMIC_PROPERTY_TYPE","ELEMENT_DEFINITION_TYPE","QUERY_ENGINE_TYPE","ID_COUNT_LENGTH","IS_CLASS","NATIVE_CLASS_TYPES_META","typeName","globalThis","meta","idCounter","generateID","BigInt","Date","now","str","count","char","padStart","pad","createResolvable","resolve","reject","status","promise","Promise","_resolve","_reject","defineProperties","writable","configurable","typeOf","is","NaN","Infinity","thisType","nativeTypeMeta","find","typeMeta","constructor","test","name","charAt","toUpperCase","substring","String","Number","Boolean","JSON","Atomics","Reflect","isPlainObject","isType","types","valueType","type","isValidNumber","isPrimitive","isCollectable","isNOE","length","isNotNOE","toCamelCase","replace","toLowerCase","m","p","f","l","toSnakeCase","offset","bindMethods","_proto","skipProtos","proto","alreadyVisited","Set","descriptors","getOwnPropertyDescriptors","il","has","add","descriptor","newDescriptor","bind","this","set","getPrototypeOf","indexOf","METADATA_WEAKMAP","WeakMap","metadata","data","arguments","Map","OBJ_ID_WEAKMAP","idCount","getObjID","id","thisID","nextTick","callback","requestAnimationFrame","then","DYNAMIC_PROPERTY_VALUE","DYNAMIC_PROPERTY_CMT","DYNAMIC_PROPERTY_IS_SETTING","DYNAMIC_PROPERTY_SET","DynamicProperty","EventTarget","hasInstance","instance","static","defaultValue","super","Proxy","propName","toPrimitive","hint","valueOf","_newValue","newValue","oldValue","updateEvent","Event","originator","dispatchEvent","error","console","VALID_JS_IDENTIFIER","getParentNode","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","createScope","_targets","findPropNameScope","fetchPublishContext","componentPublishContext","currentElement","publishContext","publishedContext","targets","firstElement","fallbackContext","globalScope","mythixUI","i18n","path","languageProvider","specialClosest","dynamicPropID","proxy","ownKeys","allKeys","getAllPropertyNames","from","scope","doSet","$$","EVENT_ACTION_JUST_NAME","createTemplateMacro","prefix","body","functionBody","trim","contextCallArgs","context","extraContexts","extraContext","join","getContextCallArgs","Function","parseTemplateParts","text","_options","parts","currentOffset","start","macro","push","method","compileTemplateFromParts","part","item","some","FORMAT_TERM_ALLOWABLE_NODES","formatNodeValue","node","localName","nodeValue","TypeError","templateParts","bindToDynamicProperties","addEventListener","capture","disallowHTML","IS_TEMPLATE","isTemplate","IS_EVENT_NAME","EVENT_NAME_CACHE","getAllEventNamesForElement","tagName","cache","eventNames","bindEventToElement","eventName","_callback","fetchPath","split","currentValue","nextValue","TEXT_NODE","ATTRIBUTE_NODE","IS_NUMBER","IS_BOOLEAN","coerce","parseFloat","CACHED_PROPERTY_NAMES","SKIP_PROTOTYPES","HTMLElement","Element","_obj","cachedNames","names","objNames","getOwnPropertyNames","finalNames","LANG_PROVIDER_DYNAMIC_PROPERTY_CACHE","getDynamicPropertyForPath","keyPath","instanceCache","selector","currentNode","matches","sleep","ms","setTimeout","dynamicProp","setter","dynamicProperty","DYNAMIC_PROP_REGISTRY","globalStoreNameValuePairHelper","REGISTERED_DISABLE_TEMPLATE_SELECTORS","getDisableTemplateEngineSelector","registerDisableTemplateEngineSelector","unregisterDisableTemplateEngineSelector","delete","globalStoreHelper","dynamic","args","setOnGlobal","nameValuePair","getIdentifier","getAttribute","globalStore","globalStoreDynamic","UNFINISHED_DEFINITION","IS_PROP_NAME","IS_TARGET_PROP","ElementDefinition","attributes","children","attrs","attributeName","entries","toDOMAttributeName","encodeValue","child","isVoidTag","build","ownerDocument","templateOptions","namespaceURI","processElements","createTextNode","createElementNS","isSVGElement","createElement","handleAttribute","_attributeValue","attributeValue","lowerAttributeName","modifiedAttributeName","setAttribute","handleProperty","propertyName","propertyValue","attributeNames","childElement","flat","appendChild","processEventCallbacks","IS_HTML_SAFE_CHARACTER","IS_VOID_TAG","_node","disableTemplateEngineSelector","forceTemplateEngine","childNodes","isTemplateEngineDisabled","helper","document","fragment","createDocumentFragment","elements","appendTo","textNode","ELEMENT_NODE","DOCUMENT_NODE","getAttributeNames","removeAttribute","attributeNode","getAttributeNode","processChildren","childNode","hasChild","replaceChild","defaultAttributes","rootProxy","_children","wrangleChildren","getUnderlyingArray","nodeToElementDefinition","assign","create","mergeChildren","others","targetIsTemplate","other","content","cloneNode","IS_SVG_ELEMENT_NAME","Term","ElementGenerator","$TEXT","IS_INTEGER","isElement","isSlotted","closest","isNotSlotted","QueryEngine","root","queryEngine","argIndex","base","getOptions","optionsRoot","getRootElement","querySelectorAll","invokeCallbacks","getEngineClass","filterAndConstructElements","_mythixUIElements","magicPropName","every","_mythixUIOptions","getContext","getRoot","getOwnerDocument","finalElements","_item","select","$","values","iterator","first","abs","last","subtract","on","off","removeEventListener","selectorOrElement","querySelector","insertInto","referenceNode","insert","replaceChildrenOf","removeChild","remove","classList","operation","classNames","collectClassNames","className","toggle","addClass","removeClass","toggleClass","slotted","yesNo","slot","slotName","IS_ATTR_METHOD_NAME","REGISTERED_COMPONENTS","isMythixComponent","MYTHIX_INTERSECTION_OBSERVERS","MYTHIX_DOCUMENT_INITIALIZED","MYTHIX_UI_COMPONENT_TYPE","MythixUIComponent","compileStyleForDocument","_name","_Klass","customElements","Klass","observedAttributes","compileAttributeMethods","define","registerEvent","componentName","component","originalName","match","getDescriptorFromPrototypeChain","originalGet","attr$dataMythixSrc","awaitFetchSrcOnVisible","onMutationAdded","onMutationRemoved","onMutationChildAdded","onMutationChildRemoved","TEMPLATE_ID","createShadowDOM","getComponentTemplate","attr","injectStyleSheet","media","styleID","sensitiveTagName","styleElement","innerHTML","head","attachShadow","shadow","mode","nameOrID","getElementById","templateID","appendExternalToShadowDOM","appendTemplateToShadowDOM","_template","template","ensureDocumentStyles","formattedTemplate","connectedCallback","mounted","documentInitialized","disconnectedCallback","unmounted","newSrc","visibilityObserver","unobserve","observer","wasVisible","disconnect","fetchSrc","attributeChangedCallback","magicName","attributeChanged","adoptedCallback","adopted","shadowNodes","$build","isAttributeTruthy","hasAttribute","_context","dynamicData","debounce","timeMS","_id","stack","warn","delayTimers","timerID","clearTimeout","catch","async","classes","_args","items","srcURL","loadPartialIntoElement","url","cssRulesToSource","cssRules","rule","ruleStr","selectorText","cssText","_body","formatRuleSet","elementName","handleHost","_content","sheet","_selector","tags","updatedSelector","index","modified","templateChildren","templateChild","clonedStyleElement","newStyleSheet","styleNode","startProto","descriptorName","thisProto","getOwnPropertyDescriptor","SCHEME_RE","HAS_FILENAME","resolveURL","rootLocation","_urlish","magic","urlish","URL","Location","originalURL","_location","_urlPart","lastPart","location","origin","pathname","internalResolve","urlResolver","fileName","second","src","IS_SCRIPT","REQUIRE_CACHE","RESOLVE_SRC_ELEMENT","importIntoDocumentFromSource","_url","sourceString","baseURL","search","sort","x","y","guessedElementName","_m","fileNameToElementName","preProcess","nodeHandler","templateCount","sum","resolveElementSrcAttribute","isHandled","childClone","textContent","isScript","isStyle","isLink","outerHTML","isMeta","langPackID","insertBefore","firstChild","postProcess","urlOrName","cacheKey","searchParams","cacheKeyURL","cachedResponse","response","ok","cached","fetch","fetchOptions","statusText","json","parse","scopeData","threshold","IntersectionObserver","entry","isIntersecting","elementObservers","ratioVisible","intersectionRatio","previousVisibility","visibility","observe","NO_OBSERVER","freeze","getVisibilityMeta","TEMPLATE_TEMPLATE","MythixUIRequire","starTemplate","dataFor","starClone","MythixUILanguagePack","mutation","parentLanguageProvider","IS_JSON_ENCTYPE","MythixUILanguageProvider","attr$lang","loadAllLanguagePacksForLanguage","getCurrentLocale","_path","terms","getSourcesForLang","lang","_lang","sourceElements","sourceElement","loadAllLanguagePacks","promises","loadLanguagePack","allTerms","allSettled","compiledTerms","compileLanguageTerms","walkTerms","rawKeyPath","termsCopy","newKeyPath","register","KINDS","MythixUISpinner","attr$kind","handleKindAttributeChange","TEMPLATE","dataMythixName","prop$innerHTML","kind","_kind","changeSpinnerChildren","buildSpinnerChildren","_mythixIsReady","Utils","Components","Elements","didVisibilityObservers","onDocumentReady","documentMutationObserver","MutationObserver","mutations","disableTemplateEngineSelectorStr","disableTemplating","addedNodes","jl","removedNodes","subtree","childList","attributeOldValue","readyState","window"],"sourceRoot":""}