{"version":3,"file":"index.js","mappings":"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","sources":["webpack://mythix-ui-core/./node_modules/deepmerge/dist/cjs.js","webpack://mythix-ui-core/webpack/bootstrap","webpack://mythix-ui-core/webpack/runtime/define property getters","webpack://mythix-ui-core/webpack/runtime/hasOwnProperty shorthand","webpack://mythix-ui-core/webpack/runtime/make namespace object","webpack://mythix-ui-core/./lib/constants.js","webpack://mythix-ui-core/./lib/sha256.js","webpack://mythix-ui-core/./lib/base-utils.js","webpack://mythix-ui-core/./lib/dynamic-property.js","webpack://mythix-ui-core/./lib/utils.js","webpack://mythix-ui-core/./lib/elements.js","webpack://mythix-ui-core/./lib/query-engine.js","webpack://mythix-ui-core/./lib/components.js","webpack://mythix-ui-core/./lib/mythix-ui-require.js","webpack://mythix-ui-core/./lib/mythix-ui-language-provider.js","webpack://mythix-ui-core/./lib/mythix-ui-spinner.js","webpack://mythix-ui-core/./lib/index.js"],"sourcesContent":["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * type: Namespace\n * name: Constants\n * groupName: Constants\n * desc: |\n *   `import { Constants } from 'mythix-ui-core@1.0';`\n *\n *   Misc global constants are found within this namespace.\n * properties:\n *   - name: MYTHIX_INTERSECTION_OBSERVERS\n *     dataType: symbol\n *     desc: |\n *       This symbol is used as a @see Utils.metadata; key against elements with a `data-src` attribute.\n *       For elements with this attribute, set an [intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) is setup.\n *       When the intersection observer reports that the element is visible, then the URL specified by `data-src` is fetched, and dumped into\n *       the element as its children. This allows for dynamic \"partials\" that are loaded at run-time.\n *\n *       The value stored at this @see Utils.metadata; key is a Map of [intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver)\n *       instances. The keys of this map are the intersection observers themselves. The values are raw objects with the shape\n *       `{ wasVisible: boolean, ratioVisible: float, previousVisibility: boolean, visibility: boolean }`.\n *   - name: MYTHIX_NAME_VALUE_PAIR_HELPER\n *     dataType: symbol\n *     desc: |\n *       This is used as a @see Utils.metadata?caption=metadata; key by @see Utils.globalStoreNameValuePairHelper;\n *       to store key/value pairs for a single value.\n *\n *       Mythix UI has global store and fetch helpers for setting and fetching dynamic properties. These\n *       methods only accept a single value by design... but sometimes it is desired that a value be set\n *       with a specific key instead. This `MYTHIX_NAME_VALUE_PAIR_HELPER` property assists with this process,\n *       allowing global helpers to still function with a single value set, while in some cases still passing\n *       a key through to the setter. @sourceRef _mythixNameValuePairHelperUsage;\n *     notes:\n *       - |\n *         :warning: Use at your own risk. This is Mythix UI internal code that might change in the future.\n *   - name: MYTHIX_SHADOW_PARENT\n *     dataType: symbol\n *     desc: |\n *       This is used as a @see Utils.metadata?caption=metadata; key by @see MythixUIComponent; to\n *       store the parent node of a Shadow DOM, so that it can later be traversed by @see Utils.getParentNode;.\n *     notes:\n *       - |\n *         :warning: Use at your own risk. This is Mythix UI internal code that might change in the future.\n *       - |\n *         :eye: @see Utils.getParentNode;.\n *   - name: MYTHIX_TYPE\n *     dataType: symbol\n *     desc: |\n *       This is used for type checking by `instanceof` checks to determine if an instance\n *       is a specific type (even across javascript contexts and library versions). @sourceRef _mythixTypeExample;\n *     notes:\n *       - |\n *         :eye: @see BaseUtils.isType;.\n *   - name: DYNAMIC_PROPERTY_TYPE\n *     dataType: symbol\n *     desc: |\n *       Used for runtime type reflection against @see Utils.DynamicProperty;.\n *     notes:\n *       - |\n *         :eye: @see DynamicProperty;.\n *       - |\n *         :eye: @see BaseUtils.isType;.\n *       - |\n *         :eye: @see Constants.MYTHIX_TYPE;.\n */\n\n// Base\nexport const MYTHIX_NAME_VALUE_PAIR_HELPER  = Symbol.for('@mythix/mythix-ui/constants/name-value-pair-helper'); // @ref:Constants.MYTHIX_NAME_VALUE_PAIR_HELPER\nexport const MYTHIX_SHADOW_PARENT           = Symbol.for('@mythix/mythix-ui/constants/shadow-parent'); // @ref:Constants.MYTHIX_SHADOW_PARENT\nexport const MYTHIX_TYPE                    = Symbol.for('@mythix/mythix-ui/constants/element-definition'); // @ref:Constants.MYTHIX_TYPE\nexport const MYTHIX_INTERSECTION_OBSERVERS  = Symbol.for('@mythix/mythix-ui/component/constants/intersection-observers'); // @ref:Constants.MYTHIX_INTERSECTION_OBSERVERS\nexport const MYTHIX_DOCUMENT_INITIALIZED    = Symbol.for('@mythix/mythix-ui/component/constants/document-initialized'); // @ref:Constants.MYTHIX_DOCUMENT_INITIALIZED\n\n// DynamicProperty\nexport const DYNAMIC_PROPERTY_VALUE         = Symbol.for('@mythix/mythix-ui/dynamic-property/constants/value');\nexport const DYNAMIC_PROPERTY_IS_SETTING    = Symbol.for('@mythix/mythix-ui/dynamic-property/constants/is-setting');\nexport const DYNAMIC_PROPERTY_SET           = Symbol.for('@mythix/mythix-ui/dynamic-property/constants/set');\n\n// Types\nexport const ELEMENT_DEFINITION_TYPE        = Symbol.for('@mythix/mythix-ui/types/MythixUI::ElementDefinition');\nexport const QUERY_ENGINE_TYPE              = Symbol.for('@mythix/mythix-ui/types/MythixUI::QueryEngine');\nexport const DYNAMIC_PROPERTY_TYPE          = Symbol.for('@mythix/mythix-ui/types/MythixUI::DynamicProperty'); // @ref:Constants.DYNAMIC_PROPERTY_TYPE\nexport const MYTHIX_UI_COMPONENT_TYPE       = Symbol.for('@mythix/mythix-ui/types/MythixUI::MythixUIComponent');\n\n// Elements\nexport const UNFINISHED_DEFINITION    = Symbol.for('@mythix/mythix-ui/constants/unfinished');\n\n\n","/* eslint-disable no-magic-numbers */\n\n/*\nMany thanks to Geraint Luff for the following\n\nhttps://github.com/geraintluff/sha256/\n*/\n\n/**\n * type: Function\n * name: SHA256\n * groupName: BaseUtils\n * desc: |\n *   SHA256 hashing function\n * arguments:\n *   - name: input\n *     dataType: string\n *     desc: Input string\n * return: |\n *   @types string; The SHA256 hash of the provided `input`.\n * notes:\n *   - |\n *     :warning: This is a custom baked SHA256 hashing function, minimized for size.\n *     It may be incomplete, and it is strongly recommended that you **DO NOT** use this\n *     for anything related to security.\n *   - |\n *     :warning: Read all the notes, and use this method with caution.\n *   - |\n *     :info: This method has been modified slightly from the original to *not* bail when\n *     unicode characters are detected. There is a decent chance that--given certain\n *     input--this method will return an invalid SHA256 hash.\"\n *   - |\n *     :info: Mythix UI uses this method simply to generate consistent IDs.\n *   - |\n *     :heart: Many thanks to the author [Geraint Luff](https://github.com/geraintluff/sha256/)\n *     for this method!\n */\nexport function SHA256(_input) {\n  let input = _input;\n\n  let mathPow = Math.pow;\n  let maxWord = mathPow(2, 32);\n  let lengthProperty = 'length';\n  let i; let j; // Used as a counter across the whole file\n  let result = '';\n\n  let words = [];\n  let asciiBitLength = input[lengthProperty] * 8;\n\n  //* caching results is optional - remove/add slash from front of this line to toggle\n  // Initial hash value: first 32 bits of the fractional parts of the square roots of the first 8 primes\n  // (we actually calculate the first 64, but extra values are just ignored)\n  let hash = SHA256.h = SHA256.h || [];\n  // Round constants: first 32 bits of the fractional parts of the cube roots of the first 64 primes\n  let k = SHA256.k = SHA256.k || [];\n  let primeCounter = k[lengthProperty];\n  /*/\n    let hash = [], k = [];\n    let primeCounter = 0;\n    //*/\n\n  let isComposite = {};\n  for (let candidate = 2; primeCounter < 64; candidate++) {\n    if (!isComposite[candidate]) {\n      for (i = 0; i < 313; i += candidate)\n        isComposite[i] = candidate;\n\n      hash[primeCounter] = (mathPow(candidate, 0.5) * maxWord) | 0;\n      k[primeCounter++] = (mathPow(candidate, 1 / 3) * maxWord) | 0;\n    }\n  }\n\n  input += '\\x80'; // Append Ƈ' bit (plus zero padding)\n  while (input[lengthProperty] % 64 - 56)\n    input += '\\x00'; // More zero padding\n\n  for (i = 0; i < input[lengthProperty]; i++) {\n    j = input.charCodeAt(i);\n    if (j >> 8)\n      return; // ASCII check: only accept characters in range 0-255\n    words[i >> 2] |= j << ((3 - i) % 4) * 8;\n  }\n\n  words[words[lengthProperty]] = ((asciiBitLength / maxWord) | 0);\n  words[words[lengthProperty]] = (asciiBitLength);\n\n  // process each chunk\n  for (j = 0; j < words[lengthProperty];) {\n    let w = words.slice(j, j += 16); // The message is expanded into 64 words as part of the iteration\n    let oldHash = hash;\n\n    // This is now the undefinedworking hash\", often labelled as variables a...g\n    // (we have to truncate as well, otherwise extra entries at the end accumulate\n    hash = hash.slice(0, 8);\n\n    for (i = 0; i < 64; i++) {\n      // Expand the message into 64 words\n      // Used below if\n      let w15 = w[i - 15]; let w2 = w[i - 2];\n\n      // Iterate\n      let a = hash[0]; let e = hash[4];\n      let temp1 = hash[7]\n                + (((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7))) // S1\n                + ((e & hash[5]) ^ ((~e) & hash[6])) // ch\n                + k[i]\n                // Expand the message schedule if needed\n                + (w[i] = (i < 16) ? w[i] : (\n                  w[i - 16]\n                        + (((w15 >>> 7) | (w15 << 25)) ^ ((w15 >>> 18) | (w15 << 14)) ^ (w15 >>> 3)) // s0\n                        + w[i - 7]\n                        + (((w2 >>> 17) | (w2 << 15)) ^ ((w2 >>> 19) | (w2 << 13)) ^ (w2 >>> 10)) // s1\n                ) | 0\n                );\n      // This is only used once, so *could* be moved below, but it only saves 4 bytes and makes things unreadble\n      let temp2 = (((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10))) // S0\n                + ((a & hash[1]) ^ (a & hash[2]) ^ (hash[1] & hash[2])); // maj\n\n      hash = [(temp1 + temp2) | 0].concat(hash); // We don't bother trimming off the extra ones, they're harmless as long as we're truncating when we do the slice()\n      hash[4] = (hash[4] + temp1) | 0;\n    }\n\n    for (i = 0; i < 8; i++)\n      hash[i] = (hash[i] + oldHash[i]) | 0;\n  }\n\n  for (i = 0; i < 8; i++) {\n    for (j = 3; j + 1; j--) {\n      let b = (hash[i] >> (j * 8)) & 255;\n      result += ((b < 16) ? 0 : '') + b.toString(16);\n    }\n  }\n\n  return result;\n}\n","import { SHA256 } from './sha256.js';\n\nglobalThis.mythixUI = (globalThis.mythixUI || {});\n\nexport {\n  SHA256,\n};\n\n/**\n * type: Namespace\n * name: BaseUtils\n * groupName: BaseUtils\n * desc: |\n *   `import { BaseUtils } from 'mythix-ui-core@1.0';`\n *\n *   Misc utility functions and global constants are found within this namespace.\n */\n\nfunction pad(str, count, char = '0') {\n  return str.padStart(count, char);\n}\n\nconst ID_COUNT_LENGTH         = 19;\nconst IS_CLASS                = (/^class \\S+ \\{/);\nconst NATIVE_CLASS_TYPE_NAMES = [\n  'AggregateError',\n  'Array',\n  'ArrayBuffer',\n  'BigInt',\n  'BigInt64Array',\n  'BigUint64Array',\n  'Boolean',\n  'DataView',\n  'Date',\n  'DedicatedWorkerGlobalScope',\n  'Error',\n  'EvalError',\n  'FinalizationRegistry',\n  'Float32Array',\n  'Float64Array',\n  'Function',\n  'Int16Array',\n  'Int32Array',\n  'Int8Array',\n  'Map',\n  'Number',\n  'Object',\n  'Proxy',\n  'RangeError',\n  'ReferenceError',\n  'RegExp',\n  'Set',\n  'SharedArrayBuffer',\n  'String',\n  'Symbol',\n  'SyntaxError',\n  'TypeError',\n  'Uint16Array',\n  'Uint32Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'URIError',\n  'WeakMap',\n  'WeakRef',\n  'WeakSet',\n];\n\nconst NATIVE_CLASS_TYPES_META = NATIVE_CLASS_TYPE_NAMES.map((typeName) => {\n  return [ typeName, globalThis[typeName] ];\n}).filter((meta) => meta[1]);\n\nconst ID_COUNTER_CURRENT_VALUE  = Symbol.for('@mythix/mythix-ui/component/constants/id-counter-current-value');\n\n// eslint-disable-next-line no-magic-numbers\nlet idCounter = (Object.prototype.hasOwnProperty.call(globalThis.mythixUI, ID_COUNTER_CURRENT_VALUE)) ? globalThis.mythixUI[ID_COUNTER_CURRENT_VALUE] : 0n;\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Generate a partially random unique ID. The id generated will be a `Date.now()`\n *   value with an incrementing BigInt postfixed to it.\n * return: |\n *   @types string; A unique ID.\n * examples:\n *   - |\n *     ```javascript\n *     import { BaseUtils } from 'mythix-ui-core@1.0';\n *\n *     console.log('ID: ', BaseUtils.generateID());\n *     // output -> 'ID17041430271790000000000000000007'\n *     ```\n */\nexport function generateID() {\n  idCounter += BigInt(1);\n  globalThis.mythixUI[ID_COUNTER_CURRENT_VALUE] = idCounter;\n\n  return `ID${Date.now()}${pad(idCounter.toString(), ID_COUNT_LENGTH)}`;\n}\n\nconst OBJECT_ID_STORAGE = Symbol.for('@mythix/mythix-ui/component/constants/object-id-storage');\nconst OBJECT_ID_WEAKMAP = globalThis.mythixUI[OBJECT_ID_STORAGE] = (globalThis.mythixUI[OBJECT_ID_STORAGE]) ? globalThis.mythixUI[OBJECT_ID_STORAGE] : new WeakMap();\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Get a unique ID for any garbage-collectable reference.\n *\n *   Unique IDs are generated via @see BaseUtils.generateID;.\n * arguments:\n *   - name: value\n *     dataType: any\n *     desc: Any garbage-collectable reference.\n * return: |\n *   @types string; A unique ID for this reference (as a SHA256 hash).\n * examples:\n *   - |\n *     ```javascript\n *     import { BaseUtils } from 'mythix-ui-core@1.0';\n *\n *     console.log(BaseUtils.getObjectID(divElement));\n *     // output -> '17041430271790000000000000000007'\n *     ```\n */\nexport function getObjectID(value) {\n  let id = OBJECT_ID_WEAKMAP.get(value);\n  if (id == null) {\n    let thisID = generateID();\n\n    OBJECT_ID_WEAKMAP.set(value, thisID);\n\n    return thisID;\n  }\n\n  return id;\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Create an unresolved specialized Promise instance, with the intent that it will be\n *   resolved later.\n *\n *   The Promise instance is specialized because the following properties are injected into it:\n *   1. `resolve(resultValue)` - When called, resolves the promise with the first provided argument\n *   2. `reject(errorValue)` - When called, rejects the promise with the first provided argument\n *   3. `status()` - When called, will return the fulfillment status of the promise, as a `string`, one of: `\"pending\", \"fulfilled\"`, or `\"rejected\"`\n *   4. `id<string>` - A randomly generated ID for this promise\n * return: |\n *   @types Promise; An unresolved Promise that can be resolved or rejected by calling `promise.resolve(result)` or `promise.reject(error)` respectively.\n */\nexport function createResolvable() {\n  let status = 'pending';\n  let resolve;\n  let reject;\n\n  let promise = new Promise((_resolve, _reject) => {\n    resolve = (value) => {\n      if (status === 'pending') {\n        status = 'fulfilled';\n        _resolve(value);\n      }\n\n      return promise;\n    };\n\n    reject = (value) => {\n      if (status === 'pending') {\n        status = 'rejected';\n        _reject(value);\n      }\n\n      return promise;\n    };\n  });\n\n  Object.defineProperties(promise, {\n    'resolve': {\n      writable:     false,\n      enumerable:   false,\n      configurable: false,\n      value:        resolve,\n    },\n    'reject': {\n      writable:     false,\n      enumerable:   false,\n      configurable: false,\n      value:        reject,\n    },\n    'status': {\n      writable:     false,\n      enumerable:   false,\n      configurable: false,\n      value:        () => status,\n    },\n    'id': {\n      writable:     false,\n      enumerable:   false,\n      configurable: false,\n      value:        generateID(),\n    },\n  });\n\n  return promise;\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Runtime type reflection helper. This is intended to be a more robust replacement for the `typeof` operator.\n *\n *   This method always returns a name (as a `string` type) of the underlying datatype.\n *   The \"datatype\" is a little loose for primitive types. For example, a\n *   primitive `typeof x === 'number'` type is returned as its corresponding Object (class) type `'Number'`. For `boolean` it will instead\n *   return `'Boolean'`, and for `'string'`, it will instead return `'String'`. This is true of all underlying primitive types.\n *\n *   For internal datatypes, it will return the real class name prefixed by two colons.\n *   For example, `typeOf(new Map())` will return `'::Map'`.\n *\n *   Non-internal types will not be prefixed, allowing custom types with the same name as internal types to also be detected.\n *   For example, `class Test {}; typeOf(new Test())` will result in the non-prefixed result `'Test'`.\n *\n *   For raw `function` types, `typeOf` will check if they are a constructor or not. If a constructor is detected, then\n *   the format `'[Class ${name}]'` will be returned as the type. For internal types the name will\n *   be prefixed, i.e. `[Class ::${internalName}]`, and for non-internal types will instead be non-prefixed, i.e. `[Class ${name}]` .\n *   For example, `typeOf(Map)` will return `'[Class ::Map]'`, whereas `typeOf(Test)` will result in `'[Class Test]'`.\n * arguments:\n *   - name: value\n *     dataType: any\n *     desc: The value whose type you wish to discover.\n * return: |\n *   @types string; The name of the provided type, or an empty string `''` if the provided value has no type.\n * notes:\n *   - This method will look for a [Symbol.toStringTag](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag)\n *     key on the value provided... and if found, will use it to assist with finding the correct type name.\n *   - If the `value` provided is type-less, i.e. `undefined`, `null`, or `NaN`, then an empty type `''` will be returned.\n *   - Use the `typeof` operator if you want to detect if a type is primitive or not.\n */\nexport function typeOf(value) {\n  if (value == null || Object.is(value, NaN))\n    return '';\n\n  if (Object.is(value, Infinity) || Object.is(value, -Infinity))\n    return '::Number';\n\n  let thisType = typeof value;\n  if (thisType === 'bigint')\n    return '::BigInt';\n\n  if (thisType === 'symbol')\n    return '::Symbol';\n\n  if (thisType !== 'object') {\n    if (thisType === 'function') {\n      let nativeTypeMeta = NATIVE_CLASS_TYPES_META.find((typeMeta) => (value === typeMeta[1]));\n      if (nativeTypeMeta)\n        return `[Class ::${nativeTypeMeta[0]}]`;\n\n      if (value.prototype && typeof value.prototype.constructor === 'function' && IS_CLASS.test('' + value.prototype.constructor))\n        return `[Class ${value.name}]`;\n\n      if (value.prototype && typeof value.prototype[Symbol.toStringTag] === 'function') {\n        let result = value.prototype[Symbol.toStringTag]();\n        if (result)\n          return `[Class ${result}]`;\n      }\n    }\n\n    return `::${thisType.charAt(0).toUpperCase()}${thisType.substring(1)}`;\n  }\n\n  if (Array.isArray(value))\n    return '::Array';\n\n  if (value instanceof String)\n    return '::String';\n\n  if (value instanceof Number)\n    return '::Number';\n\n  if (value instanceof Boolean)\n    return '::Boolean';\n\n  let nativeTypeMeta = NATIVE_CLASS_TYPES_META.find((typeMeta) => {\n    try {\n      return (typeMeta[0] !== 'Object' && value instanceof typeMeta[1]);\n    } catch (e) {\n      return false;\n    }\n  });\n  if (nativeTypeMeta)\n    return `::${nativeTypeMeta[0]}`;\n\n  if (typeof Math !== 'undefined' && value === Math)\n    return '::Math';\n\n  if (typeof JSON !== 'undefined' && value === JSON)\n    return '::JSON';\n\n  if (typeof Atomics !== 'undefined' && value === Atomics)\n    return '::Atomics';\n\n  if (typeof Reflect !== 'undefined' && value === Reflect)\n    return '::Reflect';\n\n  if (value[Symbol.toStringTag])\n    return (typeof value[Symbol.toStringTag] === 'function') ? value[Symbol.toStringTag]() : value[Symbol.toStringTag];\n\n  if (isPlainObject(value))\n    return '::Object';\n\n  return value.constructor.name || 'Object';\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Runtime type reflection helper. This is intended to be a more robust replacement for the `instanceof` operator.\n *\n *   This method will return `true` if the provided `value` is *any* of the provided `types`.\n *\n *   The provided `types` can each either be a real raw type (i.e. `String` class), or the name of a type, as a string,\n *   i.e. `'::String'`.\n * arguments:\n *   - name: value\n *     dataType: any\n *     desc: The value whose type you wish to compare.\n *   - name: ...types\n *     dataType: Array<any>\n *     desc: All types you wish to check against. String values compare types by name, function values compare types by `instanceof`.\n * return: |\n *   @types boolean;\n *   1. Return `true` if `value` matches any of the provided `types`.\n *   2. Otherwise, `false` is returned.\n * notes:\n *   - |\n *     :eye: @see BaseUtils.typeOf;.\n */\nexport function isType(value, ...types) {\n  const getInternalTypeName = (type) => {\n    let nativeTypeMeta = NATIVE_CLASS_TYPES_META.find((typeMeta) => (type === typeMeta[1]));\n    if (nativeTypeMeta)\n      return `::${nativeTypeMeta[0]}`;\n  };\n\n  let valueType = typeOf(value);\n  for (let type of types) {\n    try {\n      if (typeOf(type, '::String') && valueType === type) {\n        return true;\n      } else if (typeof type === 'function') {\n        if (value instanceof type)\n          return true;\n\n        let internalType = getInternalTypeName(type);\n        if (internalType && internalType === valueType)\n          return true;\n      }\n    } catch (e) {\n      continue;\n    }\n  }\n\n  return false;\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Verify that the provided `value` is a `number` type (or `Number` instance), and that\n *   it **is not** `NaN`, `Infinity`, or `-Infinity`.\n * arguments:\n *   - name: value\n *     dataType: any\n *     desc: Value to check\n * return: |\n *   @types boolean;\n *   1. Return `true` if `value` is a `number` (or `Number` instance) and is also **not** `NaN`, `Infinity`, or `-Infinity`. i.e. `(isNumber(value) && isFinite(value))`.\n *   2. Otherwise, `false` is returned.\n * notes:\n *   - |\n *     :eye: @see BaseUtils.typeOf;.\n *   - |\n *     :eye: @see BaseUtils.isType;.\n */\nexport function isValidNumber(value) {\n  return (isType(value, '::Number') && isFinite(value));\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Verify that the provided `value` is a \"plain\"/\"vanilla\" Object instance.\n *\n *   This method is intended to help the caller detect if an object is a \"raw plain object\",\n *   inheriting from `Object.prototype` (or a `null` prototype).\n *\n *   1. `isPlainObject({})` will return `true`.\n *   2. `isPlainObject(new Object())` will return `true`.\n *   3. `isPlainObject(Object.create(null))` will return `true`.\n *   4. `isPlainObject(new CustomClass())` will return `false`.\n *   5. All other invocations should return `false`.\n * arguments:\n *   - name: value\n *     dataType: any\n *     desc: Value to check\n * return: |\n *   @types boolean;\n *   1. Return `true` if `value` is a \"raw\"/\"plain\" Object instance.\n *   2. Otherwise, `false` is returned.\n * notes:\n *   - |\n *     :eye: @see BaseUtils.typeOf;.\n *   - |\n *     :eye: @see BaseUtils.isType;.\n */\nexport function isPlainObject(value) {\n  if (!value)\n    return false;\n\n  if (typeof value !== 'object')\n    return false;\n\n  if (value.constructor === Object || value.constructor == null)\n    return true;\n\n  return false;\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Detect if the provided `value` is a javascript primitive type.\n * arguments:\n *   - name: value\n *     dataType: any\n *     desc: Value to check\n * return: |\n *   @types boolean;\n *   1. Return `true` if `typeof value` is one of: `string`, `number`, `boolean`, `bigint`, or `symbol`,\n *      *and also* `value` is *not* `NaN`, `Infinity`, `-Infinity`, `undefined`, or `null`.\n *   2. Otherwise, `false` is returned.\n * notes:\n *   - |\n *     :eye: @see BaseUtils.typeOf;.\n *   - |\n *     :eye: @see BaseUtils.isType;.\n */\nexport function isPrimitive(value) {\n  if (value == null || Object.is(value, NaN))\n    return false;\n\n  if (typeof value === 'symbol')\n    return true;\n\n  if (Object.is(value, Infinity) || Object.is(value, -Infinity))\n    return true;\n\n  return isType(value, '::String', '::Number', '::Boolean', '::BigInt');\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Detect if the provided `value` is garbage collectable.\n *\n *   This method is used to check if any `value` is allowed to be used as a weak reference.\n *\n *   Essentially, this will return `false` for any primitive type, or `null`, `undefined`, `NaN`, `Infinity`, or `-Infinity` values.\n * arguments:\n *   - name: value\n *     dataType: any\n *     desc: Value to check\n * return: |\n *   @types boolean;\n *   1. Return `true` if `typeof value` is one of: `string`, `number`, `boolean`, `bigint`, or `symbol`,\n *      *and also* `value` *is not* `NaN`, `Infinity`, `-Infinity`, `undefined`, or `null`.\n *   2. Otherwise, `false` is returned.\n * notes:\n *   - |\n *     :eye: @see BaseUtils.typeOf;.\n *   - |\n *     :eye: @see BaseUtils.isType;.\n */\nexport function isCollectable(value) {\n  if (value == null || Object.is(value, NaN) || Object.is(Infinity) || Object.is(-Infinity))\n    return false;\n\n  if (typeof value === 'symbol')\n    return false;\n\n  if (isType(value, '::String', '::Number', '::Boolean', '::BigInt'))\n    return false;\n\n  return true;\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Detect if the provided `value` is \"empty\" (is **N**ull **O**r **E**mpty).\n *\n *   A value is considered \"empty\" if any of the following conditions is met:\n *   1. `value` is `undefined`.\n *   2. `value` is `null`.\n *   3. `value` is `''` (an empty string).\n *   4. `value` is not an empty string, but it contains nothing except whitespace (`\\t`, `\\r`, `\\s`, or `\\n`).\n *   5. `value` is `NaN`.\n *   6. `value.length` is a `Number` or `number` type, and is equal to `0`.\n *   7. `value` is a @see BaseUtils.isPlainObject?caption=plain+object; and has no iterable keys.\n * arguments:\n *   - name: value\n *     dataType: any\n *     desc: Value to check\n * return: |\n *   @types boolean;\n *   1. Return `true` if any of the \"empty\" conditions above are true.\n *   2. Otherwise, `false` is returned.\n * notes:\n *   - |\n *     :eye: @see BaseUtils.isNotNOE;.\n */\nexport function isNOE(value) {\n  if (value == null)\n    return true;\n\n  if (Object.is(value, NaN))\n    return true;\n\n  if (value === '')\n    return true;\n\n  if (isType(value, '::String') && (/^[\\t\\s\\r\\n]*$/).test(value))\n    return true;\n\n  if (isType(value.length, '::Number'))\n    return (value.length === 0);\n\n  if (isPlainObject(value) && Object.keys(value).length === 0)\n    return true;\n\n  return false;\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Detect if the provided `value` is **not** \"empty\" (is not **N**ull **O**r **E**mpty).\n *\n *   A value is considered \"empty\" if any of the following conditions is met:\n *   1. `value` is `undefined`.\n *   2. `value` is `null`.\n *   3. `value` is `''` (an empty string).\n *   4. `value` is not an empty string, but it contains nothing except whitespace (`\\t`, `\\r`, `\\s`, or `\\n`).\n *   5. `value` is `NaN`.\n *   6. `value.length` is a `Number` or `number` type, and is equal to `0`.\n *   7. `value` is a @see BaseUtils.isPlainObject?caption=plain+object; and has no iterable keys.\n * arguments:\n *   - name: value\n *     dataType: any\n *     desc: Value to check\n * return: |\n *   @types boolean;\n *   1. Return `false` if any of the \"empty\" conditions above are true.\n *   2. Otherwise, `true` is returned.\n * notes:\n *   - |\n *     :info: This is the exact inverse of @see BaseUtils.isNOE;\n *   - |\n *     :eye: @see BaseUtils.isNOE;.\n */\nexport function isNotNOE(value) {\n  return !isNOE(value);\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Convert the provided `string` `value` into [camelCase](https://en.wikipedia.org/wiki/Letter_case#Camel_case).\n *\n *   The process is roughly as follows:\n *   1. Any non-word characters ([a-zA-Z0-9_]) are stripped from the beginning of the string.\n *   2. Any non-word characters ([a-zA-Z0-9_]) are stripped from the end of the string.\n *   3. Each \"word\" is capitalized.\n *   4. The first letter is always lower-cased.\n * arguments:\n *   - name: value\n *     dataType: string\n *     desc: String to convert into [camelCase](https://en.wikipedia.org/wiki/Letter_case#Camel_case).\n * return: |\n *   @types string; The formatted string in [camelCase](https://en.wikipedia.org/wiki/Letter_case#Camel_case).\n * examples:\n *   - |\n *     ```javascript\n *     import { BaseUtils } from 'mythix-ui-core@1.0';\n *\n *     console.log(BaseUtils.toCamelCase('--test-some_value_@'));\n *     // output -> 'testSomeValue'\n *     ```\n */\nexport function toCamelCase(value) {\n  return ('' + value)\n    .replace(/^\\W/, '')\n    .replace(/[\\W]+$/, '')\n    .replace(/([A-Z]+)/g, '-$1')\n    .toLowerCase()\n    .replace(/\\W+(.)/g, (m, p) => {\n      return p.toUpperCase();\n    })\n    .replace(/^(.)(.*)$/, (m, f, l) => `${f.toLowerCase()}${l}`);\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Convert the provided `string` `value` into [snake_case](https://en.wikipedia.org/wiki/Letter_case#Snake_case).\n *\n *   The process is roughly as follows:\n *   1. Any capitalized character sequence is prefixed by an underscore.\n *   2. More than one sequential underscores are converted into a single underscore.\n * arguments:\n *   - name: value\n *     dataType: string\n *     desc: String to convert into [snake_case](https://en.wikipedia.org/wiki/Letter_case#Snake_case).\n * return: |\n *   @types string; The formatted string in [snake_case](https://en.wikipedia.org/wiki/Letter_case#Snake_case).\n * examples:\n *   - |\n *     ```javascript\n *     import { BaseUtils } from 'mythix-ui-core@1.0';\n *\n *     console.log(BaseUtils.toSnakeCase('ThisIsASentence'));\n *     // output -> 'this_is_a_sentence'\n *     ```\n */\nexport function toSnakeCase(value) {\n  return ('' + value)\n    .replace(/[A-Z]+/g, (m, offset) => ((offset) ? `_${m.toLowerCase()}` : m.toLowerCase()))\n    .replace(/_{2,}/g, '_')\n    .toLowerCase();\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Convert the provided `string` `value` into [kebab-case](https://en.wikipedia.org/wiki/Letter_case#Kebab_case).\n *\n *   The process is roughly as follows:\n *   1. Any capitalized character sequence is prefixed by a hyphen.\n *   2. More than one sequential hyphens are converted into a single hyphen.\n * arguments:\n *   - name: value\n *     dataType: string\n *     desc: String to turn into [kebab-case](https://en.wikipedia.org/wiki/Letter_case#Kebab_case).\n * return: |\n *   @types string; The formatted string in [kebab-case](https://en.wikipedia.org/wiki/Letter_case#Kebab_case).\n * examples:\n *   - |\n *     ```javascript\n *     import { BaseUtils } from 'mythix-ui-core@1.0';\n *\n *     console.log(BaseUtils.toKebabCase('ThisIsASentence'));\n *     // output -> 'this-is-a-sentence'\n *     ```\n */\nexport function toKebabCase(value) {\n  return ('' + value)\n    .replace(/[A-Z]+/g, (m, offset) => ((offset) ? `-${m.toLowerCase()}` : m.toLowerCase()))\n    .replace(/-{2,}/g, '-')\n    .toLowerCase();\n}\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Do our best to emulate [process.nextTick](https://nodejs.org/en/guides/event-loop-timers-and-nexttick/#processnexttick)\n *   in the browser.\n *\n *   In order to try and emulate `process.nextTick`, this function will use `globalThis.requestAnimationFrame(() => callback())` if available,\n *   otherwise it will fallback to using `Promise.resolve().then(callback)`.\n * arguments:\n *   - name: callback\n *     dataType: function\n *     desc: Callback function to call on \"nextTick\".\n * notes:\n *   - |\n *     :info: This function will prefer and use `process.nextTick` if it is available (i.e. if running on NodeJS).\n *   - |\n *     :warning: This function is unlikely to actually be the next \"tick\" of the underlying\n *     javascript engine. This method just does its best to emulate \"nextTick\". Instead of the\n *     actual \"next tick\", this will instead be \"as fast as possible\".\n *   - |\n *     :info: This function deliberately attempts to use `requestAnimationFrame` first--even though it likely doesn't\n *     have the fastest turn-around-time--to save battery power. The idea being that \"something needs to be done *soon*\".\n */\nexport function nextTick(callback) {\n  if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n    process.nextTick(callback);\n  } else if (typeof globalThis.requestAnimationFrame === 'function') {\n    globalThis.requestAnimationFrame(() => {\n      callback();\n    });\n  } else {\n    (new Promise((resolve) => {\n      resolve();\n    })).then(() => {\n      callback();\n    });\n  }\n}\n\nconst IS_NUMBER = /^([-+]?)(\\d*(?:\\.\\d+)?)(e[-+]\\d+)?$/;\nconst IS_BOOLEAN = /^(true|false)$/;\n\n/**\n * groupName: BaseUtils\n * desc: |\n *   Coerce a string to its most likely underlying primitive type.\n *\n *   Conversion input and output table:\n *   * `'null'` converts to `null`\n *   * `'undefined'` converts to `undefined`\n *   * `'NaN'` converts to `NaN`\n *   * `'Infinity'` converts to `Infinity`\n *   * `'-Infinity'` converts to `-Infinity`\n *   * `'true'` converts to `true`\n *   * `'false'` converts to `false`\n *   * Any parsable numeric string value (including [E notation](https://en.wikipedia.org/wiki/Scientific_notation#E_notation)) converts to `number`\n *\n * arguments:\n *   - name: value\n *     dataType: string\n *     desc: Value to convert.\n */\nexport function coerce(value) {\n  if (value === 'null')\n    return null;\n\n  if (value === 'undefined')\n    return undefined;\n\n  if (value === 'NaN')\n    return NaN;\n\n  if (value === 'Infinity' || value === '+Infinity')\n    return Infinity;\n\n  if (value === '-Infinity')\n    return -Infinity;\n\n  if (IS_NUMBER.test(value))\n    // eslint-disable-next-line no-magic-numbers\n    return parseFloat(value, 10);\n\n  if (IS_BOOLEAN.test(value))\n    return (value === 'true');\n\n  return value;\n}\n","import {\n  DYNAMIC_PROPERTY_TYPE,\n  DYNAMIC_PROPERTY_VALUE,\n  DYNAMIC_PROPERTY_IS_SETTING,\n  DYNAMIC_PROPERTY_SET,\n  MYTHIX_TYPE,\n} from './constants.js';\n\nimport * as BaseUtils from './base-utils.js';\n\n/**\n * groupName: DynamicProperty\n * desc: |\n *   `DynamicProperty` is a simple value storage class wrapped in a Proxy.\n *\n *    It will allow the user to store any desired value. The catch however is that\n *    any value stored can only be set through its special `set` method.\n *\n *    This will allow any listeners to receive the `'update'` event when a value is set.\n *\n *    Since `DynamicProperty` instances are also always wrapped in a Proxy, the user may\n *    \"directly\" access attributes of the stored value. For example, if a `DynamicProperty`\n *    is storing an Array instance, then one would be able to access the `.length` property\n *    \"directly\", i.e. `dynamicProp.length`.\n *\n *    `DynamicProperty` has a special `set` method, whose name is a `symbol`, to avoid conflicting\n *    namespaces with the underlying datatype (and the wrapping Proxy).\n *    To set a value on a `DynamicProperty` instance, one must do so as follows: `dynamicProperty[DynamicProperty.set](myNewValue)`.\n *    This will update the internal value, and if the set value differs from the stored value, the `'update'` event will be dispatched to\n *    any listeners.\n *\n *    As `DynamicProperty` is an [EventTarget](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/EventTarget), one can attach\n *    event listeners to the `'update'` event to listen for updates to the underlying value. The `'update'` event is the only event that is\n *    ever triggered by this class. The received `event` instance in event callbacks will have the following attributes:\n *    1. `updateEvent.originator = this;` - `originator` is the instance of the `DynamicProperty` where the event originated from.\n *    2. `updateEvent.oldValue = currentValue;` - `oldValue` contains the previous value of the `DynamicProperty` before set.\n *    3. `updateEvent.value = newValue;` - `value` contains the current value being set on the `DynamicProperty`.\n *\n *    To retrieve the underlying raw value of a `DynamicProperty`, one may call `valueOf()`: `let rawValue = dynamicProperty.valueOf();`\n * notes:\n *   - |\n *     :warning: `DynamicProperty` instances will internally track when a `set` operation is underway, to prevent\n *     cyclic sets and maximum call stack errors. You are allowed to set the value recursively, however `update` events\n *     will only be dispatched for the first `set` call. Any `set` operation that happens while another `set` operation is\n *     underway will **not** dispatch any `'update'` events.\n *   - |\n *     `'update'` events will be dispatched immediately *after* the internal underlying stored value is updated. Though it is\n *     possible to `stopImmediatePropagation` in an event callback, attempting to \"preventDefault\" or \"stopPropagation\" will do nothing.\n * examples:\n *   - |\n *     ```javascript\n *     import { DynamicProperty } from 'mythix-ui-core@1.0';\n *\n *     let dynamicProperty = new DynamicProperty('initial value');\n *\n *     dynamicProperty.addEventListener('update', (event) => {\n *       console.log(`Dynamic Property Updated! New value = '${event.value}', Previous Value = '${event.oldValue}'`);\n *       console.log(`Current Value = '${dynamicProperty.valueOf()}'`);\n *     });\n *\n *     dynamicProperty[DynamicProperty.set]('new value');\n *\n *     // output -> Dynamic Property Updated! New value = 'new value', Old Value = 'initial value'\n *     // output -> Current Value = 'initial value'\n *     ```\n */\nexport class DynamicProperty extends EventTarget {\n  static [Symbol.hasInstance](instance) { // @ref:_mythixTypeExample\n    try {\n      return (instance && instance[MYTHIX_TYPE] === DYNAMIC_PROPERTY_TYPE);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * type: Property\n   * name: set\n   * groupName: DynamicProperty\n   * parent: DynamicProperty\n   * static: true\n   * desc: |\n   *   A special `symbol` used to access the `set` method of a `DynamicProperty`.\n   * examples:\n   *   - |\n   *     ```javascript\n   *     import { DynamicProperty } from 'mythix-ui-core@1.0';\n   *\n   *     let dynamicProperty = new DynamicProperty('initial value');\n   *\n   *     dynamicProperty.addEventListener('update', (event) => {\n   *       console.log(`Dynamic Property Updated! New value = '${event.value}', Previous Value = '${event.oldValue}'`);\n   *       console.log(`Current Value = '${dynamicProperty.valueOf()}'`);\n   *     });\n   *\n   *     dynamicProperty[DynamicProperty.set]('new value');\n   *\n   *     // output -> Dynamic Property Updated! New value = 'new value', Old Value = 'initial value'\n   *     // output -> Current Value = 'initial value'\n   *     ```\n   */\n  static set = DYNAMIC_PROPERTY_SET; // @ref:DynamicProperty.set\n\n  /**\n   * type: Function\n   * name: constructor\n   * groupName: DynamicProperty\n   * parent: Utils\n   * desc: |\n   *   Construct a `DynamicProperty`.\n   * arguments:\n   *   - name: initialValue\n   *     dataType: any\n   *     desc:\n   *       The initial value to store.\n   * notes:\n   *   - |\n   *     :info: This will return a Proxy instance wrapping the `DynamicProperty` instance.\n   *   - |\n   *     :info: You can not set a `DynamicProperty` to another `DynamicProperty` instance.\n   *     If `initialValue` is a `DynamicProperty` instance, it will use the stored value\n   *     of that instance instead (by calling @see DynamicProperty.valueOf;).\n   */\n  constructor(initialValue) {\n    super();\n\n    Object.defineProperties(this, {\n      [MYTHIX_TYPE]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        DYNAMIC_PROPERTY_TYPE,\n      },\n      [DYNAMIC_PROPERTY_VALUE]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        (BaseUtils.isType(initialValue, DynamicProperty)) ? initialValue.valueOf() : initialValue,\n      },\n      [DYNAMIC_PROPERTY_IS_SETTING]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        false,\n      },\n    });\n\n    let proxy = new Proxy(this, {\n      get:  (target, propName) => {\n        if (propName in target) {\n          let value = target[propName];\n          return (typeof value === 'function') ? value.bind(target) : value;\n        }\n\n        let value = target[DYNAMIC_PROPERTY_VALUE][propName];\n        return (value === 'function') ? value.bind(target[DYNAMIC_PROPERTY_VALUE]) : value;\n      },\n      set:  (target, propName, value) => {\n        if (propName in target)\n          target[propName] = value;\n        else\n          target[DYNAMIC_PROPERTY_VALUE][propName] = value;\n\n        return true;\n      },\n    });\n\n    return proxy;\n  }\n\n  [Symbol.toPrimitive](hint) {\n    if (hint === 'number')\n      return +this[DYNAMIC_PROPERTY_VALUE];\n    else if (hint === 'string')\n      return this.toString();\n\n    return this.valueOf();\n  }\n\n  toString() {\n    let value = this[DYNAMIC_PROPERTY_VALUE];\n    return (value && typeof value.toString === 'function') ? value.toString() : ('' + value);\n  }\n\n  /**\n   * type: Function\n   * groupName: DynamicProperty\n   * parent: DynamicProperty\n   * desc: |\n   *   Fetch the underlying raw value stored by this `DynamicProperty`.\n   * return: |\n   *   @types: any; The underling raw value.\n   */\n  valueOf() {\n    return this[DYNAMIC_PROPERTY_VALUE];\n  }\n\n  /**\n   * type: Function\n   * name: \"[DynamicProperty.set]\"\n   * groupName: DynamicProperty\n   * parent: DynamicProperty\n   * desc: |\n   *   Set the underlying raw value stored by this `DynamicProperty`.\n   *\n   *   If the current stored value is exactly the same as the provided `value`,\n   *   then this method will simply return.\n   *\n   *   Otherwise, when the underlying value is updated, `this.dispatchEvent` will\n   *   be called to dispatch an `'update'` event to notify all listeners that the\n   *   underlying value has been changed.\n   * arguments:\n   *   - name: newValue\n   *     dataType: any\n   *     desc: |\n   *       The new value to set. If this is itself a `DynamicProperty` instance, then\n   *       it will be unwrapped to its underlying value, and that will be used as the value instead.\n   *   - name: options\n   *     optional: true\n   *     dataType: object\n   *     desc: |\n   *       An object to provided options for the operation. The shape of this object is `{ dispatchUpdateEvent: boolean }`.\n   *       If `options.dispatchUpdateEvent` equals `false`, then no `'update'` event will be dispatched to listeners.\n   * notes:\n   *   - |\n   *     :info: If the underlying stored value is exactly the same as the value provided,\n   *     then nothing will happen, and the method will simply return.\n   *   - |\n   *     :info: The underlying value is updated *before* dispatching events.\n   *   - |\n   *     :info: `DynamicProperty` protects against cyclic event callbacks. If an\n   *     event callback again sets the underlying `DynamicProperty` value, then\n   *     the value will be set, but no event will be dispatched (to prevent event loops).\n   *   - |\n   *     :info: You can not set a `DynamicProperty` to another `DynamicProperty` instance.\n   *     If this method receives a `DynamicProperty` instance, it will use the stored value\n   *     of that instance instead (by calling @see DynamicProperty.valueOf;).\n   */\n  [DYNAMIC_PROPERTY_SET](_newValue, _options) {\n    let newValue = _newValue;\n    if (BaseUtils.isType(newValue, DynamicProperty))\n      newValue = newValue.valueOf();\n\n    if (this[DYNAMIC_PROPERTY_VALUE] === newValue)\n      return;\n\n    if (this[DYNAMIC_PROPERTY_IS_SETTING]) {\n      this[DYNAMIC_PROPERTY_VALUE] = newValue;\n      return;\n    }\n\n    let options = _options || {};\n\n    try {\n      this[DYNAMIC_PROPERTY_IS_SETTING] = true;\n\n      let oldValue = this[DYNAMIC_PROPERTY_VALUE];\n      this[DYNAMIC_PROPERTY_VALUE] = newValue;\n\n      if (options.dispatchUpdateEvent === false)\n        return;\n\n      let updateEvent = new Event('update');\n\n      updateEvent.originator = this;\n      updateEvent.oldValue = oldValue;\n      updateEvent.value = newValue;\n\n      this.dispatchEvent(updateEvent);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this[DYNAMIC_PROPERTY_IS_SETTING] = false;\n    }\n  }\n}\n","import {\n  MYTHIX_NAME_VALUE_PAIR_HELPER,\n  MYTHIX_SHADOW_PARENT,\n  MYTHIX_TYPE,\n  ELEMENT_DEFINITION_TYPE,\n  QUERY_ENGINE_TYPE,\n} from './constants.js';\n\nimport * as BaseUtils from './base-utils.js';\n\nimport { DynamicProperty } from './dynamic-property.js';\n\n/**\n * type: Namespace\n * name: Utils\n * groupName: Utils\n * desc: |\n *   `import { Utils } from 'mythix-ui-core@1.0';`\n *\n *   Misc utility functions are found within this namespace.\n */\n\nexport function bindMethods(_proto, skipProtos) {\n  let proto           = _proto;\n  let alreadyVisited  = new Set();\n\n  while (proto) {\n    if (proto === Object.prototype)\n      return;\n\n    let descriptors = Object.getOwnPropertyDescriptors(proto);\n    let keys        = Object.keys(descriptors).concat(Object.getOwnPropertySymbols(descriptors));\n\n    for (let i = 0, il = keys.length; i < il; i++) {\n      let key = keys[i];\n      if (key === 'constructor' || key === 'prototype')\n        continue;\n\n      if (alreadyVisited.has(key))\n        continue;\n\n      alreadyVisited.add(key);\n\n      let descriptor = descriptors[key];\n\n      // Can it be changed?\n      if (descriptor.configurable === false)\n        continue;\n\n      // If is getter, then skip\n      if (Object.prototype.hasOwnProperty.call(descriptor, 'get') || Object.prototype.hasOwnProperty.call(descriptor, 'set')) {\n        let newDescriptor = { ...descriptor };\n        if (newDescriptor.get)\n          newDescriptor.get = newDescriptor.get.bind(this);\n\n        if (newDescriptor.set)\n          newDescriptor.set = newDescriptor.set.bind(this);\n\n        Object.defineProperty(this, key, newDescriptor);\n        continue;\n      }\n\n      let value = descriptor.value;\n\n      // Skip prototype of Object\n      // eslint-disable-next-line no-prototype-builtins\n      if (Object.prototype.hasOwnProperty(key) && Object.prototype[key] === value)\n        continue;\n\n      if (typeof value !== 'function')\n        continue;\n\n      Object.defineProperty(this, key, { ...descriptor, value: value.bind(this) });\n    }\n\n    proto = Object.getPrototypeOf(proto);\n    if (proto === Object.prototype)\n      break;\n\n    if (skipProtos && skipProtos.indexOf(proto) >= 0)\n      break;\n  }\n}\n\nexport function getDescriptorFromPrototypeChain(startProto, descriptorName) {\n  let thisProto = startProto;\n  let descriptor;\n\n  while (thisProto && !(descriptor = Object.getOwnPropertyDescriptor(thisProto, descriptorName)))\n    thisProto = Object.getPrototypeOf(thisProto);\n\n  return { prototype: thisProto, descriptor };\n}\n\nconst METADATA_STORAGE = Symbol.for('@mythix/mythix-ui/component/constants/metadata-storage');\nconst METADATA_WEAKMAP = globalThis.mythixUI[METADATA_STORAGE] = (globalThis.mythixUI[METADATA_STORAGE]) ? globalThis.mythixUI[METADATA_STORAGE] : new WeakMap();\n\n/**\n * groupName: Utils\n * desc: |\n *   Store and retrieve metadata on any garbage-collectable reference.\n *\n *   This function uses an internal WeakMap to store metadata for any garbage-collectable value.\n *\n *   The number of arguments provided will change the behavior of this function:\n *   1. If only one argument is supplied (a `target`), then a Map of metadata key/value pairs is returned.\n *   2. If only two arguments are supplied, then `metadata` acts as a getter, and the value stored under the specified `key` is returned.\n *   3. If more than two arguments are supplied, then `metadata` acts as a setter, and `target` is returned (for continued chaining).\n * arguments:\n *   - name: target\n *     dataType: any\n *     desc: |\n *       This is the value for which metadata is being stored or retrieved.\n *       This can be any garbage-collectable value (any value that can be used as a key in a WeakMap).\n *   - name: key\n *     dataType: any\n *     optional: true\n *     desc: |\n *       The key used to store or fetch the specified metadata value. This can be any value, as the underlying\n *       storage is a Map.\n *   - name: value\n *     dataType: any\n *     optional: true\n *     desc: |\n *       The value to store on the `target` under the specified `key`.\n * return: |\n *   @types any;\n *   1. If only one argument is provided (a bulk get operation), return a Map containing the metadata for the specified `target`.\n *   2. If two arguments are provided (a get operation), the `target` metadata value stored for the specified `key`.\n *   2. If more than two arguments are provided (a set operation), the provided `target` is returned.\n * examples:\n *   - |\n *     ```javascript\n *     import { Utils } from 'mythix-ui-core@1.0';\n *\n *     // set\n *     Utils.metadata(myElement, 'customCaption', 'Metadata Caption!');\n *\n *     // get\n *     console.log(Utils.metadata(myElement, 'customCaption'));\n *     // output -> 'Metadata Caption!'\n *\n *     // get all\n *     console.log(Utils.metadata(myElement));\n *     // output -> Map(1) { 'customCaption' => 'Metadata Caption!' }\n *     ```\n */\nexport function metadata(target, key, value) {\n  let data = METADATA_WEAKMAP.get(target);\n  if (!data) {\n    if (!BaseUtils.isCollectable(target))\n      throw new Error(`Unable to set metadata on provided object: ${(typeof target === 'symbol') ? target.toString() : target}`);\n\n    data = new Map();\n    METADATA_WEAKMAP.set(target, data);\n  }\n\n  if (arguments.length === 1)\n    return data;\n\n  if (arguments.length === 2)\n    return (data) ? data.get(key) : undefined;\n\n  data.set(key, value);\n\n  return target;\n}\n\nconst VALID_JS_IDENTIFIER = /^[a-zA-Z_$][a-zA-Z0-9_$]*$/;\nconst RESERVED_IDENTIFIER = /^(break|case|catch|class|const|continue|debugger|default|delete|do|else|export|extends|false|finally|for|function|if|import|in|instanceof|new|null|return|super|switch|this|throw|true|try|typeof|var|void|while|with|let|static|yield)$/;\n\nfunction getContextCallArgs(context, ...extraContexts) {\n  let contextCallArgs = Array.from(\n    new Set(getAllPropertyNames(context).concat(\n      Object.keys(globalThis.mythixUI.globalScope || {}),\n      [ 'attributes', 'classList', '$$', 'i18n' ],\n      ...extraContexts.map((extraContext) => Object.keys(extraContext || {})),\n    )),\n  ).filter((name) => {\n    if (RESERVED_IDENTIFIER.test(name))\n      return false;\n\n    return VALID_JS_IDENTIFIER.test(name);\n  });\n\n  return `{${contextCallArgs.join(',')}}`;\n}\n\n/**\n * groupName: Utils\n * desc: |\n *   Get the parent Node of `element`.\n * arguments:\n *   - name: element\n *     dataType: Node\n *     desc: |\n *       The Node whose parent you wish to find.\n * notes:\n *   - |\n *     :warning: Unlike [Node.parentNode](https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode), this\n *     will also search across Shadow DOM boundaries.\n *   - |\n *     :warning: **Searching across Shadow DOM boundaries only works for Mythix UI components!**\n *   - |\n *     :info: Searching across Shadow DOM boundaries is accomplished via leveraging @see MythixUIComponent.metadata; on\n *     `element`. When a `null` parent is encountered, `getParentNode` will look for @see MythixUIComponent.metadata?caption=metadata; key @see Constants.MYTHIX_SHADOW_PARENT;\n *     on `element`. If found, the result is considered the [parent Node](https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode) of `element`.\n * return: |\n *   @types Node; The parent node, if there is any, or `null` otherwise.\n */\nexport function getParentNode(element) {\n  if (!element)\n    return null;\n\n  if (element.parentNode && element.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE)\n    return metadata(element.parentNode, MYTHIX_SHADOW_PARENT) || null;\n\n  if (!element.parentNode && element.nodeType === Node.DOCUMENT_FRAGMENT_NODE)\n    return metadata(element, MYTHIX_SHADOW_PARENT) || null;\n\n  return element.parentNode;\n}\n\n/**\n * groupName: Utils\n * desc: |\n *   Create a Proxy that is essentially (functionally) a multi-prototype `object` instance.\n *\n *   A \"scope\" in Mythix UI might be better called a \"context\"... however, \"scope\"\n *   was chosen because it *is* a scope... or might be better described as \"multiple scopes in one\".\n *   This is specifically a \"DOM scope\", in that this method is \"DOM aware\" and will traverse the\n *   DOM looking for the requested data (if any of the specified `targets` is an Element that is).\n *\n *   The way this works is that the caller will provide at least one \"target\". These targets are\n *   themselves scopes, elements, or other data objects. When the returned Proxy instance is accessed,\n *   the requested key is searched in all provided `targets`, in the order they were provided.\n *\n *   Aside from searching all targets for the desired key, it will also fallback to other data sources\n *   it searches in as well:\n *   1. If any given `target` it is searching is an Element, then it will also search\n *      for the requested key on the element itself.\n *   2. If step #1 has failed, then move to the parent node of the current Element instance, and\n *      repeat the process, starting from step #1.\n *   3. After steps 1-2 are repeated for every given `target` (and all parent nodes of those `targets`... if any),\n *      then this method will finally fallback to searching `globalThis.mythixUI.globalScope` for the requested key.\n *\n *   We aren't quite finished yet though...\n *\n *   If steps 1-3 above all fail, then this method will still fallback to the fallowing hard-coded key/value pairs:\n *   1. A requested key of `'globalScope'` (if not found on a target) will result in `globalThis.mythixUI.globalScope` being returned.\n *   2. A requested key of `'i18n'` (if not found on a target) will result in the built-in `i18n` language term processor being returned.\n *   3. A requested key of `'dynamicPropID'` (if not found on a target) will result in the built-in `dynamicPropID` dynamic property provided. See @see Utils.dynamicPropID;.\n *\n *   Finally, the returned Proxy will also intercept any value [set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set) operation,\n *   to set a value on the first target found.\n *\n *   The Proxy also overloads [ownKeys](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/ownKeys) to list **all** keys across **all** `targets`.\n * arguments:\n *   - name: ...targets\n *     dataTypes:\n *       - Object\n *       - Element\n *       - non-primitive\n *     desc: |\n *       The `targets` to be searched, in the order provided. Targets are searched both for get operations, and set operations (the first target found will be the set target).\n * notes:\n *   - |\n *     :warning: Mythix UI will deliberately never directly access `globalThis` from the template engine (for security reasons).\n *     Because of this, Mythix UI automatically provides its own global scope `globalThis.mythixUI.globalScope`.\n *     If you want data to be \"globally\" visible to Mythix UI, then you need to add your data to this special global scope.\n *   - |\n *     :info: This method is complex because it is intended to be used to provide a \"scope\" to the Mythix UI templating engine.\n *     The templating engine needs to be DOM aware, and also needs to have access to specialized, scoped data\n *     (i.e. the `mythix-ui-for-each` component will publish scoped data for each iteration, which needs to be both\n *     DOM-aware, and iteration-aware).\n *   - |\n *     :info: Any provided `target` can also be one of these Proxy scopes returned by this method.\n *   - |\n *     :info: It can help to think of the returned \"scope\" as an plain Object that has an array of prototypes.\n * return: |\n *   @types Proxy; A proxy instance, that is used to get and set keys across multiple `targets`.\n */\nexport function createScope(..._targets) {\n  const findPropNameScope = (target, propName) => {\n    if (target == null || Object.is(target, NaN))\n      return;\n\n    if (propName in target)\n      return target;\n\n    if (!(target instanceof Node))\n      return;\n\n    const searchParentNodesForKey = (element) => {\n      let currentElement = element;\n      if (!currentElement)\n        return;\n\n      do {\n        if (propName in currentElement)\n          return currentElement;\n\n        currentElement = getParentNode(currentElement);\n      } while (currentElement);\n    };\n\n    return searchParentNodesForKey(target);\n  };\n\n  let targets         = _targets.filter(Boolean);\n  let firstElement    = targets.find((target) => (target instanceof Node)) || targets[0];\n  let baseContext     = {};\n  let fallbackContext = {\n    globalScope:  (globalThis.mythixUI && globalThis.mythixUI.globalScope),\n    i18n:         (path, defaultValue) => {\n      let languageProvider = specialClosest(firstElement, 'mythix-language-provider');\n      if (!languageProvider)\n        return defaultValue;\n\n      return languageProvider.i18n(path, defaultValue);\n    },\n    dynamicPropID,\n  };\n\n  targets = targets.concat(fallbackContext);\n  let proxy   = new Proxy(baseContext, {\n    ownKeys: () => {\n      let allKeys = [];\n\n      for (let target of targets)\n        allKeys = allKeys.concat(getAllPropertyNames(target));\n\n      let globalScope = (globalThis.mythixUI && globalThis.mythixUI.globalScope);\n      if (globalScope)\n        allKeys = allKeys.concat(Object.keys(globalScope));\n\n      return Array.from(new Set(allKeys));\n    },\n    has: (_, propName) => {\n      for (let target of targets) {\n        let scope = findPropNameScope(target, propName);\n        if (!scope)\n          continue;\n\n        return true;\n      }\n\n      let globalScope = (globalThis.mythixUI && globalThis.mythixUI.globalScope);\n      if (!globalScope)\n        return false;\n\n      return (propName in globalScope);\n    },\n    get: (_, propName) => {\n      for (let target of targets) {\n        let scope = findPropNameScope(target, propName);\n        if (!scope)\n          continue;\n\n        return scope[propName];\n      }\n\n      let globalScope = (globalThis.mythixUI && globalThis.mythixUI.globalScope);\n      if (!globalScope)\n        return;\n\n      return globalScope[propName];\n    },\n    set: (_, propName, value) => {\n      const doSet = (scope, propName, value) => {\n        if (BaseUtils.isType(scope[propName], DynamicProperty))\n          scope[propName][DynamicProperty.set](value);\n        else\n          scope[propName] = value;\n\n        return true;\n      };\n\n      for (let target of targets) {\n        let scope = findPropNameScope(target, propName);\n        if (!scope)\n          continue;\n\n        return doSet(scope, propName, value);\n      }\n\n      let globalScope = (globalThis.mythixUI && globalThis.mythixUI.globalScope);\n      if (!globalScope)\n        return false;\n\n      return doSet(globalScope, propName, value);\n    },\n  });\n\n  fallbackContext.$$ = proxy;\n\n  return proxy;\n}\n\nconst EVENT_ACTION_JUST_NAME = /^%?[\\w.$]+$/;\n\n/**\n * groupName: Utils\n * desc: |\n *   Create a context-aware function, or \"macro\", that can be called and used by the template engine.\n *\n *   If you are ever trying to pass methods or dynamic properties across the DOM, then this is the method you want to use, to\n *   properly \"parse\" and use the attribute value as intended.\n *\n *   This is used for example for event bindings via attributes. If you have for example an `onclick=\"doSomething\"`\n *   attribute on an element, then this will be used to create a context-aware \"macro\" for the method \"doSomething\".\n *\n *   The term \"macro\" is used here because there are special formats \"understood\" by the template engine. For example,\n *   prefixing an attribute value with a percent sign, i.e. `name=\"%globalDynamicPropName\"` will use @see Utils.dynamicPropID;\n *   to globally fetch property of this name. This is important, because due to the async nature of the DOM, you might\n *   be requesting a dynamic property that hasn't yet been loaded/defined. This is the purpose of @see Utils.dynamicPropID;,\n *   and this specialized template format: to provide dynamic props by id, that will be available when needed.\n *\n *   The template engine also will happily accept rogue method names. For example, in a Mythix UI component you are building,\n *   you might have an element like `<button onclick=\"onButtonClick\">Click Me!<button>`. The templating engine will detect that\n *   this is ONLY an identifier, and so will search for the specified method in the available \"scope\" (see @see Utils.createScope;),\n *   which includes `this` instance of your component as the first `target`. This pattern is not required, as you can call your\n *   component method directly yourself, as with any attribute event binding in the DOM, i.e: `<button onclick=\"this.onButtonClick(event)\">Click Me!<button>`.\n *\n *   One last thing to mention is that when these \"macro\" methods are called by Mythix UI, all enumerable keys of the generated\n *   \"scope\" (see @see Utils.createScope;) are passed into the macro method as arguments. This means that the keys/values of all scope `targets`\n *   are available directly in your javascript scope. i.e. you can do things like `name=\"componentInstanceProperty(thisAttribute1, otherAttribute)\"` without needing to do\n *   `name=\"this.componentInstanceProperty(this.thisAttribute1, this.otherAttribute)\"`. :warning: It is important to keep in mind that direct reference access like this in a macro\n *   will bypass the \"scope\" (see @see Utils.createScope;) Proxy, and so if the specified key is not found (passed in as an argument to the macro), then an error will be thrown by javascript.\n *\n *   It is absolutely possible for you to receive and send arguments via these generated \"macros\". `mythix-ui-search` does this for\n *   example when a \"filter\" method is passed via an attribute. By default no extra arguments are provided when called directly by the templating engine.\n * arguments:\n *   - name: options\n *     dataType: object\n *     desc: |\n *       An object with the shape `{ body: string; prefix?: string; scope: object; }`.\n *\n *       1. `body` is the actual body of the `new Function`.\n *       2. `scope` is the scope (`this`) that you want to bind to the resulting method.\n *          This would generally be a scope created by @see Utils.createScope;\n *       3. `prefix` an optional prefix for the body of the `new Function`. This prefix is added\n *          before any function body code that Mythix UI generates.\n *          See here @sourceRef _createTemplateMacroPrefixForBindEventToElement; for an example use\n *          of `prefix` (notice how `arguments[1]` is used instead of `arguments[0]`, as `arguments[0]` is always reserved\n *          for local variable names \"injected\" from the created \"scope\").\n * notes:\n *   - |\n *     :info: Aside for some behind-the-scene modifications and ease-of-use slickness, this essentially just creates a `new Function` and binds a \"scope\" (see @see Utils.createScope;) to it.\n *   - |\n *     :info: The provided (and optional) `prefix` can be used as the start of the macro `new Function` body code. i.e. @see Utils.bindEventToElement; does exactly this to allow direct scoped\n *     access to the `event` instance. @sourceRef _createTemplateMacroPrefixForBindEventToElement;\n *   - |\n *     :info: The return method is bound by calling `.bind(scope)`. It is not possible to modify `this` at the call-site.\n * return: |\n *   @types function; A function that is \"context aware\" by being bound to the provided `scope` (see @see Utils.createScope;).\n */\nexport function createTemplateMacro({ prefix, body, scope }) {\n  let functionBody = body;\n  if (functionBody.charAt(0) === '%' || EVENT_ACTION_JUST_NAME.test(functionBody)) {\n    if (functionBody.charAt(0) === '%') {\n      functionBody = `(this.dynamicPropID || globalThis.mythixUI.globalScope.dynamicPropID)('${functionBody.substring(1).trim().replace(/'/g, '\\\\\\'')}')`;\n    } else {\n      functionBody = `(() => {\n        try {\n          let ____$ = ${functionBody};\n          return (typeof ____$ === 'function') ? ____$.apply(this, Array.from(arguments).slice(1)) : ____$;\n        } catch (e) {\n          return this.${functionBody.replace(/^\\s*this\\./, '')}.apply(this, Array.from(arguments).slice(1));\n        }\n      })();`;\n    }\n  }\n\n  let contextCallArgs = getContextCallArgs(scope, { '__macroSource': null, '__expandedMacroSource': null });\n\n  functionBody = `try { ${(prefix) ? `${prefix};` : ''}return ${(functionBody || '(void 0)').replace(/^\\s*return\\s+/, '').trim()}; } catch (error) { console.error(\\`Error in macro [\\${__macroSource}]:\\`, error, __expandedMacroSource); throw error; }`;\n\n  let localScope = Object.create(scope);\n  localScope.__macroSource = body;\n  localScope.__expandedMacroSource = functionBody;\n\n  return (new Function(contextCallArgs, functionBody)).bind(scope || {}, scope);\n}\n\n/**\n * groupName: Utils\n * desc: |\n *   Parse a template, and return its parts. A template \"part\" is one of two types: `'literal'`, or `'macro'`.\n *\n *   Take for example the following template: `'Hello \\@@greeting@@!!!'`. This template would result in three \"parts\" after parsing:\n *   1. `{ type: 'literal', source: 'Hello ', start: 0, end: 6 }`\n *   2. `{ type: 'macro', source: '\\@@greeting@@', macro: <function>, start: 6, end: 18 }`\n *   3. `{ type: 'literal', source: '!!!', start: 18, end: 21 }`\n *\n *   Concatenating all `source` properties together will result in the original input.\n *   Concatenating all `source` properties, along with the result of calling all `macro` functions, will result in the output (i.e. `part[0].source + part[1].macro() + part[2].source`).\n *   The `macro` property is the actual macro function for the parsed template part (i.e. in our example `'\\@@greeting@@'`).\n *   `start` and `end` are the offsets from the original `text` where the part can be found.\n * arguments:\n *   - name: text\n *     dataType: string\n *     desc: |\n *       The template string to parse.\n *   - name: options\n *     dataType: object\n *     desc: |\n *       Options for the operation. The shape of this object is `{ prefix?: string, scope: object }`.\n *       `scope` defines the scope for macros created by this method (see @see Utils.createScope;).\n *       `prefix` defines a function body prefix to use while creating macros (see @see Utils.createTemplateMacro;).\n * notes:\n *   - |\n *     :info: To skip parsing a specific template part, prefix with a backslash, i.e. `\\\\\\\\@@greeting@@`.\n * return: |\n *   @types Array<TemplatePart>; **TemplatePart**: `{ type: 'literal' | 'macro', source: string, start: number, end: number, macro?: function }`. Return all parsed parts of the template.\n */\nexport function parseTemplateParts(text, _options) {\n  let options       = _options || {};\n  let parts         = [];\n  let currentOffset = 0;\n\n  const addLiteral = (startOffset, endOffset) => {\n    let source = text.substring(startOffset, endOffset).replace(/\\\\@@/g, '@@');\n    parts.push({ type: 'literal', source, start: startOffset, end: endOffset });\n  };\n\n  text.replace(/(?<!\\\\)(@@)(.+?)\\1/g, (m, _, parsedText, offset) => {\n    if (currentOffset < offset)\n      addLiteral(currentOffset, offset);\n\n    currentOffset = offset + m.length;\n\n    let macro = createTemplateMacro({ ...options, body: parsedText });\n    parts.push({ type: 'macro', source: m, macro, start: offset, end: currentOffset });\n  });\n\n  if (currentOffset < text.length)\n    addLiteral(currentOffset, text.length);\n\n  return parts;\n}\n\nconst NOOP = (item) => item;\n\n/**\n * groupName: Utils\n * desc: |\n *   Compile the template parts that were parsed by @see Utils.parseTemplateParts;.\n *\n *   It is also possible to provide this method an array of @see Elements.ElementDefinition; instances,\n *   or @see QueryEngine.QueryEngine; instances (that contain @see Elements.ElementDefinition; instances).\n *   If either of these types are found in the input array (even one), then the entire result is returned\n *   as a raw array.\n *\n *   Or, if any of the resulting parts is **not** a @see Utils.parseTemplateParts?caption=TemplatePart; or a `string`,\n *   then return the resulting value raw.\n *\n *   Otherwise, if all resulting parts are a `string`, then the resulting parts are joined, and a `string` is returned.\n * arguments:\n *   - name: parts\n *     dataTypes:\n *       - Array<TemplatePart>\n *       - Array<ElementDefinition>\n *       - Array<QueryEngine>\n *       - Array<any>\n *     desc: |\n *       The template parts to compile together.\n * return: |\n *   @types Array<any>; @types string; Return the result as a string, or an array of raw values, or a raw value.\n */\nexport function compileTemplateFromParts(parts, callback) {\n  let result = parts\n    .map((part) => {\n      if (!part)\n        return part;\n\n      if (part[MYTHIX_TYPE] === ELEMENT_DEFINITION_TYPE || part[MYTHIX_TYPE] === QUERY_ENGINE_TYPE)\n        return part;\n\n      try {\n        if (part.type === 'literal')\n          return part.source;\n        else if (part.type === 'macro')\n          return part.macro();\n\n        return part;\n      } catch (e) {\n        console.error(e);\n        return part.source;\n      }\n    })\n    .map(callback || NOOP)\n    .filter((item) => (item != null && item !== ''));\n\n  if (result.some((item) => (item[MYTHIX_TYPE] === ELEMENT_DEFINITION_TYPE || item[MYTHIX_TYPE] === QUERY_ENGINE_TYPE)))\n    return result;\n\n  if (result.some((item) => BaseUtils.isType(item, '::String')))\n    return result.join('');\n\n  return (result.length < 2) ? result[0] : result;\n}\n\nconst FORMAT_TERM_ALLOWABLE_NODES = [ 3, 2 ]; // TEXT_NODE, ATTRIBUTE_NODE\n\n/**\n * groupName: Utils\n * desc: |\n *   Given a Node, take the `.nodeValue` of that node, and if it is a template,\n *   parse that template using @see Utils.parseTemplateParts;, and then\n *   compile that template using @see Utils.compileTemplateFromParts;. The\n *   resulting template parts are then scanned. If any of the `macro()` calls\n *   result in a @see DynamicProperty?caption=DynamicProperty;, then set up\n *   listeners via `addEventListener('update', ...)` on each to listen for\n *   changes to dynamic properties. When a listener updates, the template parts\n *   are recompiled, and the `.nodeValue` is set again with the new result.\n *\n *   In short, this method formats the value of a Node if the value is a template,\n *   and in doing so binds to dynamic properties for future updates to this node.\n *\n *   If the `.nodeValue` of the Node is detected to **not** be a template, then\n *   the result is a no-operation, and the raw value of the Node is simply returned.\n * arguments:\n *   - name: node\n *     dataType: Node\n *     desc: |\n *       The Node whose value should be formatted. This must be a TEXT_NODE or a ATTRIBUTE_NODE.\n * return: |\n *   @types string; The resulting node value. If a template was successfully compiled, dynamic properties\n *   are also listened to for future updates.\n */\nexport function formatNodeValue(node, _options) {\n  if (node.parentNode && (/^(style|script)$/).test(node.parentNode.localName))\n    return node.nodeValue;\n\n  if (!node || FORMAT_TERM_ALLOWABLE_NODES.indexOf(node.nodeType) < 0)\n    throw new TypeError('\"formatNodeValue\" unsupported node type provided. Only TEXT_NODE and ATTRIBUTE_NODE types are supported.');\n\n  let options       = _options || {};\n  let text          = node.nodeValue;\n  let templateParts = parseTemplateParts(text, options);\n\n  // templateParts.forEach(({ type, macro }) => {\n  //   if (type !== 'macro')\n  //     return;\n\n  //   let result = macro();\n  //   if (options.bindToDynamicProperties !== false && isType(result, DynamicProperty)) {\n  //     result.addEventListener('update', () => {\n  //       let result = ('' + compileTemplateFromParts(templateParts));\n  //       if (result !== node.nodeValue)\n  //         node.nodeValue = result;\n  //     }, { capture: true });\n  //   }\n  // });\n\n  let result = compileTemplateFromParts(templateParts, (result) => {\n    if (result && options.bindToDynamicProperties !== false && BaseUtils.isType(result, DynamicProperty)) {\n      result.addEventListener('update', () => {\n        let result = ('' + compileTemplateFromParts(templateParts));\n        if (result !== node.nodeValue)\n          node.nodeValue = result;\n      }, { capture: true });\n    }\n\n    return result;\n  });\n\n  if (result == null)\n    result = '';\n\n  return (options.disallowHTML === true) ? ('' + result) : result;\n}\n\nconst IS_TEMPLATE = /(?<!\\\\)@@/;\nexport function isTemplate(value) {\n  if (!BaseUtils.isType(value, '::String'))\n    return false;\n\n  return IS_TEMPLATE.test(value);\n}\n\nconst IS_EVENT_NAME     = /^on/;\nconst EVENT_NAME_CACHE  = new Map();\n\nexport function getAllEventNamesForElement(element) {\n  let tagName = (!element.tagName) ? element : element.tagName.toUpperCase();\n  let cache   = EVENT_NAME_CACHE.get(tagName);\n  if (cache)\n    return cache;\n\n  let eventNames = [];\n\n  for (let key in element) {\n    if (key.length > 2 && IS_EVENT_NAME.test(key))\n      eventNames.push(key.toLowerCase());\n  }\n\n  EVENT_NAME_CACHE.set(tagName, eventNames);\n\n  return eventNames;\n}\n\nexport function bindEventToElement(element, eventName, _callback) {\n  let options = {};\n  let callback;\n\n  if (BaseUtils.isPlainObject(_callback)) {\n    callback  = _callback.callback;\n    options   = _callback.options || {};\n  } else {\n    callback = _callback;\n  }\n\n  if (BaseUtils.isType(callback, '::String'))\n    callback = createTemplateMacro({ prefix: 'let event=arguments[1]', body: callback, scope: this }); // @ref:_createTemplateMacroPrefixForBindEventToElement\n\n  element.addEventListener(eventName, callback, options);\n\n  return { callback, options };\n}\n\nexport function fetchPath(obj, key, defaultValue) {\n  if (obj == null || Object.is(obj, NaN) || Object.is(obj, Infinity) || Object.is(obj, -Infinity))\n    return defaultValue;\n\n  if (key == null || Object.is(key, NaN) || Object.is(key, Infinity) || Object.is(key, -Infinity))\n    return defaultValue;\n\n  let parts         = key.split(/(?<!\\\\)\\./g).filter(Boolean);\n  let currentValue  = obj;\n\n  for (let i = 0, il = parts.length; i < il; i++) {\n    let part = parts[i];\n    let nextValue = currentValue[part];\n    if (nextValue == null)\n      return defaultValue;\n\n    currentValue = nextValue;\n  }\n\n  if (globalThis.Node && currentValue && currentValue instanceof globalThis.Node && (currentValue.nodeType === Node.TEXT_NODE || currentValue.nodeType === Node.ATTRIBUTE_NODE))\n    return currentValue.nodeValue;\n\n  return (currentValue == null) ? defaultValue : currentValue;\n}\n\nconst CACHED_PROPERTY_NAMES = new WeakMap();\nconst SKIP_PROTOTYPES       = [\n  globalThis.HTMLElement,\n  globalThis.Node,\n  globalThis.Element,\n  globalThis.Object,\n  globalThis.Array,\n];\n\nexport function getAllPropertyNames(_obj) {\n  if (!BaseUtils.isCollectable(_obj))\n    return [];\n\n  let cachedNames = CACHED_PROPERTY_NAMES.get(_obj);\n  if (cachedNames)\n    return cachedNames;\n\n  let obj   = _obj;\n  let names = new Set();\n\n  while (obj) {\n    let objNames = Object.getOwnPropertyNames(obj);\n    for (let i = 0, il = objNames.length; i < il; i++)\n      names.add(objNames[i]);\n\n    obj = Object.getPrototypeOf(obj);\n    if (obj && SKIP_PROTOTYPES.indexOf(obj.constructor) >= 0)\n      break;\n  }\n\n  let finalNames = Array.from(names);\n  CACHED_PROPERTY_NAMES.set(_obj, finalNames);\n\n  return finalNames;\n}\n\nconst LANG_PROVIDER_DYNAMIC_PROPERTY_CACHE = new WeakMap();\nexport function getDynamicPropertyForPath(keyPath, defaultValue) {\n  let instanceCache = LANG_PROVIDER_DYNAMIC_PROPERTY_CACHE.get(this);\n  if (!instanceCache) {\n    instanceCache = new Map();\n    LANG_PROVIDER_DYNAMIC_PROPERTY_CACHE.set(this, instanceCache);\n  }\n\n  let property = instanceCache.get(keyPath);\n  if (!property) {\n    property = new DynamicProperty(defaultValue);\n    instanceCache.set(keyPath, property);\n  }\n\n  return property;\n}\n\nexport function specialClosest(node, selector) {\n  if (!node || !selector)\n    return;\n\n  let currentNode = node;\n  while (currentNode && (typeof currentNode.matches !== 'function' || !currentNode.matches(selector)))\n    currentNode = getParentNode(currentNode);\n\n  return currentNode;\n}\n\nexport function sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms || 0);\n  });\n}\n\nexport function dynamicProp(name, defaultValue, setter) {\n  let dynamicProperty = new DynamicProperty(defaultValue);\n\n  Object.defineProperties(this, {\n    [name]: {\n      enumerable:   true,\n      configurable: true,\n      get:          () => dynamicProperty,\n      set:          (newValue) => {\n        if (typeof setter === 'function')\n          dynamicProperty[DynamicProperty.set](setter(newValue));\n        else\n          dynamicProperty[DynamicProperty.set](newValue);\n      },\n    },\n  });\n\n  return dynamicProperty;\n}\n\nconst DYNAMIC_PROP_REGISTRY = new Map();\nexport function dynamicPropID(id, setValue) {\n  let prop = DYNAMIC_PROP_REGISTRY.get(id);\n  if (prop) {\n    if (arguments.length > 1)\n      prop[DynamicProperty.set](setValue);\n\n    return prop;\n  }\n\n  prop = new DynamicProperty((arguments.length > 1) ? setValue : '');\n  DYNAMIC_PROP_REGISTRY.set(id, prop);\n\n  return prop;\n}\n\nexport function globalStoreNameValuePairHelper(target, name, value) {\n  metadata(\n    target,\n    MYTHIX_NAME_VALUE_PAIR_HELPER,\n    [ name, value ],\n  );\n\n  return target;\n}\n\nconst REGISTERED_DISABLE_TEMPLATE_SELECTORS = new Set([ '[data-templates-disable]', 'mythix-for-each' ]);\nexport function getDisableTemplateEngineSelector() {\n  return Array.from(REGISTERED_DISABLE_TEMPLATE_SELECTORS).join(',');\n}\n\nexport function registerDisableTemplateEngineSelector(selector) {\n  REGISTERED_DISABLE_TEMPLATE_SELECTORS.add(selector);\n}\n\nexport function unregisterDisableTemplateEngineSelector(selector) {\n  REGISTERED_DISABLE_TEMPLATE_SELECTORS.delete(selector);\n}\n\nfunction globalStoreHelper(dynamic, args) {\n  if (args.length === 0)\n    return;\n\n  const setOnGlobal = (name, value) => {\n    let currentValue = globalThis.mythixUI.globalScope[name];\n    if (BaseUtils.isType(currentValue, DynamicProperty)) {\n      globalThis.mythixUI.globalScope[name][DynamicProperty.set](value);\n      return currentValue;\n    }\n\n    if (BaseUtils.isType(value, DynamicProperty)) {\n      Object.defineProperties(globalThis.mythixUI.globalScope, {\n        [name]: {\n          enumerable:   true,\n          configurable: true,\n          get:          () => value,\n          set:          (newValue) => {\n            value[DynamicProperty.set](newValue);\n          },\n        },\n      });\n\n      return value;\n    } else if (dynamic) {\n      let prop = dynamicPropID(name);\n      Object.defineProperties(globalThis.mythixUI.globalScope, {\n        [name]: {\n          enumerable:   true,\n          configurable: true,\n          get:          () => prop,\n          set:          (newValue) => {\n            prop[DynamicProperty.set](newValue);\n          },\n        },\n      });\n\n      prop[DynamicProperty.set](value);\n\n      return prop;\n    } else {\n      globalThis.mythixUI.globalScope[name] = value;\n      return value;\n    }\n  };\n\n  let nameValuePair = (BaseUtils.isCollectable(args[0])) ? metadata(\n    args[0],                        // context\n    MYTHIX_NAME_VALUE_PAIR_HELPER,  // special key\n  ) : null; // @ref:_mythixNameValuePairHelperUsage\n\n  if (nameValuePair) {\n    let [ name, value ] = nameValuePair;\n    setOnGlobal(name, value);\n  } else if (args.length > 1 && BaseUtils.isType(args[0], '::String')) {\n    let name  = args[0];\n    let value = args[1];\n    setOnGlobal(name, value);\n  } else {\n    let value = args[0];\n    let name  = (typeof this.getIdentifier === 'function') ? this.getIdentifier() : (this.getAttribute('id') || this.getAttribute('name'));\n    if (!name)\n      throw new Error('\"mythixUI.globalStore\": \"name\" is unknown, so unable to store value');\n\n    setOnGlobal(name, value);\n  }\n}\n\nexport function globalStore(...args) {\n  return globalStoreHelper.call(this, false, args);\n}\n\nexport function globalStoreDynamic(...args) {\n  return globalStoreHelper.call(this, true, args);\n}\n\nclass StorageItem {\n  constructor(value) {\n    this._c = Date.now();\n    this._u = Date.now();\n    this._v = value;\n  }\n\n  getValue() {\n    return this._v;\n  }\n\n  setValue(value) {\n    this._u = Date.now();\n    this._v = value;\n  }\n\n  toJSON() {\n    return {\n      $type:  'StorageItem',\n      _c:     this._c,\n      _u:     this._u,\n      _v:     this._v,\n    };\n  }\n}\n\nclass Storage {\n  _revive(data, _alreadyVisited) {\n    if (!data || BaseUtils.isPrimitive(data))\n      return data;\n\n    let alreadyVisited  = _alreadyVisited || new Set();\n    let type            = (data && data.$type);\n\n    if (type) {\n      if (type === 'StorageItem') {\n        let value = data._v;\n\n        return Object.assign(new StorageItem(), {\n          _c: data._c,\n          _u: data._u,\n          _v: (value && !BaseUtils.isPrimitive(value)) ? this._revive(value, alreadyVisited) : value,\n        });\n      }\n    }\n\n    for (let [ key, value ] of Object.entries(data)) {\n      if (!value || BaseUtils.isPrimitive(value))\n        continue;\n\n      if (alreadyVisited.has(value))\n        continue;\n\n      alreadyVisited.add(value);\n      data[key] = this._revive(value, alreadyVisited);\n    }\n\n    return data;\n  }\n\n  _raw(data, _alreadyVisited) {\n    if (!data || BaseUtils.isPrimitive(data))\n      return data;\n\n    let alreadyVisited = _alreadyVisited || new Set();\n    if (data instanceof StorageItem)\n      return this._raw(data.getValue(), alreadyVisited);\n\n    for (let [ key, value ] of Object.entries(data)) {\n      if (!value || BaseUtils.isPrimitive(value))\n        continue;\n\n      if (alreadyVisited.has(value))\n        continue;\n\n      alreadyVisited.add(value);\n      data[key] = this._raw(value, alreadyVisited);\n    }\n\n    return data;\n  }\n\n  _getPartsForOperation(type, parts) {\n    let pathParts   = (type === 'set') ? parts.slice(0, -1) : parts.slice();\n    let path        = pathParts.map((part) => ((typeof part === 'symbol') ? part.toString() : ('' + part)).replace(/\\./g, '\\\\.')).join('.');\n    let parsedParts = path.split(/(?<!\\\\)\\./g);\n    let storageType = parsedParts[0];\n    let data        = (type === 'set') ? parts[parts.length - 1] : undefined;\n\n    // localStorage, or sessionStorage\n    let storageEngine = globalThis[storageType];\n    if (!storageEngine)\n      return;\n\n    let rootData    = {};\n    let encodedBase = storageEngine.getItem('mythix-ui');\n    if (encodedBase)\n      rootData = this._revive(JSON.parse(encodedBase));\n\n    return {\n      pathParts,\n      path,\n      parsedParts,\n      storageType,\n      data,\n      storageEngine,\n      encodedBase,\n      rootData,\n    };\n  }\n\n  _getMeta(type, parts) {\n    let operation = this._getPartsForOperation(type, parts);\n    let {\n      parsedParts,\n      rootData,\n    } = operation;\n\n    let scope        = rootData;\n    let parentScope  = null;\n\n    for (let i = 1, il = parsedParts.length; i < il; i++) {\n      if (scope instanceof StorageItem) {\n        scope = scope.getValue();\n        if (!scope)\n          break;\n      }\n\n      let part = parsedParts[i];\n      let subScope = (scope) ? scope[part] : scope;\n      if (type === 'set' && !subScope)\n        subScope = scope[part] = {};\n\n      if (subScope == null || Object.is(subScope, NaN) || Object.is(subScope, -Infinity) || Object.is(subScope, Infinity))\n        break;\n\n      parentScope = scope;\n      scope = subScope;\n    }\n\n    return {\n      operation,\n      parentScope,\n      scope,\n    };\n  }\n\n  getMeta(...parts) {\n    return this._getMeta('get', parts);\n  }\n\n  get(...parts) {\n    let { scope } = this._getMeta('get', parts);\n    return this._raw(scope);\n  }\n\n  set(...parts) {\n    let {\n      operation,\n      parentScope,\n      scope,\n    } = this._getMeta('set', parts);\n\n    let {\n      data,\n      parsedParts,\n      path,\n      rootData,\n      storageEngine,\n    } = operation;\n\n    if (data === undefined) {\n      // Delete\n      if (parentScope)\n        delete parentScope[parsedParts[parsedParts.length - 1]];\n      else\n        delete scope[parsedParts[parsedParts.length - 1]];\n    } else {\n      if (parentScope)\n        parentScope[parsedParts[parsedParts.length - 1]] = new StorageItem(data);\n      else\n        scope[parsedParts[parsedParts.length - 1]] = new StorageItem(data);\n    }\n\n    storageEngine.setItem('mythix-ui', JSON.stringify(rootData));\n\n    return path;\n  }\n\n}\n\nexport const storage = new Storage();\n","import {\n  ELEMENT_DEFINITION_TYPE,\n  MYTHIX_TYPE,\n  QUERY_ENGINE_TYPE,\n  UNFINISHED_DEFINITION,\n} from './constants.js';\n\nimport * as BaseUtils from './base-utils.js';\nimport * as Utils from './utils.js';\nimport { DynamicProperty } from './dynamic-property.js';\n\nconst SUBSTITUTE_CHAR_CODE = 26;\n\n/**\n *  type: Namespace\n *  name: Elements\n *  groupName: Elements\n *  desc: |\n *    `import { Elements } from 'mythix-ui-core@1.0';`\n *\n *    Utility and element building functions for the DOM.\n */\n\nconst IS_PROP_NAME    = /^prop\\$/;\nconst IS_TARGET_PROP  = /^prototype|constructor$/;\n\nexport class ElementDefinition {\n  static [Symbol.hasInstance](instance) {\n    try {\n      return (instance && instance[MYTHIX_TYPE] === ELEMENT_DEFINITION_TYPE);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  constructor(tagName, attributes, children) {\n    Object.defineProperties(this, {\n      [MYTHIX_TYPE]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        ELEMENT_DEFINITION_TYPE,\n      },\n      'tagName': {\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        tagName,\n      },\n      'attributes': {\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        attributes || {},\n      },\n      'children': {\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        children || [],\n      },\n    });\n  }\n\n  toString(_options) {\n    let options = _options || {};\n    let tagName = this.tagName;\n    if (tagName === '#text')\n      return this.attributes.value.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n    let attrs = (tagName === '#fragment') ? null : ((attributes) => {\n      let parts = [];\n\n      for (let [ attributeName, value ] of Object.entries(attributes)) {\n        if (IS_PROP_NAME.test(attributeName))\n          continue;\n\n        let name = this.toDOMAttributeName(attributeName);\n        if (value == null)\n          parts.push(name);\n        else\n          parts.push(`${name}=\"${encodeAttributeValue(value)}\"`);\n      }\n\n      return parts.join(' ');\n    })(this.attributes);\n\n    let children = ((children) => {\n      return children\n        .filter((child) => (child != null && child !== false && !Object.is(child, NaN)))\n        .map((child) => ((child && typeof child.toString === 'function') ? child.toString(options) : ('' + child)))\n        .join('');\n    })(this.children);\n\n    if (tagName === '#fragment')\n      return children;\n\n    // this will more commonly look like written html\n    tagName = tagName.toLowerCase();\n\n    let elementTagStart = `<${tagName}${(attrs) ? ` ${attrs}` : ''}>`;\n    let elementTagEnd   = `</${tagName}>`;\n\n    if (Object.prototype.hasOwnProperty.call(options, 'maskHTML')) {\n      let charCode = (typeof options.maskHTML === 'number') ? String.fromCharCode(SUBSTITUTE_CHAR_CODE) : options.maskHTML;\n      const wipeBlank = (content) => {\n        return content.replace(/./g, charCode);\n      };\n\n      elementTagStart = wipeBlank(elementTagStart);\n      elementTagEnd = wipeBlank(elementTagEnd);\n\n      if (options.maskChildrenPattern && options.maskChildrenPattern.test(tagName))\n        children = wipeBlank(children);\n    }\n\n    return `${elementTagStart}${(isVoidTag(tagName)) ? '' : `${children}${elementTagEnd}`}`;\n  }\n\n  toDOMAttributeName(attributeName) {\n    return attributeName.replace(/([A-Z])/g, '-$1').toLowerCase();\n  }\n\n  build(ownerDocument, templateOptions) {\n    if (this.tagName === '#fragment')\n      return this.children.map((child) => child.build(ownerDocument, templateOptions));\n\n    let attributes    = this.attributes;\n    let namespaceURI  = attributes.namespaceURI;\n    let options;\n    let element;\n\n    if (this.attributes.is)\n      options = { is: this.attributes.is };\n\n    if (this.tagName === '#text')\n      return processElements.call(this, ownerDocument.createTextNode(attributes.value || ''), templateOptions);\n\n    if (namespaceURI)\n      element = ownerDocument.createElementNS(namespaceURI, this.tagName, options);\n    else if (isSVGElement(this.tagName))\n      element = ownerDocument.createElementNS('http://www.w3.org/2000/svg', this.tagName, options);\n    else\n      element = ownerDocument.createElement(this.tagName);\n\n    const eventNames = Utils.getAllEventNamesForElement(element);\n    const handleAttribute = (element, attributeName, _attributeValue) => {\n      let attributeValue      = _attributeValue;\n      let lowerAttributeName  = attributeName.toLowerCase();\n\n      if (eventNames.indexOf(lowerAttributeName) >= 0) {\n        Utils.bindEventToElement.call(\n          Utils.createScope(element, templateOptions.scope), // this\n          element,\n          lowerAttributeName.substring(2),\n          attributeValue,\n        );\n      } else {\n        let modifiedAttributeName = this.toDOMAttributeName(attributeName);\n        element.setAttribute(modifiedAttributeName, attributeValue);\n      }\n    };\n\n    // Dynamic bindings are not allowed for properties\n    const handleProperty = (element, propertyName, propertyValue) => {\n      let name = propertyName.replace(IS_PROP_NAME, '');\n      element[name] = propertyValue;\n    };\n\n    let attributeNames = Object.keys(attributes);\n    for (let i = 0, il = attributeNames.length; i < il; i++) {\n      let attributeName   = attributeNames[i];\n      let attributeValue  = attributes[attributeName];\n\n      if (IS_PROP_NAME.test(attributeName))\n        handleProperty(element, attributeName, attributeValue);\n      else\n        handleAttribute(element, attributeName, attributeValue);\n    }\n\n    let children = this.children;\n    if (children.length > 0) {\n      for (let i = 0, il = children.length; i < il; i++) {\n        let child         = children[i];\n        let childElement  = child.build(ownerDocument, templateOptions);\n\n        if (Array.isArray(childElement))\n          childElement.flat(Infinity).forEach((child) => element.appendChild(child));\n        else\n          element.appendChild(childElement);\n      }\n    }\n\n    return processElements.call(\n      this,\n      element,\n      {\n        ...templateOptions,\n        processEventCallbacks: false,\n      },\n    );\n  }\n}\n\nconst IS_HTML_SAFE_CHARACTER = /^[\\sa-zA-Z0-9_-]$/;\nexport function encodeValue(value) {\n  return value.replace(/./g, (m) => {\n    return (IS_HTML_SAFE_CHARACTER.test(m)) ? m : `&#${m.charCodeAt(0)};`;\n  });\n}\n\nexport function encodeAttributeValue(value) {\n  return value.replace(/[\"&]/g, (m) => {\n    return `&#${m.charCodeAt(0)};`;\n  });\n}\n\nconst IS_VOID_TAG = /^area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr$/i;\nexport function isVoidTag(tagName) {\n  return IS_VOID_TAG.test(tagName.split(':').slice(-1)[0]);\n}\n\nfunction isValidNodeType(item) {\n  if (!item)\n    return false;\n\n  if (item instanceof Node)\n    return true;\n\n  if (item[MYTHIX_TYPE] === ELEMENT_DEFINITION_TYPE)\n    return true;\n\n  if (item[MYTHIX_TYPE] === QUERY_ENGINE_TYPE)\n    return true;\n\n  return false;\n}\n\nexport function queryTemplate(ownerDocument, nameOrID) {\n  if (nameOrID instanceof Node)\n    return nameOrID;\n\n  if (!ownerDocument)\n    return;\n\n  let result = ownerDocument.getElementById(nameOrID);\n  if (!result)\n    result = ownerDocument.querySelector(`template[data-mythix-component-name=\"${nameOrID}\" i],template[data-for=\"${nameOrID}\" i]`);\n\n  if (!result)\n    result = ownerDocument.querySelector(nameOrID);\n\n  return result;\n}\n\nfunction compileMergeFragment(ownerDocument, node) {\n  let fragment  = ownerDocument.createDocumentFragment();\n  let selectors = (node.getAttribute('data-from') || '').split(',').map(((part) => part.trim())).filter(Boolean);\n\n  for (let i = 0, il = selectors.length; i < il; i++) {\n    let selector  = selectors[i];\n    let element   = queryTemplate(ownerDocument, selector);\n    if (element)\n      fragment.appendChild((IS_TEMPLATE.test(element.tagName)) ? element.content.cloneNode(true) : element.cloneNode(true));\n  }\n\n  return fragment;\n}\n\nconst IS_TEMPLATE_MERGE_ELEMENT = /^mythix-merge$/i;\nexport function processElements(_node, _options) {\n  let node = _node;\n  if (!node)\n    return node;\n\n  let options       = _options || {};\n  let scope         = options.scope;\n  if (!scope) {\n    scope = Utils.createScope(node);\n    options = { ...options, scope };\n  }\n\n  let disableTemplateEngineSelector = (options.forceTemplateEngine === true) ? undefined : options.disableTemplateEngineSelector;\n  let children                      = Array.from(node.childNodes);\n\n  if (options.forceTemplateEngine !== true && !disableTemplateEngineSelector) {\n    disableTemplateEngineSelector = Utils.getDisableTemplateEngineSelector();\n    options = { ...options, disableTemplateEngineSelector };\n  }\n\n  let isTemplateEngineDisabled = false;\n  if (disableTemplateEngineSelector && Utils.specialClosest(node, disableTemplateEngineSelector))\n    isTemplateEngineDisabled = true;\n\n  if (typeof options.helper === 'function') {\n    let result = options.helper.call(this, { scope, options, node, children, isTemplateEngineDisabled, disableTemplateEngineSelector });\n    if (result instanceof Node)\n      node = result;\n    else if (result === false)\n      return node;\n  }\n\n  let ownerDocument = options.ownerDocument || scope.ownerDocument || node.ownerDocument || document;\n  if (node.nodeType === Node.TEXT_NODE || node.nodeType === Node.ATTRIBUTE_NODE) {\n    if (!isTemplateEngineDisabled) {\n      let result = Utils.formatNodeValue(node, options);\n      if ((Array.isArray(result) && result.some(isValidNodeType)) || isValidNodeType(result)) {\n        if (!Array.isArray(result))\n          result = [ result ];\n\n        let fragment = ownerDocument.createDocumentFragment();\n        for (let item of result) {\n          if (item instanceof Node) {\n            fragment.appendChild(item);\n          } else if (item[MYTHIX_TYPE] === ELEMENT_DEFINITION_TYPE) {\n            let elements = item.build(ownerDocument, { scope });\n            if (!elements)\n              continue;\n\n            if (Array.isArray(elements))\n              elements.flat(Infinity).forEach((element) => fragment.appendChild(element));\n            else\n              fragment.appendChild(elements);\n          } else if (item[MYTHIX_TYPE] === QUERY_ENGINE_TYPE) {\n            item.appendTo(fragment);\n          } else {\n            let textNode = ownerDocument.createTextNode(('' + item));\n            fragment.appendChild(textNode);\n          }\n        }\n\n        return fragment;\n      } else if (result !== node.nodeValue) {\n        node.nodeValue =  result;\n      }\n    }\n\n    return node;\n  } else if (node.nodeType === Node.ELEMENT_NODE || node.nodeType === Node.DOCUMENT_NODE) {\n    if (IS_TEMPLATE_MERGE_ELEMENT.test(node.tagName))\n      return compileMergeFragment(ownerDocument, node);\n\n    let eventNames      = Utils.getAllEventNamesForElement(node);\n    let attributeNames  = node.getAttributeNames();\n\n    for (let i = 0, il = attributeNames.length; i < il; i++) {\n      let attributeName       = attributeNames[i];\n      let lowerAttributeName  = attributeName.toLowerCase();\n      let attributeValue      = node.getAttribute(attributeName);\n\n      if (eventNames.indexOf(lowerAttributeName) >= 0) {\n        if (options.processEventCallbacks !== false) {\n          Utils.bindEventToElement.call(\n            Utils.createScope(node, scope), // this\n            node,\n            lowerAttributeName.substring(2),\n            attributeValue,\n          );\n\n          node.removeAttribute(attributeName);\n        }\n      } else if (Utils.isTemplate(attributeValue)) {\n        let attributeNode = node.getAttributeNode(attributeName);\n        if (attributeNode)\n          attributeNode.nodeValue = Utils.formatNodeValue(attributeNode, { ...options, disallowHTML: true });\n      }\n    }\n  }\n\n  if (options.processChildren === false)\n    return node;\n\n  for (let childNode of children) {\n    let result = processElements.call(this, childNode, options);\n    if (result instanceof Node && result !== childNode) {\n      try {\n        node.replaceChild(result, childNode);\n      } catch (e) {\n        // NOOP\n      }\n    }\n  }\n\n  return node;\n}\n\nexport function hasChild(parentNode, childNode) {\n  if (!parentNode || !childNode)\n    return false;\n\n  for (let child of Array.from(parentNode.childNodes)) {\n    if (child === childNode)\n      return true;\n  }\n\n  return false;\n}\n\nexport function build(tagName, defaultAttributes, scope) {\n  if (!tagName || !BaseUtils.isType(tagName, '::String'))\n    throw new Error('Can not create an ElementDefinition without a \"tagName\".');\n\n  const finalizer = (..._children) => {\n    const wrangleChildren = (children) => {\n      return children.flat(Infinity).map((value) => {\n        if (value == null || Object.is(value, NaN))\n          return null;\n\n        if (typeof value === 'symbol')\n          return null;\n\n        if (value[UNFINISHED_DEFINITION])\n          return value();\n\n        if (value[MYTHIX_TYPE] === ELEMENT_DEFINITION_TYPE)\n          return value;\n\n        if (value[MYTHIX_TYPE] === QUERY_ENGINE_TYPE)\n          return wrangleChildren(value.getUnderlyingArray());\n\n        if (value instanceof Node)\n          return nodeToElementDefinition(value);\n\n        if (!BaseUtils.isType(value, '::String', DynamicProperty))\n          return null;\n\n        return new ElementDefinition('#text', { value: ('' + value) });\n      }).flat(Infinity).filter(Boolean);\n    };\n\n    let children = wrangleChildren(_children || []);\n    return new ElementDefinition(tagName, scope, children);\n  };\n\n  let rootProxy = new Proxy(finalizer, {\n    get: (target, attributeName) => {\n      if (attributeName === UNFINISHED_DEFINITION)\n        return true;\n\n      if (typeof attributeName === 'symbol' || IS_TARGET_PROP.test(attributeName))\n        return target[attributeName];\n\n      if (!scope) {\n        let scopedProxy = build(tagName, defaultAttributes, Object.assign(Object.create(null), defaultAttributes || {}));\n        return scopedProxy[attributeName];\n      }\n\n      return new Proxy(\n        (value) => {\n          scope[attributeName] = value;\n          return rootProxy;\n        },\n        {\n          get: (target, propName) => {\n            if (attributeName === UNFINISHED_DEFINITION)\n              return true;\n\n            if (typeof attributeName === 'symbol' || IS_TARGET_PROP.test(attributeName))\n              return target[attributeName];\n\n            scope[attributeName] = true;\n            return rootProxy[propName];\n          },\n        },\n      );\n    },\n  });\n\n  return rootProxy;\n}\n\nexport function nodeToElementDefinition(node) {\n  if (node.nodeType === Node.TEXT_NODE)\n    return new ElementDefinition('#text', { value: ('' + node.nodeValue) });\n\n  if (node.nodeType !== Node.ELEMENT_NODE && node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE)\n    return;\n\n  let attributes = {};\n\n  if (typeof node.getAttributeNames === 'function') {\n    for (let attributeName of node.getAttributeNames())\n      attributes[attributeName] = node.getAttribute(attributeName);\n  }\n\n  let children = Array.from(node.childNodes).map(nodeToElementDefinition);\n  return new ElementDefinition((node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) ? '#fragment' : node.tagName, attributes, children);\n}\n\nconst IS_TEMPLATE = /^(template)$/i;\n\n/**\n   * parent: Elements\n   * groupName: Elements\n   * desc: |\n   *   Almost like `Object.assign`, merge all component children into a single node (the `target`).\n   *\n   *   This is \"template intelligent\", meaning for `<template>` elements specifically, it will execute\n   *   `children = template.content.cloneNode(true).childNodes` to clone all the child nodes, and not\n   *   modify the original template. It is also template intelligent by the fact that if the `target` is\n   *   a template, it will add the children to `content` properly.\n   * arguments:\n   *   - name: target\n   *     dataTypes: Node\n   *     desc: |\n   *       The target Node to merge all children into. If this Node is a `<template>` Node, then it will\n   *       place all the merged children into `template.content`.\n   * notes:\n   *   - Any template Node will be cloned, and so the original will not be modified. All other nodes are **NOT**\n   *     cloned before the merge, and so will be stripped of their children.\n   *   - Make certain you deep clone any element first (except templates) if you don't want the provided elements\n   *     to be modified.\n   * return: |\n   *   @types Node; The provided `target`, with all children merged (added) into it.\n   */\nexport function mergeChildren(target, ...others) {\n  if (!(target instanceof Node))\n    return target;\n\n  let targetIsTemplate = IS_TEMPLATE.test(target.tagName);\n  for (let other of others) {\n    if (!(other instanceof Node))\n      continue;\n\n    let childNodes = (IS_TEMPLATE.test(other.tagName)) ? other.content.cloneNode(true).childNodes : other.childNodes;\n    for (let child of Array.from(childNodes)) {\n      let content = (IS_TEMPLATE.test(child.tagName)) ? child.content.cloneNode(true) : child;\n      if (targetIsTemplate)\n        target.content.appendChild(content);\n      else\n        target.appendChild(content);\n    }\n  }\n\n  return target;\n}\n\nconst IS_SVG_ELEMENT_NAME = /^(altglyph|altglyphdef|altglyphitem|animate|animateColor|animateMotion|animateTransform|animation|circle|clipPath|colorProfile|cursor|defs|desc|discard|ellipse|feblend|fecolormatrix|fecomponenttransfer|fecomposite|feconvolvematrix|fediffuselighting|fedisplacementmap|fedistantlight|fedropshadow|feflood|fefunca|fefuncb|fefuncg|fefuncr|fegaussianblur|feimage|femerge|femergenode|femorphology|feoffset|fepointlight|fespecularlighting|fespotlight|fetile|feturbulence|filter|font|fontFace|fontFaceFormat|fontFaceName|fontFaceSrc|fontFaceUri|foreignObject|g|glyph|glyphRef|handler|hKern|image|line|lineargradient|listener|marker|mask|metadata|missingGlyph|mPath|path|pattern|polygon|polyline|prefetch|radialgradient|rect|set|solidColor|stop|svg|switch|symbol|tbreak|text|textpath|tref|tspan|unknown|use|view|vKern)$/i;\nexport function isSVGElement(tagName) {\n  return IS_SVG_ELEMENT_NAME.test(tagName);\n}\n\nexport const Term = (value) => new ElementDefinition('#text', { value });\nexport const ElementGenerator = new Proxy(\n  {\n    Term,\n    $TEXT: Term,\n  },\n  {\n    get: function(target, propName) {\n      if (propName in target)\n        return target[propName];\n\n      if (IS_SVG_ELEMENT_NAME.test(propName)) {\n        // SVG elements\n        return build(propName, { namespaceURI: 'http://www.w3.org/2000/svg' });\n      }\n\n      return build(propName);\n    },\n    set: function() {\n      // NOOP\n      return true;\n    },\n  },\n);\n","import {\n  MYTHIX_TYPE,\n  QUERY_ENGINE_TYPE,\n  UNFINISHED_DEFINITION,\n} from './constants.js';\n\nimport * as BaseUtils from './base-utils.js';\nimport * as Utils     from './utils.js';\nimport * as Elements  from './elements.js';\n\nimport {\n  ElementDefinition,\n} from './elements.js';\n\nconst IS_INTEGER = /^\\d+$/;\n\nfunction isElement(value) {\n  if (!value)\n    return false;\n\n  // We have an Element or a Document\n  if (value.nodeType === Node.ELEMENT_NODE || value.nodeType === Node.DOCUMENT_NODE || value.nodeType === Node.DOCUMENT_FRAGMENT_NODE)\n    return true;\n\n  return false;\n}\n\nfunction isSlotted(element) {\n  if (!element)\n    return null;\n\n  return element.closest('slot');\n}\n\nfunction isNotSlotted(element) {\n  if (!element)\n    return null;\n\n  return !element.closest('slot');\n}\n\nfunction collectClassNames(...args) {\n  let classNames = [].concat(...args)\n      .flat(Infinity)\n      .map((part) => ('' + part).split(/\\s+/))\n      .flat(Infinity)\n      .filter(Boolean);\n\n  return classNames;\n}\n\nexport class QueryEngine {\n  static [Symbol.hasInstance](instance) {\n    try {\n      return (instance && instance[MYTHIX_TYPE] === QUERY_ENGINE_TYPE);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static isElement    = isElement;\n  static isSlotted    = isSlotted;\n  static isNotSlotted = isNotSlotted;\n\n  static from = function(...args) {\n    if (args.length === 0)\n      return new QueryEngine([], { root: (isElement(this)) ? this : document, context: this });\n\n    const getOptions = () => {\n      let base = Object.create(null);\n      if (BaseUtils.isPlainObject(args[argIndex]))\n        base = Object.assign(base, args[argIndex++]);\n\n      if (args[argIndex] instanceof QueryEngine)\n        base = Object.assign(Object.create(null), args[argIndex].getOptions() || {}, base);\n\n      return base;\n    };\n\n    const getRootElement = (optionsRoot) => {\n      if (isElement(optionsRoot))\n        return optionsRoot;\n\n      if (isElement(this))\n        return this;\n\n      return ((this && this.ownerDocument) || document);\n    };\n\n    let argIndex  = 0;\n    let options   = getOptions();\n    let root      = getRootElement(options.root);\n    let queryEngine;\n\n    options.root = root;\n    options.context = options.context || this;\n\n    if (args[argIndex] instanceof QueryEngine)\n      return new QueryEngine(args[argIndex].slice(), options);\n\n    if (Array.isArray(args[argIndex])) {\n      if (BaseUtils.isType(args[argIndex + 1], '::Function'))\n        options.callback = args[1];\n\n      queryEngine = new QueryEngine(args[argIndex], options);\n    } else if (BaseUtils.isType(args[argIndex], '::String')) {\n      options.selector = args[argIndex++];\n\n      if (BaseUtils.isType(args[argIndex], '::Function'))\n        options.callback = args[argIndex++];\n\n      queryEngine = new QueryEngine(root.querySelectorAll(options.selector), options);\n    } else if (BaseUtils.isType(args[argIndex], '::Function')) {\n      options.callback = args[argIndex++];\n\n      let result = options.callback.call(this, Elements.ElementGenerator, options);\n      if (!Array.isArray(result))\n        result = [ result ];\n\n      queryEngine = new QueryEngine(result, options);\n    }\n\n    if (options.invokeCallbacks !== false && typeof options.callback === 'function')\n      return queryEngine.map(options.callback);\n\n    return queryEngine;\n  };\n\n  getEngineClass() {\n    return QueryEngine;\n  }\n\n  constructor(elements, _options) {\n    let options = _options || {};\n\n    Object.defineProperties(this, {\n      [MYTHIX_TYPE]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        QUERY_ENGINE_TYPE,\n      },\n      '_mythixUIOptions': {\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        options,\n      },\n    });\n\n    Object.defineProperties(this, {\n      '_mythixUIElements': {\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        this.filterAndConstructElements(options.context, elements),\n      },\n    });\n\n    let rootProxy = new Proxy(this, {\n      get: (target, propName) => {\n        if (typeof propName === 'symbol') {\n          if (propName in target)\n            return target[propName];\n          else if (propName in target._mythixUIElements)\n            return target._mythixUIElements[propName];\n\n          return;\n        }\n\n        if (propName === 'length')\n          return target._mythixUIElements.length;\n\n        if (propName === 'prototype')\n          return target.prototype;\n\n        if (propName === 'constructor')\n          return target.constructor;\n\n        // Index lookup\n        if (IS_INTEGER.test(propName))\n          return target._mythixUIElements[propName];\n\n        if (propName in target)\n          return target[propName];\n\n        // Redirect any array methods:\n        //\n        // \"magicPropName\" is when the\n        // function name begins with \"$\",\n        // i.e. \"$filter\", or \"$map\". If\n        // this is the case, then the return\n        // value will always be coerced into\n        // a QueryEngine. Otherwise, it will\n        // only be coerced into a QueryEngine\n        // if EVERY element in the result is\n        // an \"elementy\" type value.\n        let magicPropName = (propName.charAt(0) === '$') ? propName.substring(1) : propName;\n        if (typeof Array.prototype[magicPropName] === 'function') {\n          return (...args) => {\n            let array   = target._mythixUIElements;\n            let result  = array[magicPropName](...args);\n\n            if (Array.isArray(result) && (magicPropName !== propName || result.every((item) => BaseUtils.isType(item, ElementDefinition, Node, QueryEngine)))) {\n              const EngineClass = target.getEngineClass();\n              return new EngineClass(result, target.getOptions());\n            }\n\n            return result;\n          };\n        }\n\n        return target[propName];\n      },\n    });\n\n    return rootProxy;\n  }\n\n  getOptions() {\n    return this._mythixUIOptions;\n  }\n\n  getContext() {\n    let options = this.getOptions();\n    return options.context;\n  }\n\n  getRoot() {\n    let options = this.getOptions();\n    return options.root || document;\n  }\n\n  getUnderlyingArray() {\n    return this._mythixUIElements;\n  }\n\n  getOwnerDocument() {\n    return this.getRoot().ownerDocument || document;\n  }\n\n  filterAndConstructElements(context, elements) {\n    let finalElements = Array.from(elements).flat(Infinity).map((_item) => {\n      if (!_item)\n        return;\n\n      let item = _item;\n      if (item instanceof QueryEngine)\n        return item.getUnderlyingArray();\n\n      if (BaseUtils.isType(item, Node))\n        return item;\n\n      if (item[UNFINISHED_DEFINITION])\n        item = item();\n\n      if (BaseUtils.isType(item, '::String'))\n        item = Elements.Term(item);\n      else if (!BaseUtils.isType(item, ElementDefinition))\n        return;\n\n      if (!context)\n        throw new Error('The \"context\" option for QueryEngine is required when constructing elements.');\n\n      return item.build(this.getOwnerDocument(), {\n        scope: Utils.createScope(context),\n      });\n    }).flat(Infinity).filter(Boolean);\n\n    return Array.from(new Set(finalElements));\n  }\n\n  select(...args) {\n    let argIndex  = 0;\n    let options   = Object.assign(Object.create(null), this.getOptions(), (BaseUtils.isPlainObject(args[argIndex])) ? args[argIndex++] : {});\n\n    if (options.context && typeof options.context.$ === 'function')\n      return options.context.$.call(options.context, options, ...args.slice(argIndex));\n\n    const EngineClass = this.getEngineClass();\n    return EngineClass.from.call(options.context || this, options, ...args.slice(argIndex));\n  }\n\n  *entries() {\n    let elements = this._mythixUIElements;\n\n    for (let i = 0, il = elements.length; i < il; i++) {\n      let element = elements[i];\n      yield([i, element]);\n    }\n  }\n\n  *keys() {\n    for (let [ key, _ ] of this.entries())\n      yield key;\n  }\n\n  *values() {\n    for (let [ _, value ] of this.entries())\n      yield value;\n  }\n\n  *[Symbol.iterator]() {\n    return yield *this.values();\n  }\n\n  first(count) {\n    if (count == null || count === 0 || Object.is(count, NaN) || !BaseUtils.isType(count, '::Number'))\n      return this.select([ this._mythixUIElements[0] ]);\n\n    return this.select(this._mythixUIElements.slice(Math.abs(count)));\n  }\n\n  last(count) {\n    if (count == null || count === 0 || Object.is(count, NaN) || !BaseUtils.isType(count, '::Number'))\n      return this.select([ this._mythixUIElements[this._mythixUIElements.length - 1] ]);\n\n    return this.select(this._mythixUIElements.slice(Math.abs(count) * -1));\n  }\n\n  add(...elements) {\n    const EngineClass = this.getEngineClass();\n    return new EngineClass(this.slice().concat(...elements), this.getOptions());\n  }\n\n  subtract(...elements) {\n    let set = new Set(elements);\n\n    const EngineClass = this.getEngineClass();\n    return new EngineClass(this.filter((item) => {\n      return !set.has(item);\n    }), this.getOptions());\n  }\n\n  on(eventName, callback, options) {\n    for (let value of this.values()) {\n      if (!isElement(value))\n        continue;\n\n      value.addEventListener(eventName, callback, options);\n    }\n\n    return this;\n  }\n\n  off(eventName, callback, options) {\n    for (let value of this.values()) {\n      if (!isElement(value))\n        continue;\n\n      value.removeEventListener(eventName, callback, options);\n    }\n\n    return this;\n  }\n\n  appendTo(selectorOrElement) {\n    if (!this._mythixUIElements.length)\n      return this;\n\n    let element = selectorOrElement;\n    if (BaseUtils.isType(selectorOrElement, '::String'))\n      element = this.getRoot().querySelector(selectorOrElement);\n\n    for (let child of this._mythixUIElements)\n      element.appendChild(child);\n  }\n\n  insertInto(selectorOrElement, referenceNode) {\n    if (!this._mythixUIElements.length)\n      return this;\n\n    let element = selectorOrElement;\n    if (BaseUtils.isType(selectorOrElement, '::String'))\n      element = this.getRoot().querySelector(selectorOrElement);\n\n    let ownerDocument = this.getOwnerDocument();\n    let source        = this;\n\n    if (this._mythixUIElements.length > 1) {\n      let fragment = ownerDocument.createDocumentFragment();\n      for (let child of this._mythixUIElements)\n        fragment.appendChild(child);\n\n      source = [ fragment ];\n    }\n\n    element.insert(source[0], referenceNode);\n\n    return this;\n  }\n\n  replaceChildrenOf(selectorOrElement) {\n    let element = selectorOrElement;\n    if (BaseUtils.isType(selectorOrElement, '::String'))\n      element = this.getRoot().querySelector(selectorOrElement);\n\n    while (element.childNodes.length)\n      element.removeChild(element.childNodes[0]);\n\n    return this.appendTo(element);\n  }\n\n  remove() {\n    for (let node of this._mythixUIElements) {\n      if (node && node.parentNode)\n        node.parentNode.removeChild(node);\n    }\n\n    return this;\n  }\n\n  classList(operation, ...args) {\n    let classNames = collectClassNames(args);\n    for (let node of this._mythixUIElements) {\n      if (node && node.classList) {\n        if (operation === 'toggle')\n          classNames.forEach((className) => node.classList.toggle(className));\n        else\n          node.classList[operation](...classNames);\n      }\n    }\n\n    return this;\n  }\n\n  addClass(...classNames) {\n    return this.classList('add', ...classNames);\n  }\n\n  removeClass(...classNames) {\n    return this.classList('remove', ...classNames);\n  }\n\n  toggleClass(...classNames) {\n    return this.classList('toggle', ...classNames);\n  }\n\n  slotted(yesNo) {\n    return this.filter((arguments.length === 0 || yesNo) ? isSlotted : isNotSlotted);\n  }\n\n  slot(slotName) {\n    return this.filter((element) => {\n      if (element && element.slot === slotName)\n        return true;\n\n      if (element.closest(`slot[name=\"${slotName.replace(/\"/g, '\\\\\"')}\"]`))\n        return true;\n\n      return false;\n    });\n  }\n}\n\n(globalThis.mythixUI = (globalThis.mythixUI || {})).QueryEngine = QueryEngine;\n","import {\n  MYTHIX_TYPE,\n  MYTHIX_UI_COMPONENT_TYPE,\n  MYTHIX_DOCUMENT_INITIALIZED,\n  MYTHIX_SHADOW_PARENT,\n  MYTHIX_INTERSECTION_OBSERVERS,\n  UNFINISHED_DEFINITION,\n} from './constants.js';\n\nimport * as BaseUtils   from './base-utils.js';\nimport * as Utils       from './utils.js';\nimport { QueryEngine }  from './query-engine.js';\nimport * as Elements    from './elements.js';\n\n/**\n * type: Namespace\n * name: Components\n * groupName: Components\n * desc: |\n *   `import { Components } from 'mythix-ui-core@1.0';`\n *\n *   Component and framework classes and functionality are found here.\n * properties:\n *   - name: isMythixComponent\n *     dataType: symbol\n *     desc: |\n *       This symbol is used as an instance key for @see MythixUIComponent; instances.\n *\n *       For such instances, accessing this property simply returns `true`, allowing the caller\n *       to know if a specific instance (Element) is a Mythix UI component.\n */\n\nexport const isMythixComponent = Symbol.for('@mythix/mythix-ui/component/constants/is-mythix-component'); // @ref:Components.isMythixComponent\n\nconst IS_ATTR_METHOD_NAME   = /^attr\\$(.*)$/;\nconst REGISTERED_COMPONENTS = new Set();\n\n/***\n * groupName: Components\n * desc: |\n *   This the base class of all Mythix UI components. It inherits\n *   from HTMLElement, and so will end up being a [Web Component](https://developer.mozilla.org/en-US/docs/Web/API/Web_Components).\n *\n *   It is strongly recommended that you fully read up and understand\n *   [Web Components](https://developer.mozilla.org/en-US/docs/Web/API/Web_Components)\n *   if you don't already fully understand them. The core of Mythix UI is the\n *   [Web Component](https://developer.mozilla.org/en-US/docs/Web/API/Web_Components) standard,\n *   so you might end up a little confused if you don't already understand the foundation.\n *\n * properties:\n *   - caption: \"... HTMLElement Instance Properties\"\n *     desc: \"All [HTMLElement Instance Properties](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement#instance_properties) are inherited from [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\"\n *     link: https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement#instance_properties\n *\n *   - name: isMythixComponent\n *     dataType: boolean\n *     caption: \"[static MythixUIComponent.isMythixComponent]\"\n *     desc: |\n *       Is `true` for Mythix UI components.\n *   - name: sensitiveTagName\n *     dataType: string\n *     caption: sensitiveTagName\n *     desc: |\n *       Works identically to [Element.tagName](https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName) for XML, where case is preserved.\n *       In HTML this works like [Element.tagName](https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName), but instead of the result\n *       always being UPPERCASE, the tag name will be returned with the casing preserved.\n *   - name: templateID\n *     dataType: string\n *     caption: templateID\n *     desc: |\n *       This is a convenience property that returns the value of `this.constructor.TEMPLATE_ID`\n *   - name: delayTimers\n *     dataType: \"Map&lt;string, Promise&gt;\"\n *     caption: delayTimers\n *     desc: |\n *       A Map instance that\n *       retains `setTimeout` ids so that @see MythixUIComponent.debounce; can properly function. Keys are @see MythixUIComponent.debounce;\n *       timer ids (of type `string`). Values are Promise instances.\n *       Each promise instance also has a special key `timerID` that contains a `setTimeout` id of a javascript timer.\n *     notes:\n *       - |\n *         :warning: Use at your own risk. This is Mythix UI internal code that might change in the future.\n *       - |\n *         :eye: @see MythixUIComponent.debounce;\n *   - name: shadow\n *     dataType: \"[ShadowRoot](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot)\"\n *     caption: shadow\n *     desc: |\n *       The shadow root of this component (or `null` if none).\n *     notes:\n *       - This is the cached result of calling @see MythixUIComponent.createShadowDOM; when\n *         the component is first initialized.\n *   - name: template\n *     dataType: \"[template element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template)\"\n *     caption: template\n *     desc: |\n *       The [template](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template) element for this\n *       component, or `null` if there is no template found for the component.\n *     notes:\n *       - This is the cached result of calling @see MythixUIComponent.getComponentTemplate; when\n *         the component is first initialized.\n***/\n\nexport class MythixUIComponent extends HTMLElement {\n  static [Symbol.hasInstance](instance) {\n    try {\n      return (instance && instance[MYTHIX_TYPE] === MYTHIX_UI_COMPONENT_TYPE);\n    } catch (e) {\n      return false;\n    }\n  }\n\n  // static compileStyleForDocument = compileStyleForDocument;\n  static register = function(_name, _Klass) {\n    let name = _name || this.tagName;\n\n    if (!customElements.get(name)) {\n      let Klass = _Klass || this;\n\n      let observedAttributes = Array.from(\n        new Set(\n          (Klass.observedAttributes || []).concat(Klass.compileAttributeMethods(Klass)),\n        ),\n      );\n\n      if (observedAttributes.length > 0)\n        Klass.observedAttributes = observedAttributes;\n\n      customElements.define(name, Klass);\n\n      let registerEvent = new Event('mythix-component-registered');\n      registerEvent.componentName = name;\n      registerEvent.component = Klass;\n\n      if (typeof document !== 'undefined')\n        document.dispatchEvent(registerEvent);\n    }\n\n    return this;\n  };\n\n  static compileAttributeMethods = function(Klass) {\n    const setupAttributeHandlers = ({ propertyName, attributeName, originalName }) => {\n      if (REGISTERED_COMPONENTS.has(Klass))\n        return;\n\n      let { descriptor } = Utils.getDescriptorFromPrototypeChain(proto, originalName);\n      if (!descriptor)\n        return;\n\n      // We don't want to remove this from\n      // the prototype, as child classes will\n      // want to inherit attribute behavior.\n      // delete prototype[originalName];\n\n      // If we have a \"value\" then the user did it wrong...\n      // so just make it the \"setter\"\n      let setter    = descriptor.set || descriptor.value;\n      let getter    = descriptor.get;\n      let hasSetter = (typeof setter === 'function');\n      let hasGetter = (typeof getter === 'function');\n\n      Object.defineProperties(proto, {\n        [propertyName]: {\n          enumerable:   false,\n          configurable: true,\n          get:          function() {\n            return (hasGetter) ? getter.call(this) : this.attr(attributeName);\n          },\n          set:          function(newValue) {\n            let oldValue = this.attr(attributeName);\n\n            this.attr(attributeName, newValue);\n\n            if (hasSetter)\n              setter.call(this, [ newValue, oldValue ]);\n          },\n        },\n      });\n    };\n\n    let proto           = Klass.prototype;\n    let attributeNames  = Utils.getAllPropertyNames(proto)\n      .filter((name) => IS_ATTR_METHOD_NAME.test(name))\n      .map((originalName) => {\n        let propertyName  = originalName.match(IS_ATTR_METHOD_NAME)[1];\n        let attributeName = BaseUtils.toKebabCase(propertyName);\n\n        setupAttributeHandlers({ propertyName, attributeName, originalName });\n\n        return attributeName;\n      });\n\n    REGISTERED_COMPONENTS.add(Klass);\n\n    return Array.from(new Set(attributeNames));\n  };\n\n  set attr$dataMythixSrc([ newValue, oldValue ]) {\n    this.awaitFetchSrcOnVisible(newValue, oldValue);\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Called when the component is added to the DOM.\n   * arguments:\n   *   - name: mutationRecord\n   *     dataTypes: MutationRecord\n   *     desc: |\n   *       The MutationRecord instance that that caused this method to be called.\n   */\n  onMutationAdded() {}\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Called when the component is removed from the DOM.\n   * arguments:\n   *   - name: mutationRecord\n   *     dataTypes: MutationRecord\n   *     desc: |\n   *       The MutationRecord instance that that caused this method to be called.\n   */\n  onMutationRemoved() {}\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Called when an element is added as a child.\n   * arguments:\n   *   - name: node\n   *     dataTypes: Element\n   *     desc: |\n   *       The child element being added.\n   *   - name: mutationRecord\n   *     dataTypes: MutationRecord\n   *     desc: |\n   *       The MutationRecord instance that that caused this method to be called.\n   */\n  onMutationChildAdded() {}\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Called when a child element is removed.\n   * arguments:\n   *   - name: node\n   *     dataTypes: Element\n   *     desc: |\n   *       The child element being removed.\n   *   - name: mutationRecord\n   *     dataTypes: MutationRecord\n   *     desc: |\n   *       The MutationRecord instance that that caused this method to be called.\n   */\n  onMutationChildRemoved() {}\n\n  static isMythixComponent = isMythixComponent;\n\n  constructor() {\n    super();\n\n    Object.defineProperties(this, {\n      [MYTHIX_TYPE]: {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        MYTHIX_UI_COMPONENT_TYPE,\n      },\n      [isMythixComponent]: { // @ref:MythixUIComponent.isMythixComponent\n        writable:     false,\n        enumerable:   false,\n        configurable: false,\n        value:        isMythixComponent,\n      },\n    });\n\n    Utils.bindMethods.call(this, this.constructor.prototype /*, [ HTMLElement.prototype ]*/);\n\n    Object.defineProperties(this, {\n      'sensitiveTagName': { // @ref:MythixUIComponent.sensitiveTagName\n        enumerable:   false,\n        configurable: true,\n        get:          () => ((this.prefix) ? `${this.prefix}:${this.localName}` : this.localName),\n      },\n      'templateID': { // @ref:MythixUIComponent.templateID\n        writable:     false,\n        enumerable:   false,\n        configurable: true,\n        value:        this.constructor.TEMPLATE_ID,\n      },\n      'delayTimers': { // @ref:MythixUIComponent.delayTimers\n        writable:     false,\n        enumerable:   false,\n        configurable: true,\n        value:        new Map(),\n      },\n      'documentInitialized': { // @ref:MythixUIComponent.documentInitialized\n        enumerable:   false,\n        configurable: true,\n        get:          () => Utils.metadata(this.constructor, MYTHIX_DOCUMENT_INITIALIZED),\n        set:          (value) => {\n          Utils.metadata(this.constructor, MYTHIX_DOCUMENT_INITIALIZED, !!value);\n        },\n      },\n    });\n\n    Object.defineProperties(this, {\n      'shadow': { // @ref:MythixUIComponent.shadow\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        this.createShadowDOM(),\n      },\n      'template': {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        this.getComponentTemplate(),\n      },\n    });\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   A convenience method for getting and setting attributes. If only one argument is provided\n   *   to this method, then it will act as a getter, getting the attribute specified by name.\n   *\n   *   If however two or more arguments are provided, then this is an attribute setter.\n   *\n   *   If the provided value is `undefined`, `null`, or `false`, then the attribute will be\n   *   removed.\n   *\n   *   If the provided value is `true`, then the attribute's value will be set to an empty string `''`.\n   *\n   *   Any other value is converted to a string and set as the attribute's value.\n   * arguments:\n   *   - name: name\n   *     dataTypes: string\n   *     desc: |\n   *       The name of the attribute to operate on.\n   *   - name: value\n   *     dataTypes: any\n   *     desc: |\n   *       If `undefined`, `null`, or `false`, remove the named attribute.\n   *       If `true`, set the named attribute's value to an empty string `''`.\n   *       For any other value, first convert it into a string, and then set the named attribute's value to the resulting string.\n   * return: |\n   *   1. @types string; If a single argument is provided, then return the value of the specified named attribute.\n   *   2. @types this; If more than one argument is provided, then set the specified attribute to the specified value,\n   *      and return `this` (to allow for chaining).\n   */\n  attr(name, value) {\n    if (arguments.length > 1) {\n      if (value == null || value === false)\n        this.removeAttribute(name);\n      else\n        this.setAttribute(name, (value === true) ? '' : ('' + value));\n\n      return this;\n    }\n\n    return this.getAttribute(name);\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Inject a new style sheet via a `<style>` element dynamically at run-time.\n   *\n   *   This method allows the caller to inject dynamic styles at run-time.\n   *   It will only inject the styles once, no matter how many times the\n   *   method is called--as long as the style content itself doesn't change.\n   *\n   *   The content is hashed via SHA256, and the hash is used as the style sheet id. This\n   *   allows you to call the method inside a component's @see MythixUIComponent.mounted;\n   *   method, without needing to worry about duplicating the styles over and over again.\n   * arguments:\n   *   - name: content\n   *     dataTypes: string\n   *     desc: |\n   *       The CSS stylesheet content to inject into a `<style>` element. This content is\n   *       used to generate an `id` for the `<style>` element, so that it only gets added\n   *       to the `document` once.\n   *   - name: media\n   *     dataTypes: string\n   *     default: \"'screen'\"\n   *     optional: true\n   *     desc: |\n   *       What to set the `media` attribute of the created `<style>` element to. Defaults\n   *       to `'screen'`.\n   * notes:\n   *   - |\n   *     :warning: It is often better to simply add a `<style>` element to your component's HTML template.\n   *     However, sometimes truly dynamic styles are needed, where the content won't be known\n   *     until runtime. This is the proper use case for this method.\n   *   - |\n   *     :warning: Please educated yourself (unlike people who love React) and do not overuse dynamic or inline styles.\n   *     While the result of this method is certainly a step above inline styles, this method has\n   *     [great potential to cause harm](https://worldofdev.info/6-reasons-why-you-shouldnt-style-inline/)\n   *     and spread your own ignorance to others. Use with **CARE**!\n   * return: |\n   *   @types Element; The `<style>` element for the specified style.\n   * examples:\n   *   - |\n   *     ```javascript\n   *     import { MythixUIComponent } from 'mythix-ui-core@1.0';\n   *\n   *     class MyComponent extends MythixUIComponent {\n   *       static tagName = 'my-component';\n   *\n   *       // ...\n   *\n   *       mounted() {\n   *         let { sidebarWidth } = this.loadUserPreferences();\n   *         this.injectStyleSheet(`nav.sidebar { width: ${sidebarWidth}px; }`, 'screen');\n   *       }\n   *     }\n   *\n   *     MyComponent.register();\n   *     ```\n   */\n  injectStyleSheet(content, media = 'screen') {\n    let styleID       = `IDSTYLE${BaseUtils.SHA256(`${this.sensitiveTagName}:${content}:${media}`)}`;\n    let ownerDocument = this.ownerDocument || document;\n    let styleElement  = ownerDocument.querySelector(`style#${styleID}`);\n\n    if (styleElement)\n      return styleElement;\n\n    styleElement = ownerDocument.createElement('style');\n    styleElement.setAttribute('data-mythix-for', this.sensitiveTagName);\n    styleElement.setAttribute('id', styleID);\n    if (media)\n      styleElement.setAttribute('media', media);\n\n    styleElement.innerHTML = content;\n\n    document.head.appendChild(styleElement);\n\n    return styleElement;\n  }\n\n  processElements(node, _options) {\n    let options = _options || {};\n    if (!options.scope)\n      options = { ...options, scope: this.$$ };\n\n    return Elements.processElements(node, options);\n  }\n\n  getChildrenAsFragment(noEmptyResult) {\n    let hasContent    = false;\n    let ownerDocument = this.ownerDocument || document;\n    let template      = ownerDocument.createDocumentFragment();\n\n    if (!this.childNodes.length)\n      return (noEmptyResult) ? undefined : template;\n\n    while (this.childNodes.length) {\n      let node = this.childNodes[0];\n      if (!(node.nodeType === Node.TEXT_NODE && BaseUtils.isNOE(node.nodeValue)))\n        hasContent = true;\n\n      template.appendChild(node);\n    }\n\n    if (noEmptyResult && !hasContent)\n      return;\n\n    return template;\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   Get the parent Node of this element.\n   *\n   * notes:\n   *   - |\n   *     :warning: Unlike [Node.parentNode](https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode), this\n   *     will also search across Shadow DOM boundaries.\n   *   - |\n   *     :warning: **Searching across Shadow DOM boundaries only works for Mythix UI components!**\n   *   - |\n   *     :info: Searching across Shadow DOM boundaries is accomplished via leveraging @see MythixUIComponent.metadata; for\n   *     `this` component. When a `null` parent is encountered, `getParentNode` will look for @see MythixUIComponent.metadata?caption=metadata; key @see Constants.MYTHIX_SHADOW_PARENT;\n   *     on `this`. If found, the result is considered the [parent Node](https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode) of `this` component.\n   *   - |\n   *     :eye: This is just a wrapper for @see Utils.getParentNode;.\n   *\n   * return: |\n   *   @types Node; The parent node, if there is any, or `null` otherwise.\n   */\n  getParentNode() {\n    return Utils.getParentNode(this);\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   This is a replacement for [Element.attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow)\n   *   with one notable difference: It runs Mythix UI framework specific code after a shadow is attached.\n   *\n   *   Currently, the method completes the following actions:\n   *   1. Call `super.attachShadow(options)` to actually attach a Shadow DOM\n   *   2. Assign @see MythixUIComponent.metadata?caption=metadata; to the resulting `shadow`, using the key `Constants.MYTHIX_SHADOW_PARENT`, and value of `this`. @sourceRef _shadowMetadataAssignment; This allows @see getParentNode; to later find the parent of the shadow.\n   *   3. `return shadow`\n   * arguments:\n   *   - name: options\n   *     dataTypes: object\n   *     desc: |\n   *       [options](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#options) for [Element.attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow)\n   * notes:\n   *   - This is just a wrapper for [Element.attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow) that executes\n   *     custom framework functionality after the `super` call.\n   * return: |\n   *   @types ShadowRoot; The ShadowRoot instance created by [Element.attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow).\n   */\n  attachShadow(options) {\n    // Check environment support\n    if (typeof super.attachShadow !== 'function')\n      return;\n\n    let shadow = super.attachShadow(options);\n    Utils.metadata(shadow, MYTHIX_SHADOW_PARENT, this); // @ref:_shadowMetadataAssignment\n\n    return shadow;\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   A stub for developers to control the Shadow DOM of the component.\n   *\n   *   By default, this method will simply call @see MythixUIComponent.attachShadow; in `\"open\"` `mode`.\n   *\n   *   Developers can overload this to do nothing (have no Shadow DOM for a specific component for example),\n   *   or to do something else, such as specify they would like their component to be in `\"closed\"` `mode`.\n   *\n   *   The result of this method is assigned to `this.shadow` inside the `constructor` of the component.\n   * arguments:\n   *   - name: options\n   *     dataTypes: object\n   *     desc: |\n   *       [options](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#options) for [Element.attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow)\n   * notes:\n   *   - All this does is call `this.attachShadow`. Its purpose is for the developer to control\n   *     what happens with the component's Shadow DOM.\n   * return: |\n   *   @types ShadowRoot; The ShadowRoot instance created by @see MythixUIComponent.attachShadow;.\n   */\n  createShadowDOM(options) {\n    return this.attachShadow({ mode: 'open', ...(options || {}) });\n  }\n\n  mergeChildren(target, ...others) {\n    return Elements.mergeChildren(target, ...others);\n  }\n\n  getComponentTemplate(nameOrID) {\n    if (nameOrID instanceof Node)\n      return nameOrID;\n\n    if (!this.ownerDocument)\n      return;\n\n    if (nameOrID)\n      return Elements.queryTemplate(this.ownerDocument || document, nameOrID);\n\n    if (this.templateID)\n      return this.ownerDocument.getElementById(this.templateID);\n\n    return this.ownerDocument.querySelector(`template[data-mythix-component-name=\"${this.sensitiveTagName}\" i],template[data-for=\"${this.sensitiveTagName}\" i]`);\n  }\n\n  appendExternalToShadowDOM() {\n    if (!this.shadow)\n      return;\n\n    let ownerDocument = (this.ownerDocument || document);\n    let elements      = ownerDocument.head.querySelectorAll('[data-for]');\n\n    for (let element of Array.from(elements)) {\n      let selector = element.getAttribute('data-for');\n      if (BaseUtils.isNOE(selector))\n        continue;\n\n      if (!this.matches(selector))\n        continue;\n\n      this.shadow.appendChild(element.cloneNode(true));\n    }\n  }\n\n  getProcessedTemplate(_template) {\n    let template = this.getComponentTemplate(_template) || this.template;\n    if (!template)\n      return;\n\n    return this.processElements((template.content) ? template.content.cloneNode(true) : template.cloneNode(true));\n  }\n\n  getRawTemplate(_template) {\n    let template = this.getComponentTemplate(_template) || this.template;\n    if (!template)\n      return;\n\n    return template;\n  }\n\n  appendTemplateTo(target, _template) {\n    if (!target)\n      return;\n\n    let processedTemplate = this.getProcessedTemplate(_template);\n    if (processedTemplate) {\n      // ensureDocumentStyles.call(this, this.ownerDocument, this.sensitiveTagName, template);\n\n      target.appendChild(processedTemplate);\n    }\n  }\n\n  appendTemplateToShadowDOM(_template) {\n    return this.appendTemplateTo(this.shadow, _template);\n  }\n\n  connectedCallback() {\n    this.setAttribute('data-mythix-component-name', this.sensitiveTagName);\n\n    this.appendExternalToShadowDOM();\n    this.appendTemplateToShadowDOM();\n    this.processElements(this);\n\n    this.mounted();\n\n    this.documentInitialized = true;\n\n    BaseUtils.nextTick(() => {\n      this.classList.add('mythix-ready');\n    });\n  }\n\n  disconnectedCallback() {\n    this.unmounted();\n  }\n\n  awaitFetchSrcOnVisible(newSrc) {\n    if (this.visibilityObserver) {\n      this.visibilityObserver.unobserve(this);\n      this.visibilityObserver = null;\n    }\n\n    if (!newSrc)\n      return;\n\n    let observer = visibilityObserver(({ wasVisible, disconnect }) => {\n      if (!wasVisible)\n        this.fetchSrc(this.getAttribute('data-mythix-src'));\n\n      disconnect();\n\n      this.visibilityObserver = null;\n    }, { elements: [ this ] });\n\n    Object.defineProperties(this, {\n      'visibilityObserver': {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        observer,\n      },\n    });\n  }\n\n  attributeChangedCallback(...args) {\n    let [\n      attributeName,\n      oldValue,\n      newValue,\n    ] = args;\n\n    if (oldValue !== newValue) {\n      // Security: ensure this is actually a handled attribute call!\n      // We wouldn't just want to start setting anything on the instance\n      // via attributes... that might be bad, i.e: <img valueOf=\"\">\n\n      let propertyName    = BaseUtils.toCamelCase(attributeName);\n      let magicName       = `attr$${propertyName}`;\n      let { descriptor }  = Utils.getDescriptorFromPrototypeChain(this, magicName);\n      if (descriptor) {\n        // Call setter\n        this[propertyName] = newValue;\n      }\n    }\n\n    return this.attributeChanged(...args);\n  }\n\n  adoptedCallback(...args) {\n    return this.adopted(...args);\n  }\n\n  mounted() {}\n  unmounted() {}\n  attributeChanged() {}\n  adopted() {}\n\n  get $$() {\n    return Utils.createScope(this);\n  }\n\n  select(...args) {\n    let argIndex    = 0;\n    let options     = (BaseUtils.isPlainObject(args[argIndex])) ? Object.assign(Object.create(null), args[argIndex++]) : {};\n    let queryEngine = QueryEngine.from.call(this, { root: this, ...options, invokeCallbacks: false }, ...args.slice(argIndex));\n    let shadowNodes;\n\n    options = queryEngine.getOptions();\n\n    if (options.shadow !== false && options.selector && options.root === this) {\n      shadowNodes = Array.from(\n        QueryEngine.from.call(\n          this,\n          { root: this.shadow },\n          options.selector,\n          options.callback,\n        ).values(),\n      );\n    }\n\n    if (shadowNodes)\n      queryEngine = queryEngine.add(shadowNodes);\n\n    if (options.slotted !== true)\n      queryEngine = queryEngine.slotted(false);\n\n    if (typeof options.callback === 'function')\n      return this.select(queryEngine.map(options.callback));\n\n    return queryEngine;\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   This method will dynamically build elements, or rather, @see ElementDefinition; instances, that\n   *   define elements to be created later. @see ElementDefinition; instances are just that, a simple\n   *   structure that defines the name, attributes, and children of any given element.\n   *\n   *   When these are inserted into a document, either through a @see QueryEngine;, or directly by\n   *   calling @see ElementDefinition.build; before insert, they are only at this point converted\n   *   into real [Elements](https://developer.mozilla.org/en-US/docs/Web/API/Element) and inserted\n   *   into the specified DOM (document) at the specified location.\n   * arguments:\n   *   - name: callback\n   *     dataTypes: function\n   *     desc: |\n   *       A callback that is immediately called and expected to return @see ElementDefinition; instances.\n   *       The callback is called with only two arguments. The first arguments, `elements`, is a\n   *       @see ElementGenerator; Proxy instance, that will properly generate any element definition requested.\n   *       The second argument, `context`, is simply an empty object provided to the callback, allowing the\n   *       developer to store contextual based information for the operation, if desired.\n   * return: |\n   *   * @types ElementDefinition; A single @see ElementDefinition; instance defining\n   *     the DOM to generate when inserted. Can be a `#fragment` element definition.\n   *   * @types Array<ElementDefinition>; An array of element definition instances\n   *     defining the DOM to generate when inserted.\n   *   * @types null; If nothing is returned, then no elements will be created.\n   * notes:\n   *   - |\n   *     :info: The difference between this method and @see MythixUIComponent.$build; method is\n   *     that this method will return @see ElementDefinition; instances, whereas the\n   *     @see MythixUIComponent.$build; method will return a @see QueryEngine; instance containing\n   *     all the built @see ElementDefinition; instances.\n   * examples:\n   *  - |\n   *    ```javascript\n   *    import {\n   *      MythixUIComponent,\n   *      Utils,\n   *    } from '@cdn/mythix-ui-core@1'; // ensure we lock this to whatever version is important to us\n   *\n   *    export class DemoNavComponent extends MythixUIComponent {\n   *      static tagName = 'demo-nav-component'; // a \"something-\" prefix is required\n   *\n   *      mounted() { // called whenever the component is added to another element\n   *        let list = [\n   *          'Test 1',\n   *          'Test 2',\n   *          'Lorem Ipsum',\n   *        ];\n   *\n   *        // Dynamically build and append some elements (with attributes and event bindings)\n   *        let unorderedListElement = this.build(({ NAV, UL, LI, $TEXT }) => { // any element name can be requested here (even custom ones)\n   *          return UL.id('primary-list').class('interactive-list')(\n   *            // ...children of UL element\n   *            ...list.map((item, index) => {\n   *              return LI.class('item-name focusable').dataIndex(index).onClick(this.onItemClick)(\n   *                // ...children of LI element\n   *                $TEXT(item),  // in this case, a single text node\n   *              );\n   *            }),\n   *          );\n   *        });\n   *\n   *        // Create an append elements to this element\n   *        this.append(\n   *          unorderedListElement.build(\n   *            this.ownerDocument,\n   *            { scope: Utils.createScope(this) },\n   *          ),\n   *        );\n   *      }\n   *\n   *      // All class methods are automatically bound to \"this\" inside the super.constructor\n   *      onItemClick(event) {\n   *        console.log('Item Clicked!', event.target);\n   *      }\n   *    }\n   *\n   *    DemoNavComponent.register();\n   *    ```\n   */\n  build(callback) {\n    let result = [ callback.call(this, Elements.ElementGenerator, {}) ].flat(Infinity).map((item) => {\n      if (item && item[UNFINISHED_DEFINITION])\n        return item();\n\n      return item;\n    }).filter(Boolean);\n\n    return (result.length < 2) ? result[0] : new Elements.ElementDefinition('#fragment', {}, result);\n  }\n\n  $build(callback) {\n    return QueryEngine.from.call(this, [ this.build(callback) ].flat(Infinity));\n  }\n\n  isAttributeTruthy(name) {\n    if (!this.hasAttribute(name))\n      return false;\n\n    let value = this.getAttribute(name);\n    if (value === '' || value === 'true')\n      return true;\n\n    return false;\n  }\n\n  getIdentifier() {\n    return this.getAttribute('id') || this.getAttribute('name') || this.getAttribute('data-name') || BaseUtils.toCamelCase(this.sensitiveTagName);\n  }\n\n  metadata(key, value) {\n    return Utils.metadata(this, key, value);\n  }\n\n  dynamicProp(name, defaultValue, setter, _context) {\n    return Utils.dynamicProp.call(_context || this, name, defaultValue, setter);\n  }\n\n  dynamicData(obj) {\n    let keys = Object.keys(obj);\n    let data = Object.create(null);\n\n    for (let i = 0, il = keys.length; i < il; i++) {\n      let key   = keys[i];\n      let value = obj[key];\n      if (typeof value === 'function')\n        continue;\n\n      Utils.dynamicProp.call(data, key, value);\n    }\n\n    return data;\n  }\n\n  /**\n   * parent: MythixUIComponent\n   * groupName: Components\n   * desc: |\n   *   A self-resetting timeout. This method expects an `id` argument (or will generate one from the provided\n   *   callback method if not provided). It uses this provided `id` to create a timeout. This timeout has a special feature\n   *   however that differentiates it from a normal `setTimeout` call: if you call `this.debounce` again with the\n   *   same `id` **before** the time runs out, then it will automatically reset the timer. In short, only the last call\n   *   to `this.debounce` (given the same id) will take effect (unless the specified timeout is reached between calls).\n   * return: |\n   *   This method returns a specialized Promise instance. The instance is specialized because the following properties\n   *   are injected into it:\n   *   1. `resolve(resultValue)` - When called, resolves the promise with the first provided argument\n   *   2. `reject(errorValue)` - When called, rejects the promise with the first provided argument\n   *   3. `status()` - When called, will return the fulfillment status of the promise, as a `string`, one of: `\"pending\", \"fulfilled\"`, or `\"rejected\"`\n   *   4. `id<string>` - A randomly generated ID for this promise\n   *\n   *   See @see BaseUtils.createResolvable;\n   * arguments:\n   *   - name: callback\n   *     dataTypes: function\n   *     desc: |\n   *       The method to call when the timeout has been met.\n   *   - name: timeMS\n   *     dataTypes: number\n   *     optional: true\n   *     default: 0\n   *     desc: |\n   *       The number of milliseconds to wait before calling `callback`.\n   *   - name: id\n   *     dataTypes: string\n   *     optional: true\n   *     default: \"null\"\n   *     desc: |\n   *       The identifier for this debounce timer. If not provided, then one\n   *       will be generated for you based on the provided callback.\n   * notes:\n   *   - Though not required, it is faster and less problematic to provide your own `id` argument\n   */\n  debounce(callback, timeMS, _id) {\n    var id = _id;\n\n    // If we don't get an id from the user, then guess the id by turning the function\n    // into a string (raw source) and use that for an id instead\n    if (id == null) {\n      id = ('' + callback);\n\n      // If this is a transpiled code, then an async generator will be used for async functions\n      // This wraps the real function, and so when converting the function into a string\n      // it will NOT be unique per call-site. For this reason, if we detect this issue,\n      // we will go the \"slow\" route and create a stack trace, and use that for the unique id\n      if (id.match(/asyncGeneratorStep/)) {\n        id = (new Error()).stack;\n        console.warn('mythix-ui warning: \"this.delay\" called without a specified \"id\" parameter. This will result in a performance hit. Please specify and \"id\" argument for your call: \"this.delay(callback, ms, \\'some-custom-call-site-id\\')\"');\n      }\n    } else {\n      id = ('' + id);\n    }\n\n    let promise = this.delayTimers.get(id);\n    if (promise) {\n      if (promise.timerID)\n        clearTimeout(promise.timerID);\n\n      promise.reject('cancelled');\n    }\n\n    promise = BaseUtils.createResolvable();\n    this.delayTimers.set(id, promise);\n\n    // Let's not complain about\n    // uncaught errors\n    promise.catch(() => {});\n\n    promise.timerID = setTimeout(async () => {\n      try {\n        let result = await callback();\n        promise.resolve(result);\n      } catch (error) {\n        console.error('Error encountered while calling \"delay\" callback: ', error, callback.toString());\n        promise.reject(error);\n      }\n    }, timeMS || 0);\n\n    return promise;\n  }\n\n  clearDebounce(id) {\n    let promise = this.delayTimers.get(id);\n    if (!promise)\n      return;\n\n    if (promise.timerID)\n      clearTimeout(promise.timerID);\n\n    promise.reject('cancelled');\n\n    this.delayTimers.delete(id);\n  }\n\n  classes(..._args) {\n    let args = _args.flat(Infinity).map((item) => {\n      if (BaseUtils.isType(item, '::String'))\n        return item.trim();\n\n      if (BaseUtils.isPlainObject(item)) {\n        let keys  = Object.keys(item);\n        let items = [];\n\n        for (let i = 0, il = keys.length; i < il; i++) {\n          let key   = keys[i];\n          let value = item[key];\n          if (!value)\n            continue;\n\n          items.push(key);\n        }\n\n        return items;\n      }\n\n      return null;\n    }).flat(Infinity).filter(Boolean);\n\n    return Array.from(new Set(args)).join(' ');\n  }\n\n  async fetchSrc(srcURL) {\n    if (!srcURL)\n      return;\n\n    try {\n      await loadPartialIntoElement.call(this, srcURL);\n      this.classList.add('mythix-ready');\n    } catch (error) {\n      console.error(`\"${this.sensitiveTagName}\": Failed to load specified resource: ${srcURL} (resolved to: ${error.url})`, error);\n    }\n  }\n}\n\nexport function getIdentifier(target) {\n  if (!target)\n    return 'undefined';\n\n  if (typeof target.getIdentifier === 'function')\n    return target.getIdentifier.call(target);\n\n  if (target instanceof Element)\n    return target.getAttribute('id') || target.getAttribute('name') || target.getAttribute('data-name') || BaseUtils.toCamelCase(target.localName);\n\n  return 'undefined';\n}\n\n// function formatRuleSet(rule, callback) {\n//   if (!rule.selectorText)\n//     return rule.cssText;\n\n//   let _body   = rule.cssText.substring(rule.selectorText.length).trim();\n//   let result  = (callback(rule.selectorText, _body) || []).filter(Boolean);\n//   if (!result)\n//     return '';\n\n//   return result.join(' ');\n// }\n\n// function cssRulesToSource(cssRules, callback) {\n//   return Array.from(cssRules || []).map((rule) => {\n//     let ruleStr = formatRuleSet(rule, callback);\n//     return `${cssRulesToSource(rule.cssRules, callback)}${ruleStr}`;\n//   }).join('\\n\\n');\n// }\n\n// function compileStyleForDocument(elementName, styleElement) {\n//   const handleHost = (m, type, _content) => {\n//     let content = (!_content) ? _content : _content.replace(/^\\(/, '').replace(/\\)$/, '');\n\n//     if (type === ':host') {\n//       if (!content)\n//         return elementName;\n\n//       // Element selector?\n//       if ((/^[a-zA-Z_]/).test(content))\n//         return `${content}[data-mythix-component-name=\"${elementName}\"]`;\n\n//       return `${elementName}${content}`;\n//     } else {\n//       return `${content} ${elementName}`;\n//     }\n//   };\n\n//   return cssRulesToSource(\n//     styleElement.sheet.cssRules,\n//     (_selector, body) => {\n//       let selector = _selector;\n//       let tags     = [];\n\n//       let updatedSelector = selector.replace(/(['\"])(?:\\\\.|[^\\1])+?\\1/, (m) => {\n//         let index = tags.length;\n//         tags.push(m);\n//         return `@@@TAG[${index}]@@@`;\n//       }).split(',').map((selector) => {\n//         let modified = selector.replace(/(:host(?:-context)?)(\\(\\s*[^)]+?\\s*\\))?/, handleHost);\n//         return (modified === selector) ? null : modified;\n//       }).filter(Boolean).join(',').replace(/@@@TAG\\[(\\d+)\\]@@@/, (m, index) => {\n//         return tags[+index];\n//       });\n\n//       if (!updatedSelector)\n//         return;\n\n//       return [ updatedSelector, body ];\n//     },\n//   );\n// }\n\n// export function ensureDocumentStyles(ownerDocument, componentName, template) {\n//   let objID             = BaseUtils.getObjectID(template);\n//   let templateID        = BaseUtils.SHA256(objID);\n//   let templateChildren  = Array.from(template.content.childNodes);\n//   let index             = 0;\n\n//   for (let templateChild of templateChildren) {\n//     if (!(/^style$/i).test(templateChild.tagName))\n//       continue;\n\n//     let styleID = `IDSTYLE${templateID}${++index}`;\n//     if (!ownerDocument.head.querySelector(`style#${styleID}`)) {\n//       let clonedStyleElement = templateChild.cloneNode(true);\n//       ownerDocument.head.appendChild(clonedStyleElement);\n\n//       let newStyleSheet = compileStyleForDocument(componentName, clonedStyleElement);\n//       ownerDocument.head.removeChild(clonedStyleElement);\n\n//       let styleNode = ownerDocument.createElement('style');\n//       styleNode.setAttribute('data-mythix-for', this.sensitiveTagName);\n//       styleNode.setAttribute('id', styleID);\n//       styleNode.innerHTML = newStyleSheet;\n\n//       document.head.appendChild(styleNode);\n//     }\n//   }\n// }\n\nexport function resolveURL(rootLocation, _urlish) {\n  let urlish = _urlish;\n  if (urlish instanceof URL)\n    urlish = urlish.toString();\n\n  if (!urlish)\n    urlish = '';\n\n  if (!BaseUtils.isType(urlish, '::String'))\n    return;\n\n  let url = new URL(urlish, new URL(rootLocation));\n  if (typeof globalThis.mythixUI.urlResolver === 'function') {\n    let fileName  = '';\n    let path      = '/';\n\n    url.pathname.replace(/^(.*\\/)([^/]+)$/, (m, first, second) => {\n      path = first.replace(/\\/+$/, '/');\n      if (path.charAt(path.length - 1) !== '/')\n        path = `${path}/`;\n\n      fileName = second;\n      return m;\n    });\n\n    let newSrc = globalThis.mythixUI.urlResolver.call(this, { src: urlish, url, path, fileName });\n    if (newSrc === false) {\n      console.warn(`\"mythix-require\": Not loading \"${urlish}\" because the global \"mythixUI.urlResolver\" requested I not do so.`);\n      return;\n    }\n\n    if (newSrc && (newSrc.toString() !== url.toString() && newSrc.toString() !== urlish))\n      url = resolveURL.call(this, rootLocation, newSrc);\n  }\n\n  return url;\n}\n\nconst IS_TEMPLATE         = /^(template)$/i;\nconst IS_SCRIPT           = /^(script)$/i;\nconst REQUIRE_CACHE       = new Map();\nconst RESOLVE_SRC_ELEMENT = /^script|link|style|mythix-language-pack|mythix-require$/i;\n\nexport function importIntoDocumentFromSource(ownerDocument, location, _url, sourceString, _options) {\n  let options   = _options || {};\n  let url       = resolveURL.call(this, location, _url, options.magic);\n  let fileName;\n  let baseURL   = new URL(`${url.origin}${url.pathname.replace(/[^/]+$/, (m) => {\n    fileName = m;\n    return '';\n  })}${url.search}${url.hash}`);\n\n  let template = ownerDocument.createElement('template');\n  template.innerHTML = sourceString;\n\n  let children = Array.from(template.content.children).sort((a, b) => {\n    let x = a.tagName;\n    let y = b.tagName;\n\n    // eslint-disable-next-line eqeqeq\n    if (x == y)\n      return 0;\n\n    return (x < y) ? 1 : -1;\n  });\n\n  const fileNameToElementName = (fileName) => {\n    return fileName.trim().replace(/\\..*$/, '').replace(/\\b[A-Z]|[^A-Z][A-Z]/g, (_m) => {\n      let m = _m.toLowerCase();\n      return (m.length < 2) ? `-${m}` : `${m.charAt(0)}-${m.charAt(1)}`;\n    }).replace(/-{2,}/g, '-').replace(/^[^a-z]*/, '').replace(/[^a-z]*$/, '');\n  };\n\n  let guessedElementName  = fileNameToElementName(fileName);\n  let context             = {\n    guessedElementName,\n    children,\n    ownerDocument,\n    template,\n    url,\n    baseURL,\n    fileName,\n  };\n\n  if (typeof options.preProcess === 'function') {\n    template = context.template = options.preProcess.call(this, context);\n    children = Array.from(template.content.children);\n  }\n\n  let nodeHandler   = options.nodeHandler;\n  let templateCount = children.reduce((sum, element) => ((IS_TEMPLATE.test(element.tagName)) ? (sum + 1) : sum), 0);\n\n  context.templateCount = templateCount;\n\n  const resolveElementSrcAttribute = (element, baseURL) => {\n    // Resolve \"src\" attribute, since we are\n    // going to be moving the element around\n    let src = element.getAttribute('src');\n    if (src) {\n      src = resolveURL.call(this, baseURL, src, false);\n      element.setAttribute('src', src.toString());\n    }\n\n    return element;\n  };\n\n  for (let child of children) {\n    if (options.magic && RESOLVE_SRC_ELEMENT.test(child.localName))\n      child = resolveElementSrcAttribute(child, baseURL);\n\n    if (IS_TEMPLATE.test(child.tagName)) { // <template>\n      if (templateCount === 1 && child.getAttribute('data-for') == null && child.getAttribute('data-mythix-component-name') == null) {\n        console.warn(`${url}: <template> is missing a \"data-for\" attribute, linking it to its owner component. Guessing \"${guessedElementName}\".`);\n        child.setAttribute('data-for', guessedElementName);\n      }\n\n      if (typeof nodeHandler === 'function' && nodeHandler.call(this, child, { ...context, isTemplate: true, isHandled: true }) === false)\n        continue;\n\n      // append to head\n      let elementName = (child.getAttribute('data-for') || child.getAttribute('data-mythix-component-name'));\n      if (!ownerDocument.body.querySelector(`[data-for=\"${elementName}\" i],[data-mythix-component-name=\"${elementName}\" i]`))\n        ownerDocument.body.appendChild(child);\n    } else if (IS_SCRIPT.test(child.tagName)) { // <script>\n      let childClone = ownerDocument.createElement(child.tagName);\n      for (let attributeName of child.getAttributeNames()) {\n        if (attributeName === 'src')\n          continue;\n\n        childClone.setAttribute(attributeName, child.getAttribute(attributeName));\n      }\n\n      let src = child.getAttribute('src');\n      if (src) {\n        src = resolveURL.call(this, baseURL, src, false);\n        childClone.setAttribute('src', src.toString());\n      } else {\n        childClone.setAttribute('type', 'module');\n        childClone.innerHTML = child.textContent;\n      }\n\n      if (typeof nodeHandler === 'function' && nodeHandler.call(this, childClone, { ...context, isScript: true, isHandled: true }) === false)\n        continue;\n\n      let scriptID = `ID${BaseUtils.SHA256(`${guessedElementName}:${src || childClone.innerHTML}`)}`;\n      if (!childClone.getAttribute('id'))\n        childClone.setAttribute('id', scriptID);\n\n      // append to head\n      if (!ownerDocument.querySelector(`script#${scriptID}`))\n        ownerDocument.head.appendChild(childClone);\n    } else if ((/^(link|style)$/i).test(child.tagName)) { // <link> & <style>\n      let isStyle = (/^style$/i).test(child.tagName);\n      if (typeof nodeHandler === 'function' && nodeHandler.call(this, child, { ...context, isStyle, isLink: !isStyle, isHandled: true }) === false)\n        continue;\n\n      let id = `ID${BaseUtils.SHA256(child.outerHTML)}`;\n      if (!child.getAttribute('id'))\n        child.setAttribute('id', id);\n\n      // append to head\n      if (!ownerDocument.querySelector(`${child.tagName}#${id}`))\n        ownerDocument.head.appendChild(child);\n    } else if ((/^meta$/i).test(child.tagName)) { // <meta>\n      if (typeof nodeHandler === 'function')\n        nodeHandler.call(this, child, { ...context, isMeta: true, isHandled: true });\n\n      // do nothing with these tags\n      continue;\n    } else { // Everything else\n      let isHandled = false;\n\n      if (child.localName === 'mythix-language-pack') {\n        let langPackID = `ID${BaseUtils.SHA256(`${guessedElementName}:${child.outerHTML}`)}`;\n        if (!child.getAttribute('id'))\n          child.setAttribute('id', langPackID);\n\n        let languageProvider = this.closest('mythix-language-provider');\n        if (!languageProvider)\n          languageProvider = document.querySelector('mythix-language-provider');\n\n        if (languageProvider) {\n          if (!languageProvider.querySelector(`mythix-language-pack#${langPackID}`))\n            languageProvider.insertBefore(child, languageProvider.firstChild);\n\n          isHandled = true;\n        } // else do nothing... let it be dumped into the dom later\n      }\n\n      if (typeof nodeHandler === 'function')\n        nodeHandler.call(this, child, { ...context, isHandled });\n    }\n  }\n\n  if (typeof options.postProcess === 'function') {\n    template = context.template = options.postProcess.call(this, context);\n    children = Array.from(template.content.children);\n  }\n\n  return context;\n}\n\nexport async function require(urlOrName, _options) {\n  let options       = _options || {};\n  let ownerDocument = options.ownerDocument || document;\n  let url           = resolveURL.call(this, ownerDocument.location, urlOrName, options.magic);\n  let cacheKey;\n\n  if (!(/^(false|no-store|reload|no-cache)$/).test(url.searchParams.get('cache'))) {\n    if (url.searchParams.get('cacheParams') !== 'true') {\n      let cacheKeyURL = new URL(`${url.origin}${url.pathname}`);\n      cacheKey = cacheKeyURL.toString();\n    } else {\n      cacheKey = url.toString();\n    }\n\n    let cachedResponse = REQUIRE_CACHE.get(cacheKey);\n    if (cachedResponse) {\n      cachedResponse = await cachedResponse;\n      if (cachedResponse.response && cachedResponse.response.ok)\n        return { url, response: cachedResponse.response, ownerDocument, cached: true };\n    }\n  }\n\n  let promise = globalThis.fetch(url, options.fetchOptions).then(\n    async (response) => {\n      if (!response.ok) {\n        if (cacheKey)\n          REQUIRE_CACHE.delete(cacheKey);\n\n        let error = new Error(`${response.status} ${response.statusText}`);\n        error.url = url;\n        throw error;\n      }\n\n      let body = await response.text();\n      response.text = async () => body;\n      response.json = async () => JSON.parse(body);\n\n      return { url, response, ownerDocument, cached: false };\n    },\n    (error) => {\n      console.error('Error from Mythix UI \"require\": ', error);\n\n      if (cacheKey)\n        REQUIRE_CACHE.delete(cacheKey);\n\n      error.url = url;\n      throw error;\n    },\n  );\n\n  REQUIRE_CACHE.set(cacheKey, promise);\n\n  return await promise;\n}\n\nexport async function loadPartialIntoElement(src, _options) {\n  let options = _options || {};\n\n  let {\n    ownerDocument,\n    url,\n    response,\n  } = await require.call(\n    this,\n    src,\n    {\n      ownerDocument: this.ownerDocument || document,\n    },\n  );\n\n  let body = await response.text();\n  while (this.childNodes.length)\n    this.removeChild(this.childNodes[0]);\n\n  let scopeData = Object.create(null);\n  for (let [ key, value ] of url.searchParams.entries())\n    scopeData[key] = BaseUtils.coerce(value);\n\n  importIntoDocumentFromSource.call(\n    this,\n    ownerDocument,\n    ownerDocument.location,\n    url,\n    body,\n    {\n      nodeHandler: (node, { isHandled, isTemplate }) => {\n        if ((isTemplate || !isHandled) && (node.nodeType === Node.ELEMENT_NODE || node.nodeType === Node.TEXT_NODE)) {\n          this.appendChild(\n            Elements.processElements.call(\n              this,\n              node,\n              {\n                ...options,\n                scope: Utils.createScope(scopeData, options.scope),\n              },\n            ),\n          );\n        }\n      },\n    },\n  );\n}\n\nexport function visibilityObserver(callback, _options) {\n  const intersectionCallback = (entries) => {\n    for (let i = 0, il = entries.length; i < il; i++) {\n      let entry   = entries[i];\n      let element = entry.target;\n      if (!entry.isIntersecting)\n        continue;\n\n      let elementObservers = Utils.metadata(element, MYTHIX_INTERSECTION_OBSERVERS);\n      if (!elementObservers) {\n        elementObservers = new Map();\n        Utils.metadata(element, MYTHIX_INTERSECTION_OBSERVERS, elementObservers);\n      }\n\n      let data = elementObservers.get(observer);\n      if (!data) {\n        data = { wasVisible: false, ratioVisible: entry.intersectionRatio };\n        elementObservers.set(observer, data);\n      }\n\n      if (entry.intersectionRatio > data.ratioVisible)\n        data.ratioVisible = entry.intersectionRatio;\n\n      data.previousVisibility = (data.visibility === undefined) ? data.visibility : data.visibility;\n      data.visibility = (entry.intersectionRatio > 0.0);\n\n      callback({ ...data, entry, element, index: i, disconnect: () => observer.unobserve(element) });\n\n      if (data.visibility && !data.wasVisible)\n        data.wasVisible = true;\n    }\n  };\n\n  let options = {\n    root:       null,\n    threshold:  0.0,\n    ...(_options || {}),\n  };\n\n  let observer  = new IntersectionObserver(intersectionCallback, options);\n  let elements  = (_options || {}).elements || [];\n\n  for (let i = 0, il = elements.length; i < il; i++)\n    observer.observe(elements[i]);\n\n  return observer;\n}\n\nconst NO_OBSERVER = Object.freeze({\n  wasVisible:         false,\n  ratioVisible:       0.0,\n  visibility:         false,\n  previousVisibility: false,\n});\n\nexport function getVisibilityMeta(element, observer) {\n  let elementObservers = Utils.metadata(element, MYTHIX_INTERSECTION_OBSERVERS);\n  if (!elementObservers)\n    return NO_OBSERVER;\n\n  return elementObservers.get(observer) || NO_OBSERVER;\n}\n\nexport function getLargestDocumentTabIndex(ownerDocument) {\n  let largest = -Infinity;\n\n  Array.from((ownerDocument || document).querySelectorAll('[tabindex]')).forEach((element) => {\n    let tabIndex = parseInt(element.getAttribute('tabindex'), 10);\n    if (!isFinite(tabIndex))\n      return;\n\n    if (tabIndex > largest)\n      largest = tabIndex;\n  });\n\n  return (largest < 0) ? 0 : largest;\n}\n","import * as Component from './components.js';\n\nconst IS_TEMPLATE       = /^(template)$/i;\nconst TEMPLATE_TEMPLATE = /^(\\*|\\|\\*|\\*\\|)$/;\n\nexport class MythixUIRequire extends Component.MythixUIComponent {\n  async mounted() {\n    super.mounted();\n\n    let src = this.getAttribute('src');\n\n    try {\n      let {\n        ownerDocument,\n        url,\n        response,\n        cached,\n      } = await Component.require.call(\n        this,\n        src,\n        {\n          magic:          true,\n          ownerDocument:  this.ownerDocument || document,\n        },\n      );\n\n      if (cached)\n        return;\n\n      let body = await response.text();\n      Component.importIntoDocumentFromSource.call(\n        this,\n        ownerDocument,\n        ownerDocument.location,\n        url,\n        body,\n        {\n          magic:        true,\n          nodeHandler:  (node, { isHandled }) => {\n            if (!isHandled && node.nodeType === Node.ELEMENT_NODE)\n              document.body.appendChild(node);\n          },\n          preProcess:   ({ template, children }) => {\n            let starTemplate = children.find((child) => {\n              let dataFor = child.getAttribute('data-for');\n              return (IS_TEMPLATE.test(child.tagName) && TEMPLATE_TEMPLATE.test(dataFor));\n            });\n\n            if (!starTemplate)\n              return template;\n\n            let dataFor = starTemplate.getAttribute('data-for');\n            for (let child of children) {\n              if (child === starTemplate)\n                continue;\n\n              if (IS_TEMPLATE.test(child.tagName)) { // <template>\n                let starClone = starTemplate.content.cloneNode(true);\n                if (dataFor === '*|')\n                  child.content.insertBefore(starClone, child.content.childNodes[0] || null);\n                else\n                  child.content.appendChild(starClone);\n              }\n            }\n\n            starTemplate.parentNode.removeChild(starTemplate);\n\n            return template;\n          },\n        },\n      );\n    } catch (error) {\n      console.error(`\"mythix-require\": Failed to load specified resource: ${src}`, error);\n    }\n  }\n\n  async fetchSrc() {\n    // NOOP\n  }\n}\n\n(globalThis.mythixUI = (globalThis.mythixUI || {})).MythixUIRequire = MythixUIRequire;\n\nif (typeof customElements !== 'undefined' && !customElements.get('mythix-require'))\n  customElements.define('mythix-require', MythixUIRequire);\n","import deepMerge from 'deepmerge';\nimport * as BaseUtils from './base-utils.js';\nimport * as Utils from './utils.js';\n\nimport {\n  DynamicProperty,\n} from './dynamic-property.js';\n\nimport {\n  MythixUIComponent,\n  require,\n} from './components.js';\n\nexport class MythixUILanguagePack extends MythixUIComponent {\n  static tagName = 'mythix-language-pack';\n\n  createShadowDOM() {\n    // NOOP\n  }\n\n  getComponentTemplate() {\n    // NOOP\n  }\n\n  set attr$dataMythixSrc([ value ]) {\n    // NOOP... Trap this because we\n    // don't want to load a partial here\n  }\n\n  onMutationAdded(mutation) {\n    // When added to the DOM, ensure that we were\n    // added to the root of a language provider...\n    // If not, then move ourselves to the root\n    // of the language provider.\n    let parentLanguageProvider = this.closest('mythix-language-provider');\n    if (parentLanguageProvider && parentLanguageProvider !== mutation.target)\n      BaseUtils.nextTick(() => parentLanguageProvider.insertBefore(this, parentLanguageProvider.firstChild));\n  }\n}\n\nconst IS_JSON_ENCTYPE                 = /^application\\/json/i;\nconst LANGUAGE_PACK_INSERT_GRACE_TIME = 50;\n\nexport class MythixUILanguageProvider extends MythixUIComponent {\n  static tagName = 'mythix-language-provider';\n\n  set attr$lang([ newValue, oldValue ]) {\n    this.loadAllLanguagePacksForLanguage(newValue, oldValue);\n  }\n\n  onMutationChildAdded(node) {\n    if (node.localName === 'mythix-language-pack') {\n      this.debounce(() => {\n        // Reload language packs after additions\n        this.loadAllLanguagePacksForLanguage(this.getCurrentLocale());\n      }, LANGUAGE_PACK_INSERT_GRACE_TIME, 'reloadLanguagePacks');\n    }\n  }\n\n  constructor() {\n    super();\n\n    Object.defineProperties(this, {\n      'terms': {\n        writable:     true,\n        enumerable:   false,\n        configurable: true,\n        value:        Object.create(null),\n      },\n    });\n  }\n\n  i18n(_path, defaultValue) {\n    let path    = `global.i18n.${_path}`;\n    let result  = Utils.fetchPath(this.terms, path);\n\n    if (result == null)\n      return Utils.getDynamicPropertyForPath.call(this, path, (defaultValue == null) ? '' : defaultValue);\n\n    return result;\n  }\n\n  getCurrentLocale() {\n    return this.getAttribute('lang') || (this.ownerDocument || document).childNodes[1].getAttribute('lang') || 'en';\n  }\n\n  mounted() {\n    super.mounted();\n\n    if (!this.getAttribute('lang'))\n      this.setAttribute('lang', (this.ownerDocument || document).childNodes[1].getAttribute('lang') || 'en');\n  }\n\n  createShadowDOM() {\n    // NOOP\n  }\n\n  getComponentTemplate() {\n    // NOOP\n  }\n\n  getSourcesForLang(lang) {\n    return this.select(`mythix-language-pack[lang^=\"${lang.replace(/\"/g, '\\\\\"')}\"]`);\n  }\n\n  loadAllLanguagePacksForLanguage(_lang) {\n    let lang            = _lang || 'en';\n    let sourceElements  = this.getSourcesForLang(lang).filter((sourceElement) => BaseUtils.isNotNOE(sourceElement.getAttribute('src')));\n    if (!sourceElements || !sourceElements.length) {\n      console.warn(`\"mythix-language-provider\": No \"mythix-language-pack\" tag found for specified language \"${lang}\"`);\n      return;\n    }\n\n    this.loadAllLanguagePacks(lang, sourceElements);\n  }\n\n  async loadAllLanguagePacks(lang, sourceElements) {\n    try {\n      let promises  = sourceElements.map((sourceElement) => this.loadLanguagePack(lang, sourceElement));\n      let allTerms  = (await Promise.allSettled(promises)).map((result) => {\n        if (result.status !== 'fulfilled')\n          return;\n\n        return result.value;\n      }).filter(Boolean);\n\n      let terms         = deepMerge.all(Array.from(new Set(allTerms)));\n      let compiledTerms = this.compileLanguageTerms(lang, terms);\n\n      this.terms = compiledTerms;\n    } catch (error) {\n      console.error('\"mythix-language-provider\": Failed to load language packs', error);\n    }\n  }\n\n  async loadLanguagePack(lang, sourceElement) {\n    let src = sourceElement.getAttribute('src');\n    if (!src)\n      return;\n\n    try {\n      let { response }  = await require.call(this, src, { ownerDocument: this.ownerDocument || document });\n      let type          = this.getAttribute('enctype') || 'application/json';\n      if (IS_JSON_ENCTYPE.test(type)) {\n        // Handle JSON\n        return response.json();\n      } else {\n        new TypeError(`Don't know how to load a language pack of type \"${type}\"`);\n      }\n    } catch (error) {\n      console.error(`\"mythix-language-provider\": Failed to load specified resource: ${src}`, error);\n    }\n  }\n\n  compileLanguageTerms(lang, terms) {\n    const walkTerms = (terms, rawKeyPath) => {\n      let keys      = Object.keys(terms);\n      let termsCopy = {};\n\n      for (let i = 0, il = keys.length; i < il; i++) {\n        let key         = keys[i];\n        let value       = terms[key];\n        let newKeyPath  = rawKeyPath.concat(key);\n\n        if (BaseUtils.isPlainObject(value) || Array.isArray(value)) {\n          termsCopy[key] = walkTerms(value, newKeyPath);\n        } else {\n          let property = Utils.getDynamicPropertyForPath.call(this, newKeyPath.join('.'), value);\n          termsCopy[key] = property;\n          property[DynamicProperty.set](value);\n        }\n      }\n\n      return termsCopy;\n    };\n\n    return walkTerms(terms, [ 'global', 'i18n' ]);\n  }\n}\n\nMythixUILanguagePack.register();\nMythixUILanguageProvider.register();\n\n(globalThis.mythixUI = (globalThis.mythixUI || {})).MythixUILanguagePack = MythixUILanguagePack;\nglobalThis.mythixUI.MythixUILanguageProvider = MythixUILanguageProvider;\n","/* eslint-disable no-magic-numbers */\n\nimport { MythixUIComponent } from './components.js';\n\n/*\nMany thanks to Sagee Conway for the following CSS spinners\nhttps://codepen.io/saconway/pen/vYKYyrx\n*/\n\nconst STYLE_SHEET =\n`\n:host {\n  --mythix-spinner-size: 1em;\n  width: var(--mythix-spinner-size);\n  height: var(--mythix-spinner-size);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-evenly;\n  position: relative;\n}\n:host(.small) {\n  --mythix-spinner-size: calc(1em * 0.75);\n}\n:host(.medium) {\n  --mythix-spinner-size: calc(1em * 1.5);\n}\n:host(.large) {\n  --mythix-spinner-size: calc(1em * 3);\n}\n.spinner-item,\n.spinner-item::before,\n.spinner-item::after {\n\tbox-sizing: border-box;\n}\n:host([kind=\"audio\"]) .spinner-item {\n  width: 11%;\n  height: 60%;\n  background: var(--mythix-spinner-segment-color);\n  animation: mythix-spinner-audio-animation calc(var(--theme-animation-duration, 1000ms) * 1.0) ease-in-out infinite;\n}\n@keyframes mythix-spinner-audio-animation {\n  50% {\n    transform: scaleY(0.25);\n  }\n}\n:host([kind=\"audio\"]) .spinner-item:nth-child(1) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n  animation-delay: calc(var(--theme-animation-duration, 1000ms) / 10 * -3);\n}\n:host([kind=\"audio\"]) .spinner-item:nth-child(2) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  animation-delay: calc(var(--theme-animation-duration, 1000ms) / 10 * -1);\n}\n:host([kind=\"audio\"]) .spinner-item:nth-child(3) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  animation-delay: calc(var(--theme-animation-duration, 1000ms) / 10 * -2);\n}\n:host([kind=\"audio\"]) .spinner-item:nth-child(4) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color4, var(--theme-primary-color, #333));\n  animation-delay: calc(var(--theme-animation-duration, 1000ms) / 10 * -1);\n}\n:host([kind=\"audio\"]) .spinner-item:nth-child(5) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color5, var(--theme-primary-color, #333));\n  animation-delay: calc(var(--theme-animation-duration, 1000ms) / 10 * -3);\n}\n:host([kind=\"circle\"]) .spinner-item {\n  --mythix-spinner-circle-thickness: calc(var(--mythix-spinner-size) * 0.075);\n  position: absolute;\n  width: var(--mythix-spinner-item-size);\n  height: var(--mythix-spinner-item-size);\n  top: calc(50% - var(--mythix-spinner-item-size) / 2);\n  left: calc(50% - var(--mythix-spinner-item-size) / 2);\n  border: var(--mythix-spinner-circle-thickness) solid transparent;\n  border-left: var(--mythix-spinner-circle-thickness) solid var(--mythix-spinner-segment-color);\n  border-right: var(--mythix-spinner-circle-thickness) solid var(--mythix-spinner-segment-color);\n  border-radius: 50%;\n  animation: mythix-spinner-circle-animation calc(var(--theme-animation-duration, 1000ms) * 1.0) linear infinite;\n}\n@keyframes mythix-spinner-circle-animation {\n  to {\n    transform: rotate(360deg);\n  }\n}\n:host([kind=\"circle\"]) .spinner-item:nth-of-type(1) {\n  --mythix-spinner-item-size: calc(var(--mythix-spinner-size) * 1.0);\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n  border-top: var(--mythix-spinner-circle-thickness) * 0.075) solid var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n  animation: mythix-spinner-circle-animation calc(var(--theme-animation-duration, 1000ms) * 1.0) linear infinite;\n}\n:host([kind=\"circle\"]) .spinner-item:nth-of-type(2) {\n  --mythix-spinner-item-size: calc(var(--mythix-spinner-size) * 0.7);\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  border-bottom: var(--mythix-spinner-circle-thickness) solid var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  animation: mythix-spinner-circle-animation calc(var(--theme-animation-duration, 1000ms) * 0.875) linear infinite;\n}\n:host([kind=\"circle\"]) .spinner-item:nth-of-type(3) {\n  --mythix-spinner-item-size: calc(var(--mythix-spinner-size) * 0.4);\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  border-top: var(--mythix-spinner-circle-thickness) solid var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  animation: mythix-spinner-circle-animation calc(var(--theme-animation-duration, 1000ms) * 0.75) linear infinite;\n}\n:host([kind=\"puzzle\"]) {\n  transform: translate(0, calc(var(--mythix-spinner-size) * 0.1)) rotate(45deg);\n}\n:host([kind=\"puzzle\"]) .spinner-item {\n  --mythix-spinner-item-size: calc(var(--mythix-spinner-size) / 2.5);\n  position: absolute;\n  width: var(--mythix-spinner-item-size);\n  height: var(--mythix-spinner-item-size);\n  border: calc(var(--mythix-spinner-size) * 0.1) solid var(--mythix-spinner-segment-color);\n}\n:host([kind=\"puzzle\"]) .spinner-item:nth-child(1) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n  top: 0;\n  left: 0;\n  animation: mythix-spinner-puzzle-animation1 calc(var(--theme-animation-duration, 1000ms) * 5.0) linear infinite;\n}\n@keyframes mythix-spinner-puzzle-animation1 {\n  0%, 8.33%, 16.66%, 100% {\n    transform: translate(0%, 0%);\n  }\n  24.99%, 33.32%, 41.65% {\n    transform: translate(100%, 0%);\n  }\n  49.98%, 58.31%, 66.64% {\n    transform: translate(100%, 100%);\n  }\n  74.97%, 83.30%, 91.63% {\n    transform: translate(0%, 100%);\n  }\n}\n:host([kind=\"puzzle\"]) .spinner-item:nth-child(2) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  top: 0;\n  left: var(--mythix-spinner-item-size);\n  animation: mythix-spinner-puzzle-animation2 calc(var(--theme-animation-duration, 1000ms) * 5.0) linear infinite;\n}\n@keyframes mythix-spinner-puzzle-animation2 {\n  0%, 8.33%, 91.63%, 100% {\n    transform: translate(0%, 0%);\n  }\n  16.66%, 24.99%, 33.32% {\n    transform: translate(0%, 100%);\n  }\n  41.65%, 49.98%, 58.31% {\n    transform: translate(-100%, 100%);\n  }\n  66.64%, 74.97%, 83.30% {\n    transform: translate(-100%, 0%);\n  }\n}\n:host([kind=\"puzzle\"]) .spinner-item:nth-child(3) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  top: var(--mythix-spinner-item-size);\n  left: var(--mythix-spinner-item-size);\n  animation: mythix-spinner-puzzle-animation3 calc(var(--theme-animation-duration, 1000ms) * 5.0) linear infinite;\n}\n@keyframes mythix-spinner-puzzle-animation3 {\n  0%, 83.30%, 91.63%, 100% {\n    transform: translate(0, 0);\n  }\n  8.33%, 16.66%, 24.99% {\n    transform: translate(-100%, 0);\n  }\n  33.32%, 41.65%, 49.98% {\n    transform: translate(-100%, -100%);\n  }\n  58.31%, 66.64%, 74.97% {\n    transform: translate(0, -100%);\n  }\n}\n:host([kind=\"wave\"]) .spinner-item {\n  --mythix-spinner-item-size: calc(var(--mythix-spinner-size) / 4);\n  min-width: var(--mythix-spinner-item-size);\n  width: var(--mythix-spinner-item-size);\n  height: var(--mythix-spinner-item-size);\n  border-radius: 50%;\n  border: none;\n  overflow: hidden;\n  background-color: var(--mythix-spinner-segment-color);\n  animation: mythix-spinner-wave-animation calc(var(--theme-animation-duration, 1000ms) * 1.15) ease-in-out infinite;\n}\n@keyframes mythix-spinner-wave-animation {\n  0%, 100% {\n    transform: translateY(75%);\n  }\n  50% {\n    transform: translateY(-75%);\n  }\n}\n:host([kind=\"wave\"]) .spinner-item:nth-child(1) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 6 * -1);\n}\n:host([kind=\"wave\"]) .spinner-item:nth-child(2) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 6 * -2);\n}\n:host([kind=\"wave\"]) .spinner-item:nth-child(3) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 6 * -3);\n}\n:host([kind=\"pipe\"]) .spinner-item {\n  width: 11%;\n  height: 40%;\n  background-color: var(--mythix-spinner-segment-color);\n  animation: mythix-spinner-pipe-animation calc(var(--theme-animation-duration, 1000ms) * 1.15) ease-in-out infinite;\n}\n@keyframes mythix-spinner-pipe-animation {\n  25% {\n    transform: scaleY(2);\n  }\n  50% {\n    transform: scaleY(1);\n  }\n}\n:host([kind=\"pipe\"]) .spinner-item:nth-child(1) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n}\n:host([kind=\"pipe\"]) .spinner-item:nth-child(2) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 10);\n}\n:host([kind=\"pipe\"]) .spinner-item:nth-child(3) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color3, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 10 * 2);\n}\n:host([kind=\"pipe\"]) .spinner-item:nth-child(4) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color4, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 10 * 3);\n}\n:host([kind=\"pipe\"]) .spinner-item:nth-child(5) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color5, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 1.15) / 10 * 4);\n}\n:host([kind=\"dot\"]) .spinner-item {\n  position: absolute;\n  top: calc(50% - var(--mythix-spinner-size) / 2);\n  left: calc(50% - var(--mythix-spinner-size) / 2);\n  width: var(--mythix-spinner-size);\n  height: var(--mythix-spinner-size);\n  background: var(--mythix-spinner-segment-color);\n  border-radius: 50%;\n  animation: mythix-spinner-dot-animation calc(var(--theme-animation-duration, 1000ms) * 3.0) ease-in-out infinite;\n}\n@keyframes mythix-spinner-dot-animation {\n  0%, 100% {\n    transform: scale(0.25);\n    opacity: 1;\n  }\n  50% {\n    transform: scale(1);\n    opacity: 0;\n  }\n}\n:host([kind=\"dot\"]) .spinner-item:nth-of-type(1) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color1, var(--theme-primary-color, #333));\n}\n:host([kind=\"dot\"]) .spinner-item:nth-of-type(2) {\n  --mythix-spinner-segment-color: var(--theme-mythix-spinner-color2, var(--theme-primary-color, #333));\n  animation-delay: calc(calc(var(--theme-animation-duration, 1000ms) * 3.0) / -2);\n}\n`;\n\nconst KINDS = {\n  'audio':  5,\n  'circle': 3,\n  'dot':    2,\n  'pipe':   5,\n  'puzzle': 3,\n  'wave':   3,\n};\n\nexport class MythixUISpinner extends MythixUIComponent {\n  static tagName = 'mythix-spinner';\n\n  set attr$kind([ newValue ]) {\n    this.handleKindAttributeChange(newValue);\n  }\n\n  mounted() {\n    super.mounted();\n\n    if (!this.documentInitialized) {\n      // append template\n      let ownerDocument = this.ownerDocument || document;\n      this.$build(({ TEMPLATE }) => {\n        return TEMPLATE\n          .dataMythixName(this.sensitiveTagName)\n          .prop$innerHTML(`<style>${STYLE_SHEET}</style>`);\n      }).appendTo(ownerDocument.body);\n\n      let template = this.template = this.getComponentTemplate();\n      this.appendTemplateToShadowDOM(template);\n    }\n\n    let kind = this.getAttribute('kind');\n    if (!kind) {\n      kind = 'pipe';\n      this.setAttribute('kind', kind);\n    }\n\n    this.handleKindAttributeChange(kind);\n  }\n\n  handleKindAttributeChange(_kind) {\n    let kind        = ('' + _kind).toLowerCase();\n    if (!Object.prototype.hasOwnProperty.call(KINDS, kind)) {\n      console.warn(`\"mythix-spinner\" unknown \"kind\" provided: \"${kind}\". Supported \"kind\" attribute values are: \"pipe\", \"audio\", \"circle\", \"puzzle\", \"wave\", and \"dot\".`);\n      kind = 'pipe';\n    }\n\n    this.changeSpinnerChildren(KINDS[kind]);\n  }\n\n  buildSpinnerChildren(count) {\n    let children      = new Array(count);\n    let ownerDocument = (this.ownerDocument || document);\n\n    for (let i = 0; i < count; i++) {\n      let element = ownerDocument.createElement('div');\n      element.setAttribute('class', 'spinner-item');\n\n      children[i] = element;\n    }\n\n    return this.select(children);\n  }\n\n  changeSpinnerChildren(count) {\n    this.select('.spinner-item').remove();\n    this.buildSpinnerChildren(count).appendTo(this.shadow);\n\n    // Always append style again, so\n    // that it is the last child, and\n    // doesn't mess with \"nth-child\"\n    // selectors\n    this.select('style').appendTo(this.shadow);\n  }\n}\n\nMythixUISpinner.register();\n\n(globalThis.mythixUI = (globalThis.mythixUI || {})).MythixUIRequire = MythixUISpinner;\n","globalThis.mythixUI = (globalThis.mythixUI || {});\nglobalThis.mythixUI.globalScope = (globalThis.mythixUI.globalScope || {});\n\nif (typeof document !== 'undefined' && !globalThis.mythixUI.globalScope.url)\n  globalThis.mythixUI.globalScope.url = new URL(document.location);\n\nimport * as Utils from './utils.js';\nimport * as Components from './components.js';\nimport * as Elements from './elements.js';\n\nexport * as BaseUtils from './base-utils.js';\nexport * as Utils from './utils.js';\n\nimport { DynamicProperty } from './dynamic-property.js';\nexport * from './query-engine.js';\nexport * as Components from './components.js';\nexport * as Elements from './elements.js';\nexport * from './mythix-ui-require.js';\nexport * from './mythix-ui-language-provider.js';\nexport * from './mythix-ui-spinner.js';\n\nconst MythixUIComponent = Components.MythixUIComponent;\n\nexport {\n  MythixUIComponent,\n  DynamicProperty,\n};\n\nlet _mythixIsReady = false;\nObject.defineProperties(globalThis, {\n  'onmythixready': {\n    enumerable:   false,\n    configurable: true,\n    get:          () => {\n      return null;\n    },\n    set:          (callback) => {\n      if (_mythixIsReady) {\n        Promise.resolve().then(() => callback(new Event('mythix-ready')));\n        return;\n      }\n\n      document.addEventListener('mythix-ready', callback);\n    },\n  },\n});\n\nglobalThis.mythixUI.Utils = Utils;\nglobalThis.mythixUI.Components = Components;\nglobalThis.mythixUI.Elements = Elements;\nglobalThis.mythixUI.globalScope.globalStore = Utils.globalStore;\nglobalThis.mythixUI.globalScope.globalStoreDynamic = Utils.globalStoreDynamic;\n\nglobalThis.mythixUI.globalScope.dynamicPropID = function(id) {\n  return Utils.dynamicPropID(id);\n};\n\nif (typeof document !== 'undefined') {\n  let didVisibilityObservers = false;\n\n  const onDocumentReady = () => {\n    if (!didVisibilityObservers) {\n      let elements = Array.from(document.querySelectorAll('[data-mythix-src]'));\n      Components.visibilityObserver(({ disconnect, element, wasVisible }) => {\n        if (wasVisible)\n          return;\n\n        disconnect();\n\n        let src = element.getAttribute('data-mythix-src');\n        if (!src)\n          return;\n\n        Components.loadPartialIntoElement.call(element, src).then(() => {\n          element.classList.add('mythix-ready');\n        });\n      }, { elements });\n\n      didVisibilityObservers = true;\n    }\n\n    document.body.classList.add('mythix-ready');\n\n    if (_mythixIsReady)\n      return;\n\n    _mythixIsReady = true;\n\n    document.dispatchEvent(new Event('mythix-ready'));\n  };\n\n  Object.defineProperties(globalThis, {\n    '$': {\n      writable:     true,\n      enumerable:   true,\n      configurable: true,\n      value:        (...args) => document.querySelector(...args),\n    },\n    '$$': {\n      writable:     true,\n      enumerable:   true,\n      configurable: true,\n      value:        (...args) => document.querySelectorAll(...args),\n    },\n  });\n\n  let documentMutationObserver = globalThis.mythixUI.documentMutationObserver = new MutationObserver((mutations) => {\n    let disableTemplateEngineSelectorStr = Utils.getDisableTemplateEngineSelector();\n    for (let i = 0, il = mutations.length; i < il; i++) {\n      let mutation  = mutations[i];\n      let target    = mutation.target;\n\n      if (mutation.type === 'attributes') {\n        if (disableTemplateEngineSelectorStr && target.parentNode && typeof target.parentNode.closest === 'function' && target.parentNode.closest(disableTemplateEngineSelectorStr))\n          continue;\n\n        let attributeNode = target.getAttributeNode(mutation.attributeName);\n        let newValue      = (attributeNode) ? attributeNode.nodeValue : null;\n        let oldValue      = mutation.oldValue;\n\n        if (oldValue === newValue)\n          continue;\n\n        if (newValue && Utils.isTemplate(newValue))\n          attributeNode.nodeValue = Utils.formatNodeValue(attributeNode, { scope: Utils.createScope(target), disallowHTML: true });\n\n        let observedAttributes = target.constructor.observedAttributes;\n        if (observedAttributes && observedAttributes.indexOf(mutation.attributeName) < 0) {\n          if (target[Components.isMythixComponent])\n            target.attributeChangedCallback.call(target, mutation.attributeName, oldValue, newValue);\n        }\n      } else if (mutation.type === 'childList') {\n        let disableTemplating = (disableTemplateEngineSelectorStr && target && typeof target.closest === 'function' && target.closest('[data-templates-disable],mythix-for-each'));\n        let addedNodes        = mutation.addedNodes;\n        for (let j = 0, jl = addedNodes.length; j < jl; j++) {\n          let node = addedNodes[j];\n\n          if (node[Components.isMythixComponent] && node.onMutationAdded.call(node, mutation) === false)\n            continue;\n\n          if (!disableTemplating)\n            Elements.processElements(node);\n\n          if (target[Components.isMythixComponent])\n            target.onMutationChildAdded(node, mutation);\n        }\n\n        let removedNodes = mutation.removedNodes;\n        for (let j = 0, jl = removedNodes.length; j < jl; j++) {\n          let node = removedNodes[j];\n          if (node[Components.isMythixComponent] && node.onMutationRemoved.call(node, mutation) === false)\n            continue;\n\n          if (target[Components.isMythixComponent])\n            target.onMutationChildRemoved(node, mutation);\n        }\n      }\n    }\n  });\n\n  documentMutationObserver.observe(document, {\n    subtree:            true,\n    childList:          true,\n    attributes:         true,\n    attributeOldValue:  true,\n  });\n\n  Elements.processElements(document.head);\n  Elements.processElements(document.body);\n\n  const DOCUMENT_CHECK_READY_TIME = 250;\n\n  setTimeout(() => {\n    if (document.readyState === 'complete')\n      onDocumentReady();\n    else\n      document.addEventListener('DOMContentLoaded', onDocumentReady);\n  }, DOCUMENT_CHECK_READY_TIME);\n\n  window.addEventListener('load', onDocumentReady);\n}\n"],"names":["isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","getKeys","keys","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","_","mergeObject","destination","forEach","key","hasOwnProperty","propertyIsUnsafe","customMerge","getMergeFunction","arrayMerge","sourceIsArray","all","array","Error","reduce","prev","next","deepmerge_1","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","r","toStringTag","MYTHIX_NAME_VALUE_PAIR_HELPER","MYTHIX_SHADOW_PARENT","MYTHIX_TYPE","MYTHIX_INTERSECTION_OBSERVERS","MYTHIX_DOCUMENT_INITIALIZED","DYNAMIC_PROPERTY_VALUE","DYNAMIC_PROPERTY_IS_SETTING","DYNAMIC_PROPERTY_SET","ELEMENT_DEFINITION_TYPE","QUERY_ENGINE_TYPE","DYNAMIC_PROPERTY_TYPE","MYTHIX_UI_COMPONENT_TYPE","UNFINISHED_DEFINITION","SHA256","_input","i","j","input","mathPow","Math","pow","maxWord","lengthProperty","result","words","asciiBitLength","hash","h","k","primeCounter","isComposite","candidate","charCodeAt","w","slice","oldHash","w15","w2","a","e","temp1","b","globalThis","mythixUI","ID_COUNT_LENGTH","IS_CLASS","NATIVE_CLASS_TYPES_META","typeName","meta","ID_COUNTER_CURRENT_VALUE","idCounter","generateID","BigInt","Date","now","str","count","char","padStart","pad","OBJECT_ID_STORAGE","OBJECT_ID_WEAKMAP","WeakMap","getObjectID","id","thisID","set","createResolvable","resolve","reject","status","promise","Promise","_resolve","_reject","defineProperties","writable","configurable","typeOf","is","NaN","Infinity","thisType","nativeTypeMeta","find","typeMeta","constructor","test","name","charAt","toUpperCase","substring","String","Number","Boolean","JSON","Atomics","Reflect","isPlainObject","isType","types","getInternalTypeName","type","valueType","internalType","isValidNumber","isFinite","isPrimitive","isCollectable","isNOE","length","isNotNOE","toCamelCase","replace","toLowerCase","m","p","f","l","toSnakeCase","offset","toKebabCase","nextTick","callback","process","requestAnimationFrame","then","IS_NUMBER","IS_BOOLEAN","coerce","parseFloat","DynamicProperty","EventTarget","hasInstance","instance","static","initialValue","super","this","valueOf","Proxy","propName","bind","toPrimitive","hint","_newValue","_options","newValue","oldValue","dispatchUpdateEvent","updateEvent","Event","originator","dispatchEvent","error","console","bindMethods","_proto","skipProtos","proto","alreadyVisited","Set","descriptors","getOwnPropertyDescriptors","il","has","add","descriptor","newDescriptor","getPrototypeOf","indexOf","getDescriptorFromPrototypeChain","startProto","descriptorName","thisProto","getOwnPropertyDescriptor","METADATA_STORAGE","METADATA_WEAKMAP","metadata","data","Map","arguments","VALID_JS_IDENTIFIER","RESERVED_IDENTIFIER","getParentNode","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","createScope","_targets","findPropNameScope","currentElement","searchParentNodesForKey","targets","firstElement","fallbackContext","globalScope","i18n","path","defaultValue","languageProvider","specialClosest","dynamicPropID","proxy","ownKeys","allKeys","getAllPropertyNames","from","scope","doSet","$$","EVENT_ACTION_JUST_NAME","createTemplateMacro","prefix","body","functionBody","trim","contextCallArgs","context","extraContexts","extraContext","join","getContextCallArgs","localScope","create","__macroSource","__expandedMacroSource","Function","parseTemplateParts","text","parts","currentOffset","addLiteral","startOffset","endOffset","push","start","end","parsedText","macro","NOOP","item","compileTemplateFromParts","part","some","FORMAT_TERM_ALLOWABLE_NODES","formatNodeValue","node","localName","nodeValue","TypeError","templateParts","bindToDynamicProperties","addEventListener","capture","disallowHTML","IS_TEMPLATE","isTemplate","IS_EVENT_NAME","EVENT_NAME_CACHE","getAllEventNamesForElement","tagName","cache","eventNames","bindEventToElement","eventName","_callback","fetchPath","split","currentValue","nextValue","TEXT_NODE","ATTRIBUTE_NODE","CACHED_PROPERTY_NAMES","SKIP_PROTOTYPES","HTMLElement","Element","_obj","cachedNames","names","objNames","getOwnPropertyNames","finalNames","LANG_PROVIDER_DYNAMIC_PROPERTY_CACHE","getDynamicPropertyForPath","keyPath","instanceCache","selector","currentNode","matches","sleep","ms","setTimeout","dynamicProp","setter","dynamicProperty","DYNAMIC_PROP_REGISTRY","setValue","globalStoreNameValuePairHelper","REGISTERED_DISABLE_TEMPLATE_SELECTORS","getDisableTemplateEngineSelector","registerDisableTemplateEngineSelector","unregisterDisableTemplateEngineSelector","delete","globalStoreHelper","dynamic","args","setOnGlobal","nameValuePair","getIdentifier","getAttribute","globalStore","globalStoreDynamic","StorageItem","_c","_u","_v","getValue","toJSON","$type","storage","_revive","_alreadyVisited","assign","entries","_raw","_getPartsForOperation","pathParts","parsedParts","storageType","storageEngine","rootData","encodedBase","getItem","parse","_getMeta","operation","parentScope","subScope","getMeta","setItem","stringify","IS_PROP_NAME","IS_TARGET_PROP","ElementDefinition","attributes","children","attrs","attributeName","toDOMAttributeName","encodeAttributeValue","child","elementTagStart","elementTagEnd","charCode","maskHTML","fromCharCode","wipeBlank","content","maskChildrenPattern","isVoidTag","build","ownerDocument","templateOptions","namespaceURI","processElements","createTextNode","createElementNS","isSVGElement","createElement","handleAttribute","_attributeValue","attributeValue","lowerAttributeName","modifiedAttributeName","setAttribute","handleProperty","propertyName","propertyValue","attributeNames","childElement","flat","appendChild","processEventCallbacks","IS_HTML_SAFE_CHARACTER","encodeValue","IS_VOID_TAG","isValidNodeType","queryTemplate","nameOrID","getElementById","querySelector","IS_TEMPLATE_MERGE_ELEMENT","_node","disableTemplateEngineSelector","forceTemplateEngine","childNodes","isTemplateEngineDisabled","helper","document","fragment","createDocumentFragment","elements","appendTo","textNode","ELEMENT_NODE","DOCUMENT_NODE","selectors","cloneNode","compileMergeFragment","getAttributeNames","removeAttribute","attributeNode","getAttributeNode","processChildren","childNode","replaceChild","hasChild","defaultAttributes","rootProxy","_children","wrangleChildren","getUnderlyingArray","nodeToElementDefinition","mergeChildren","others","targetIsTemplate","other","IS_SVG_ELEMENT_NAME","Term","ElementGenerator","$TEXT","IS_INTEGER","isElement","isSlotted","closest","isNotSlotted","QueryEngine","root","queryEngine","argIndex","base","getOptions","optionsRoot","getRootElement","querySelectorAll","invokeCallbacks","getEngineClass","filterAndConstructElements","_mythixUIElements","magicPropName","every","_mythixUIOptions","getContext","getRoot","getOwnerDocument","finalElements","_item","select","$","values","iterator","first","abs","last","subtract","on","off","removeEventListener","selectorOrElement","insertInto","referenceNode","insert","replaceChildrenOf","removeChild","remove","classList","classNames","collectClassNames","className","toggle","addClass","removeClass","toggleClass","slotted","yesNo","slot","slotName","isMythixComponent","IS_ATTR_METHOD_NAME","REGISTERED_COMPONENTS","MythixUIComponent","_name","_Klass","customElements","Klass","observedAttributes","compileAttributeMethods","define","registerEvent","componentName","component","setupAttributeHandlers","originalName","getter","hasSetter","hasGetter","attr","match","attr$dataMythixSrc","awaitFetchSrcOnVisible","onMutationAdded","onMutationRemoved","onMutationChildAdded","onMutationChildRemoved","TEMPLATE_ID","createShadowDOM","getComponentTemplate","injectStyleSheet","media","styleID","sensitiveTagName","styleElement","innerHTML","head","getChildrenAsFragment","noEmptyResult","hasContent","template","attachShadow","shadow","mode","templateID","appendExternalToShadowDOM","getProcessedTemplate","_template","getRawTemplate","appendTemplateTo","processedTemplate","appendTemplateToShadowDOM","connectedCallback","mounted","documentInitialized","disconnectedCallback","unmounted","newSrc","visibilityObserver","unobserve","observer","wasVisible","disconnect","fetchSrc","attributeChangedCallback","magicName","attributeChanged","adoptedCallback","adopted","shadowNodes","$build","isAttributeTruthy","hasAttribute","_context","dynamicData","debounce","timeMS","_id","stack","warn","delayTimers","timerID","clearTimeout","catch","async","clearDebounce","classes","_args","items","srcURL","loadPartialIntoElement","url","resolveURL","rootLocation","_urlish","urlish","URL","urlResolver","fileName","pathname","second","src","IS_SCRIPT","REQUIRE_CACHE","RESOLVE_SRC_ELEMENT","importIntoDocumentFromSource","location","_url","sourceString","magic","baseURL","origin","search","sort","x","y","guessedElementName","_m","fileNameToElementName","preProcess","nodeHandler","templateCount","sum","resolveElementSrcAttribute","isHandled","elementName","childClone","textContent","isScript","scriptID","isStyle","isLink","outerHTML","isMeta","langPackID","insertBefore","firstChild","postProcess","urlOrName","cacheKey","searchParams","cacheKeyURL","cachedResponse","response","ok","cached","fetch","fetchOptions","statusText","json","scopeData","threshold","IntersectionObserver","entry","isIntersecting","elementObservers","ratioVisible","intersectionRatio","previousVisibility","visibility","index","observe","NO_OBSERVER","freeze","getVisibilityMeta","getLargestDocumentTabIndex","largest","tabIndex","parseInt","TEMPLATE_TEMPLATE","MythixUIRequire","starTemplate","dataFor","starClone","MythixUILanguagePack","mutation","parentLanguageProvider","IS_JSON_ENCTYPE","MythixUILanguageProvider","attr$lang","loadAllLanguagePacksForLanguage","getCurrentLocale","_path","terms","getSourcesForLang","lang","_lang","sourceElements","sourceElement","loadAllLanguagePacks","promises","loadLanguagePack","allTerms","allSettled","compiledTerms","compileLanguageTerms","walkTerms","rawKeyPath","termsCopy","newKeyPath","register","KINDS","MythixUISpinner","attr$kind","handleKindAttributeChange","TEMPLATE","dataMythixName","prop$innerHTML","kind","_kind","changeSpinnerChildren","buildSpinnerChildren","_mythixIsReady","Utils","Components","Elements","didVisibilityObservers","onDocumentReady","documentMutationObserver","MutationObserver","mutations","disableTemplateEngineSelectorStr","disableTemplating","addedNodes","jl","removedNodes","subtree","childList","attributeOldValue","readyState","window"],"sourceRoot":""}