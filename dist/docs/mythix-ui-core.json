[{"groupID":"7e4a968fb82eff01ff8bbc79cbe4a29518f18bf153dfded25059c371fa73613f","groupName":"Utils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/utils.js","fileName":"utils.js","fileExtension":"js","type":"Namespace","name":"Utils","desc":"<p><code>import { Utils } from 'mythix-ui-core@1.0';</code></p>\n<p>Misc utility functions are found within this namespace.</p>","lineNumber":22,"exported":true,"repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/utils.js","id":"49c884aebfbc5600b80ab80f7bc0d8f8fb05cb56b98f760ae05005f4346f6d62"},{"groupID":"7e4a968fb82eff01ff8bbc79cbe4a29518f18bf153dfded25059c371fa73613f","groupName":"Utils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/utils.js","fileName":"utils.js","fileExtension":"js","desc":"<p>Store and retrieve metadata on any garbage-collectable reference.</p>\n<p>This function uses an internal <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\" rel=\"noopener noreferrer\" target=\"_blank\">WeakMap</a> to store metadata for any garbage-collectable value.</p>\n<p>The number of arguments provided will change the behavior of this function:</p>\n<ol>\n<li>If only one argument is supplied (a <code>target</code>), then a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" rel=\"noopener noreferrer\" target=\"_blank\">Map</a> of metadata key/value pairs is returned.</li>\n<li>If only two arguments are supplied, then <code>metadata</code> acts as a getter, and the value stored under the specified <code>key</code> is returned.</li>\n<li>If more than two arguments are supplied, then <code>metadata</code> acts as a setter, and <code>target</code> is returned (for continued chaining).</li>\n</ol>","arguments":[{"name":"target","dataType":"any","desc":"This is the value for which metadata is being stored or retrieved.\nThis can be any garbage-collectable value (any value that can be used as a key in a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\" rel=\"noopener noreferrer\" target=\"_blank\">WeakMap</a>).","type":"Argument","parent":"id:12479a8a6014daf5bb83b420d23e43892c29e1194fa8d5b27a48e3509786852e","searchable":false,"lineNumber":148,"dataTypes":["any"]},{"name":"key","dataType":"any","optional":true,"desc":"The key used to store or fetch the specified metadata value. This can be any value, as the underlying\nstorage is a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" rel=\"noopener noreferrer\" target=\"_blank\">Map</a>.","type":"Argument","parent":"id:12479a8a6014daf5bb83b420d23e43892c29e1194fa8d5b27a48e3509786852e","searchable":false,"lineNumber":148,"dataTypes":["any"]},{"name":"value","dataType":"any","optional":true,"desc":"The value to store on the <code>target</code> under the specified <code>key</code>.","type":"Argument","parent":"id:12479a8a6014daf5bb83b420d23e43892c29e1194fa8d5b27a48e3509786852e","searchable":false,"lineNumber":148,"dataTypes":["any"]}],"return":"<p><span class=\"data-type\">any</span></p>\n<ol>\n<li>If only one argument is provided (a bulk get operation), return a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" rel=\"noopener noreferrer\" target=\"_blank\">Map</a> containing the metadata for the specified <code>target</code>.</li>\n<li>If two arguments are provided (a get operation), the <code>target</code> metadata value stored for the specified <code>key</code>.</li>\n<li>If more than two arguments are provided (a set operation), the provided <code>target</code> is returned.</li>\n</ol>","examples":["<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Utils</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;mythix-ui-core@1.0&#x27;</span>;\n\n<span class=\"hljs-comment\">// set</span>\n<span class=\"hljs-title class_\">Utils</span>.<span class=\"hljs-title function_\">metadata</span>(myElement, <span class=\"hljs-string\">&#x27;customCaption&#x27;</span>, <span class=\"hljs-string\">&#x27;Metadata Caption!&#x27;</span>);\n\n<span class=\"hljs-comment\">// get</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">Utils</span>.<span class=\"hljs-title function_\">metadata</span>(myElement, <span class=\"hljs-string\">&#x27;customCaption&#x27;</span>));\n<span class=\"hljs-comment\">// output -&gt; &#x27;Metadata Caption!&#x27;</span>\n\n<span class=\"hljs-comment\">// get all</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">Utils</span>.<span class=\"hljs-title function_\">metadata</span>(myElement));\n<span class=\"hljs-comment\">// output -&gt; Map(1) { &#x27;customCaption&#x27; =&gt; &#x27;Metadata Caption!&#x27; }</span>\n</code></pre>"],"lineNumber":148,"exported":true,"type":"Function","name":"metadata","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/utils.js","id":"12479a8a6014daf5bb83b420d23e43892c29e1194fa8d5b27a48e3509786852e"},{"groupID":"7e4a968fb82eff01ff8bbc79cbe4a29518f18bf153dfded25059c371fa73613f","groupName":"Utils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/utils.js","fileName":"utils.js","fileExtension":"js","desc":"Get the parent <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a> of <code>element</code>.","arguments":[{"name":"element","dataType":"Node","desc":"The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a> whose parent you wish to find.","type":"Argument","parent":"id:a7801bb376e23e042737d573b77b7a76db6e7fc38c1e3abdd76e427c7b91069c","searchable":false,"lineNumber":211,"dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a>"]}],"notes":["⚠️ Unlike <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode\" rel=\"noopener noreferrer\" target=\"_blank\">Node.parentNode</a>, this\nwill also search across Shadow DOM boundaries.","⚠️ <strong>Searching across Shadow DOM boundaries only works for Mythix UI components!</strong>","ℹ️ Searching across Shadow DOM boundaries is accomplished via leveraging <a href=\"/?search=name%3AMythixUIComponent.metadata\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.metadata</code></a> on\n<code>element</code>. When a <code>null</code> parent is encountered, <code>getParentNode</code> will look for <a href=\"/?search=name%3AMythixUIComponent.metadata\" rel=\"noopener noreferrer\" target=\"_blank\"><code>metadata</code></a> key <a href=\"/?search=name%3AConstants.MYTHIX_SHADOW_PARENT\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Constants.MYTHIX_SHADOW_PARENT</code></a>\non <code>element</code>. If found, the result is considered the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode\" rel=\"noopener noreferrer\" target=\"_blank\">parent Node</a> of <code>element</code>."],"return":"<span class=\"data-type\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a></span> The parent node, if there is any, or <code>null</code> otherwise.","lineNumber":211,"exported":true,"type":"Function","name":"getParentNode","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/utils.js","id":"a7801bb376e23e042737d573b77b7a76db6e7fc38c1e3abdd76e427c7b91069c"},{"groupID":"7e4a968fb82eff01ff8bbc79cbe4a29518f18bf153dfded25059c371fa73613f","groupName":"Utils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/utils.js","fileName":"utils.js","fileExtension":"js","desc":"<p>Create a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a> that is essentially (functionally) a multi-prototype <code>object</code> instance.</p>\n<p>A \"scope\" in Mythix UI might be better called a \"context\"… however, \"scope\"\nwas chosen because it <em>is</em> a scope… or might be better described as \"multiple scopes in one\".\nThis is specifically a \"DOM scope\", in that this method is \"DOM aware\" and will traverse the\nDOM looking for the requested data (if any of the specified <code>targets</code> is an <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a> that is).</p>\n<p>The way this works is that the caller will provide at least one \"target\". These targets are\nthemselves scopes, elements, or other data objects. When the returned <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a> instance is accessed,\nthe requested key is searched in all provided <code>targets</code>, in the order they were provided.</p>\n<p>Aside from searching all targets for the desired key, it will also fallback to other data sources\nit searches in as well:</p>\n<ol>\n<li>If any given <code>target</code> it is searching is an <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a>, then it will also search\nfor the requested key on the element itself.</li>\n<li>If step #1 has failed, then move to the parent node of the current <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a> instance, and\nrepeat the process, starting from step #1.</li>\n<li>After steps 1-2 are repeated for every given <code>target</code> (and all parent nodes of those <code>targets</code>… if any),\nthen this method will finally fallback to searching <code>globalThis.mythixUI.globalScope</code> for the requested key.</li>\n</ol>\n<p>We aren't quite finished yet though…</p>\n<p>If steps 1-3 above all fail, then this method will still fallback to the fallowing hard-coded key/value pairs:</p>\n<ol>\n<li>A requested key of <code>'globalScope'</code> (if not found on a target) will result in <code>globalThis.mythixUI.globalScope</code> being returned.</li>\n<li>A requested key of <code>'i18n'</code> (if not found on a target) will result in the built-in <code>i18n</code> language term processor being returned.</li>\n<li>A requested key of <code>'dynamicPropID'</code> (if not found on a target) will result in the built-in <code>dynamicPropID</code> dynamic property provided. See <a href=\"/?search=name%3AUtils.dynamicPropID\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.dynamicPropID</code></a>.</li>\n</ol>\n<p>Finally, the returned <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a> will also intercept any value <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set\" rel=\"noopener noreferrer\" target=\"_blank\">set</a> operation,\nto set a value on the first target found.</p>\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a> also overloads <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/ownKeys\" rel=\"noopener noreferrer\" target=\"_blank\">ownKeys</a> to list <strong>all</strong> keys across <strong>all</strong> <code>targets</code>.</p>","arguments":[{"name":"...targets","dataTypes":["Object","<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a>","non-primitive"],"desc":"The <code>targets</code> to be searched, in the order provided. Targets are searched both for get operations, and set operations (the first target found will be the set target).","type":"Argument","parent":"id:492871c60e35317cc31663be282c32c4e3e6f90d8e6af5016d8aca225a1754d1","searchable":false,"lineNumber":283}],"notes":["⚠️ Mythix UI will deliberately never directly access <code>globalThis</code> from the template engine (for security reasons).\nBecause of this, Mythix UI automatically provides its own global scope <code>globalThis.mythixUI.globalScope</code>.\nIf you want data to be \"globally\" visible to Mythix UI, then you need to add your data to this special global scope.","ℹ️ This method is complex because it is intended to be used to provide a \"scope\" to the Mythix UI templating engine.\nThe templating engine needs to be DOM aware, and also needs to have access to specialized, scoped data\n(i.e. the <code>mythix-ui-for-each</code> component will publish scoped data for each iteration, which needs to be both\nDOM-aware, and iteration-aware).","ℹ️ Any provided <code>target</code> can also be one of these <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a> scopes returned by this method.","ℹ️ It can help to think of the returned \"scope\" as an plain Object that has an array of prototypes."],"return":"<span class=\"data-type\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a></span> A proxy instance, that is used to get and set keys across multiple <code>targets</code>.","lineNumber":283,"exported":true,"type":"Function","name":"createScope","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/utils.js","id":"492871c60e35317cc31663be282c32c4e3e6f90d8e6af5016d8aca225a1754d1"},{"groupID":"7e4a968fb82eff01ff8bbc79cbe4a29518f18bf153dfded25059c371fa73613f","groupName":"Utils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/utils.js","fileName":"utils.js","fileExtension":"js","desc":"<p>Create a context-aware function, or \"macro\", that can be called and used by the template engine.</p>\n<p>If you are ever trying to pass methods or dynamic properties across the DOM, then this is the method you want to use, to\nproperly \"parse\" and use the attribute value as intended.</p>\n<p>This is used for example for event bindings via attributes. If you have for example an <code>onclick=\"doSomething\"</code>\nattribute on an element, then this will be used to create a context-aware \"macro\" for the method \"doSomething\".</p>\n<p>The term \"macro\" is used here because there are special formats \"understood\" by the template engine. For example,\nprefixing an attribute value with a percent sign, i.e. <code>name=\"%globalDynamicPropName\"</code> will use <a href=\"/?search=name%3AUtils.dynamicPropID\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.dynamicPropID</code></a>\nto globally fetch property of this name. This is important, because due to the async nature of the DOM, you might\nbe requesting a dynamic property that hasn't yet been loaded/defined. This is the purpose of <a href=\"/?search=name%3AUtils.dynamicPropID\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.dynamicPropID</code></a>,\nand this specialized template format: to provide dynamic props by id, that will be available when needed.</p>\n<p>The template engine also will happily accept rogue method names. For example, in a Mythix UI component you are building,\nyou might have an element like <code>&lt;button onclick=\"onButtonClick\"&gt;Click Me!&lt;button&gt;</code>. The templating engine will detect that\nthis is ONLY an identifier, and so will search for the specified method in the available \"scope\" (see <a href=\"/?search=name%3AUtils.createScope\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.createScope</code></a>),\nwhich includes <code>this</code> instance of your component as the first <code>target</code>. This pattern is not required, as you can call your\ncomponent method directly yourself, as with any attribute event binding in the DOM, i.e: <code>&lt;button onclick=\"this.onButtonClick(event)\"&gt;Click Me!&lt;button&gt;</code>.</p>\n<p>One last thing to mention is that when these \"macro\" methods are called by Mythix UI, all enumerable keys of the generated\n\"scope\" (see <a href=\"/?search=name%3AUtils.createScope\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.createScope</code></a>) are passed into the macro method as arguments. This means that the keys/values of all scope <code>targets</code>\nare available directly in your javascript scope. i.e. you can do things like <code>name=\"componentInstanceProperty(thisAttribute1, otherAttribute)\"</code> without needing to do\n<code>name=\"this.componentInstanceProperty(this.thisAttribute1, this.otherAttribute)\"</code>. ⚠️ It is important to keep in mind that direct reference access like this in a macro\nwill bypass the \"scope\" (see <a href=\"/?search=name%3AUtils.createScope\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.createScope</code></a>) <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a>, and so if the specified key is not found (passed in as an argument to the macro), then an error will be thrown by javascript.</p>\n<p>It is absolutely possible for you to receive and send arguments via these generated \"macros\". <code>mythix-ui-search</code> does this for\nexample when a \"filter\" method is passed via an attribute. By default no extra arguments are provided when called directly by the templating engine.</p>","arguments":[{"name":"options","dataType":"object","desc":"<p>An object with the shape <code>{ body: string; prefix?: string; scope: object; }</code>.</p>\n<ol>\n<li><code>body</code> is the actual body of the <code>new Function</code>.</li>\n<li><code>scope</code> is the scope (<code>this</code>) that you want to bind to the resulting method.\nThis would generally be a scope created by <a href=\"/?search=name%3AUtils.createScope\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.createScope</code></a></li>\n<li><code>prefix</code> an optional prefix for the body of the <code>new Function</code>. This prefix is added\nbefore any function body code that Mythix UI generates.\nSee here <a class=\"source-control-link\" href=\"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/utils.js#L716\" target=\"_blank\"><span class=\"material-symbols-outlined\">arrow_outward</span></a> for an example use\nof <code>prefix</code> (notice how <code>arguments[1]</code> is used instead of <code>arguments[0]</code>, as <code>arguments[0]</code> is always reserved\nfor local variable names \"injected\" from the created \"scope\").</li>\n</ol>","type":"Argument","parent":"id:643eaa9385362675534da77834ce9246f34bef0a874f20e2397e99170462ccaf","searchable":false,"lineNumber":458,"dataTypes":["object"]}],"notes":["ℹ️ Aside for some behind-the-scene modifications and ease-of-use slickness, this essentially just creates a <code>new Function</code> and binds a \"scope\" (see <a href=\"/?search=name%3AUtils.createScope\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.createScope</code></a>) to it.","ℹ️ The provided (and optional) <code>prefix</code> can be used as the start of the macro <code>new Function</code> body code. i.e. <a href=\"/?search=name%3AUtils.bindEventToElement\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.bindEventToElement</code></a> does exactly this to allow direct scoped\naccess to the <code>event</code> instance. <a class=\"source-control-link\" href=\"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/utils.js#L716\" target=\"_blank\"><span class=\"material-symbols-outlined\">arrow_outward</span></a>","ℹ️ The return method is bound by calling <code>.bind(scope)</code>. It is not possible to modify <code>this</code> at the call-site."],"return":"<span class=\"data-type\">function</span> A function that is \"context aware\" by being bound to the provided <code>scope</code> (see <a href=\"/?search=name%3AUtils.createScope\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.createScope</code></a>).","lineNumber":458,"exported":true,"type":"Function","name":"createTemplateMacro","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/utils.js","id":"643eaa9385362675534da77834ce9246f34bef0a874f20e2397e99170462ccaf"},{"groupID":"7e4a968fb82eff01ff8bbc79cbe4a29518f18bf153dfded25059c371fa73613f","groupName":"Utils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/utils.js","fileName":"utils.js","fileExtension":"js","desc":"<p>Parse a template, and return its parts. A template \"part\" is one of two types: <code>'literal'</code>, or <code>'macro'</code>.</p>\n<p>Take for example the following template: <code>'Hello \\@@greeting@@!!!'</code>. This template would result in three \"parts\" after parsing:</p>\n<ol>\n<li><code>{ type: 'literal', source: 'Hello ', start: 0, end: 6 }</code></li>\n<li><code>{ type: 'macro', source: '\\@@greeting@@', macro: &lt;function&gt;, start: 6, end: 18 }</code></li>\n<li><code>{ type: 'literal', source: '!!!', start: 18, end: 21 }</code></li>\n</ol>\n<p>Concatenating all <code>source</code> properties together will result in the original input.\nConcatenating all <code>source</code> properties, along with the result of calling all <code>macro</code> functions, will result in the output (i.e. <code>part[0].source + part[1].macro() + part[2].source</code>).\nThe <code>macro</code> property is the actual macro function for the parsed template part (i.e. in our example <code>'\\@@greeting@@'</code>).\n<code>start</code> and <code>end</code> are the offsets from the original <code>text</code> where the part can be found.</p>","arguments":[{"name":"text","dataType":"string","desc":"The template string to parse.","type":"Argument","parent":"id:c2f78ec12893e1b1982f260531de4d2e3fdaf3d0246e179119a7092073ceee86","searchable":false,"lineNumber":517,"dataTypes":["string"]},{"name":"options","dataType":"object","desc":"Options for the operation. The shape of this object is <code>{ prefix?: string, scope: object }</code>.\n<code>scope</code> defines the scope for macros created by this method (see <a href=\"/?search=name%3AUtils.createScope\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.createScope</code></a>).\n<code>prefix</code> defines a function body prefix to use while creating macros (see <a href=\"/?search=name%3AUtils.createTemplateMacro\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.createTemplateMacro</code></a>).","type":"Argument","parent":"id:c2f78ec12893e1b1982f260531de4d2e3fdaf3d0246e179119a7092073ceee86","searchable":false,"lineNumber":517,"dataTypes":["object"]}],"notes":["ℹ️ To skip parsing a specific template part, prefix with a backslash, i.e. <code>\\\\\\\\@@greeting@@</code>."],"return":"<span class=\"data-type\">Array&lt;TemplatePart&gt;</span> <strong>TemplatePart</strong>: <code>{ type: 'literal' | 'macro', source: string, start: number, end: number, macro?: function }</code>. Return all parsed parts of the template.","lineNumber":517,"exported":true,"type":"Function","name":"parseTemplateParts","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/utils.js","id":"c2f78ec12893e1b1982f260531de4d2e3fdaf3d0246e179119a7092073ceee86"},{"groupID":"7e4a968fb82eff01ff8bbc79cbe4a29518f18bf153dfded25059c371fa73613f","groupName":"Utils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/utils.js","fileName":"utils.js","fileExtension":"js","desc":"<p>Compile the template parts that were parsed by <a href=\"/?search=name%3AUtils.parseTemplateParts\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.parseTemplateParts</code></a>.</p>\n<p>It is also possible to provide this method an array of <a href=\"/?search=name%3AElements.ElementDefinition\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Elements.ElementDefinition</code></a> instances,\nor <a href=\"/?search=name%3AQueryEngine.QueryEngine\" rel=\"noopener noreferrer\" target=\"_blank\"><code>QueryEngine.QueryEngine</code></a> instances (that contain <a href=\"/?search=name%3AElements.ElementDefinition\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Elements.ElementDefinition</code></a> instances).\nIf either of these types are found in the input array (even one), then the entire result is returned\nas a raw array.</p>\n<p>Or, if any of the resulting parts is <strong>not</strong> a <a href=\"/?search=name%3AUtils.parseTemplateParts\" rel=\"noopener noreferrer\" target=\"_blank\"><code>TemplatePart</code></a> or a <code>string</code>,\nthen return the resulting value raw.</p>\n<p>Otherwise, if all resulting parts are a <code>string</code>, then the resulting parts are joined, and a <code>string</code> is returned.</p>","arguments":[{"name":"parts","dataTypes":["Array<templatepart></templatepart>","Array<elementdefinition></elementdefinition>","Array<queryengine></queryengine>","Array<any></any>"],"desc":"The template parts to compile together.","type":"Argument","parent":"id:4ea1232012c0f7be78b84a32d4cbebff4d53f12436c244f65c192a62b8d494bb","searchable":false,"lineNumber":571}],"return":"<span class=\"data-type\">Array&lt;any&gt;</span> <span class=\"data-type\">string</span> Return the result as a string, or an array of raw values, or a raw value.","lineNumber":571,"exported":true,"type":"Function","name":"compileTemplateFromParts","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/utils.js","id":"4ea1232012c0f7be78b84a32d4cbebff4d53f12436c244f65c192a62b8d494bb"},{"groupID":"7e4a968fb82eff01ff8bbc79cbe4a29518f18bf153dfded25059c371fa73613f","groupName":"Utils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/utils.js","fileName":"utils.js","fileExtension":"js","desc":"<p>Given a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a>, take the <code>.nodeValue</code> of that node, and if it is a template,\nparse that template using <a href=\"/?search=name%3AUtils.parseTemplateParts\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.parseTemplateParts</code></a>, and then\ncompile that template using <a href=\"/?search=name%3AUtils.compileTemplateFromParts\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.compileTemplateFromParts</code></a>. The\nresulting template parts are then scanned. If any of the <code>macro()</code> calls\nresult in a <a href=\"/?search=name%3ADynamicProperty\" rel=\"noopener noreferrer\" target=\"_blank\"><code>DynamicProperty</code></a>, then set up\nlisteners via <code>addEventListener('update', ...)</code> on each to listen for\nchanges to dynamic properties. When a listener updates, the template parts\nare recompiled, and the <code>.nodeValue</code> is set again with the new result.</p>\n<p>In short, this method formats the value of a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a> if the value is a template,\nand in doing so binds to dynamic properties for future updates to this node.</p>\n<p>If the <code>.nodeValue</code> of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a> is detected to <strong>not</strong> be a template, then\nthe result is a no-operation, and the raw value of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a> is simply returned.</p>","arguments":[{"name":"node","dataType":"Node","desc":"The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a> whose value should be formatted. This must be a TEXT<em>NODE or a ATTRIBUTE</em>NODE.","type":"Argument","parent":"id:b887a1460d4e3858485d1e3485476ddd91ae89d584e3f2a9b77361a2847771a5","searchable":false,"lineNumber":632,"dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a>"]}],"return":"<span class=\"data-type\">string</span> The resulting node value. If a template was successfully compiled, dynamic properties\nare also listened to for future updates.","lineNumber":632,"exported":true,"type":"Function","name":"formatNodeValue","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/utils.js","id":"b887a1460d4e3858485d1e3485476ddd91ae89d584e3f2a9b77361a2847771a5"},{"groupID":"fda20a44585e1b9923901f820e52f310119e9b6a06a4663e7d0de67636fedd55","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/sha256.js","fileName":"sha256.js","fileExtension":"js","type":"Function","name":"SHA256","desc":"SHA256 hashing function","arguments":[{"name":"input","dataType":"string","desc":"Input string","type":"Argument","parent":"id:692bfe9148549b868d1bbf39e6a10875c49520a0c44e36c327732c987703ac75","searchable":false,"lineNumber":38,"dataTypes":["string"]}],"return":"<span class=\"data-type\">string</span> The SHA256 hash of the provided <code>input</code>.","notes":["⚠️ This is a custom baked SHA256 hashing function, minimized for size.\nIt may be incomplete, and it is strongly recommended that you <strong>DO NOT</strong> use this\nfor anything related to security.","⚠️ Read all the notes, and use this method with caution.","ℹ️ This method has been modified slightly from the original to <em>not</em> bail when\nunicode characters are detected. There is a decent chance that--given certain\ninput--this method will return an invalid SHA256 hash.\"","ℹ️ Mythix UI uses this method simply to generate consistent IDs.","❤️ Many thanks to the author <a href=\"https://github.com/geraintluff/sha256/\" rel=\"noopener noreferrer\" target=\"_blank\">Geraint Luff</a>\nfor this method!"],"lineNumber":38,"exported":true,"repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/sha256.js","id":"692bfe9148549b868d1bbf39e6a10875c49520a0c44e36c327732c987703ac75"},{"groupID":"c741771578f4d362fd88e67f1eb2a69eb920723d069e36ed3e8a21e354a6c657","groupName":"MythixElements","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-require.js","fileName":"mythix-ui-require.js","fileExtension":"js","type":"MythixElement","name":"MythixUIRequire","desc":"<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">MythixElements</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;mythix-ui-core@1.0&#x27;</span>;\n\n<span class=\"hljs-keyword\">const</span> {\n  <span class=\"hljs-title class_\">MythixUIRequire</span>,\n} = <span class=\"hljs-title class_\">MythixElements</span>;\n</code></pre>\n<p>MythixUIRequire is an <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a> that will load other resources. It is inspired by and named after <code>require</code> in <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a>. It works very similarly as well, so not too much needs to be explained about it.</p>\n<p>Except Mythix UI standard component file structure maybe… Yeah, maybe we should discuss that.</p>\n<p>The <code>&lt;mythix-require src=\"./components/widget.html\"&gt;</code> tag allows you to load other resources simply by specifying a path. This path can be relative, or absolute. The path can contain query parameters.</p>\n<p>You may have noticed that the tag name doesn't quite match the class name, <code>MythixUIRequire</code>, vs <code>&lt;mythix-require&gt;</code>. This deviation was chosen by the Mythix development team because Mythix is an entire ecosystem, not just a UI framework. For this reason, and in part to avoid future naming collisions, we have decided that in code, the class name should contain the <code>UI</code> part to delimit it from other Mythix technologies. Next, we felt constantly typing <code>&lt;mythix-ui-require&gt;</code> in HTML, vs the nicer <code>&lt;mythix-require&gt;</code> was kinda silly. Besides, in HTML, you ARE in the UI context, so why repeat ourselves? Anyhow, this is just a little note to keep in mind. The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a> class names do not match the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a> <code>tagName</code> for Mythix UI standard components.</p>\n<p>If <code>&lt;mythix-require&gt;</code> is used to fetch a JavaScript resource, then it behaves almost identically to a <code>&lt;script&gt;</code> tag. If however it is being used to fetch another type of known resource, such as text/html, then it will behave differently.</p>\n<p>When an HTML file is fetched by a <code>&lt;mythix-require&gt;</code> element, then any internal <code>&lt;script&gt;</code>, <code>&lt;style&gt;</code>, or other tag that belongs in the <code>&lt;head&gt;</code> tag will be placed in the <code>&lt;head&gt;</code> tag of the document. Duplicate inserts are prevented by use of tag ids. If a tag in the <code>&lt;head&gt;</code> of the document already has the same id as one MythixUIRequire is trying to insert, then MythixUIRequire will abort, and it won't duplicate inserting said element.</p>\n<p>Other elements are treated specially as well when encountered in the loaded HTML file. Below is a table of special cases:</p>\n<table>\n<thead>\n<tr>\n<th id=\"elements\">Elements</th>\n<th id=\"notes\">Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&lt;link&gt;</code>, <code>&lt;style&gt;</code>, <code>&lt;meta&gt;</code></td>\n<td>Are appended to the <code>&lt;head&gt;</code> of the document.</td>\n</tr>\n<tr>\n<td><code>&lt;script&gt;</code></td>\n<td>Is appended to the <code>&lt;head&gt;</code> of the document after the <code>src</code> attribute is fully resolved.</td>\n</tr>\n<tr>\n<td><code>&lt;template&gt;</code></td>\n<td>Is appended to the bottom of the <code>&lt;body&gt;</code> of the document.</td>\n</tr>\n<tr>\n<td><code>&lt;base&gt;</code>, <code>&lt;noscript&gt;</code>, <code>&lt;title&gt;</code></td>\n<td>Are deliberately discarded.</td>\n</tr>\n<tr>\n<td>All others</td>\n<td>Are appended to the <code>&lt;body&gt;</code> of the document.</td>\n</tr>\n</tbody>\n</table>","notes":["ℹ️ <code>globalThis.mythixUI.urlResolver: (context: { src: string | URL, url: URL, path: string, fileName: string }) =&gt; string | URL</code> is a method that can be defined by the user. When defined, it will be called every time <a href=\"/?search=name%3AComponentUtils.resolveURL\" rel=\"noopener noreferrer\" target=\"_blank\"><code>ComponentUtils.resolveURL</code></a> is called. <code>MythixUIRequire</code> calls <a href=\"/?search=name%3AComponentUtils.resolveURL\" rel=\"noopener noreferrer\" target=\"_blank\"><code>ComponentUtils.resolveURL</code></a> to resolve URLs, including in sub <code>&lt;script&gt;</code> tag <code>src</code> attributes loaded from resources. It is the intent of this method that it will globally resolve all URLs internal to the Mythix UI framework. Obviously it won't resolve URLs directly from static <code>import</code> or dynamic <code>import()</code> statements in JavaScript. Those are handled by the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap\" rel=\"noopener noreferrer\" target=\"_blank\">importmap</a> you setup, remember?."],"examples":["<p>Another component can be loaded dynamically--usually by loading its corresponding HTML file (which will generally then load the <code>&lt;script&gt;</code> require by the component). In the example below we are loading the standard modal component provided by Mythix UI:</p>\n<pre><code class=\"hljs html language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mythix-require</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;@cdn/mythix-ui-modal@1/dist/mythix-ui-modal.html&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mythix-require</span>&gt;</span>\n</code></pre>"],"lineNumber":52,"repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-require.js","id":"895fa8eae7362ce4747f6a07704c279c2449fc049f7243b0877f49cbec5dfe32"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","desc":"<p>This the base class of all Mythix UI components. It inherits\nfrom HTMLElement, and so will end up being a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Components\" rel=\"noopener noreferrer\" target=\"_blank\">Web Component</a>.</p>\n<p>It is strongly recommended that you fully read up and understand\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Components\" rel=\"noopener noreferrer\" target=\"_blank\">Web Components</a>\nif you don't already fully understand them. The core of Mythix UI is the\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Components\" rel=\"noopener noreferrer\" target=\"_blank\">Web Component</a> standard,\nso you might end up a little confused if you don't already understand the foundation.</p>","lineNumber":85,"exported":true,"type":"Class","name":"MythixUIComponent","extends":"HTMLElement","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"a45986ee3684b29d0bf8bd296455c38058c3b48ece13c5b46ccf0a5062ea0ebd"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","parent":"MythixUIComponent","desc":"Called when the component is added to the DOM.","arguments":[{"name":"mutationRecord","dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord\" rel=\"noopener noreferrer\" target=\"_blank\">MutationRecord</a>"],"desc":"The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord\" rel=\"noopener noreferrer\" target=\"_blank\">MutationRecord</a> instance that that caused this method to be called.","type":"Argument","parent":"id:0353639b27d86e8113f71538646261e809e199e9c928185a947b8eb1e85dfef3","searchable":false,"lineNumber":196}],"lineNumber":196,"type":"Function","name":"onMutationAdded","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"0353639b27d86e8113f71538646261e809e199e9c928185a947b8eb1e85dfef3"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","parent":"MythixUIComponent","desc":"Called when the component is removed from the DOM.","arguments":[{"name":"mutationRecord","dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord\" rel=\"noopener noreferrer\" target=\"_blank\">MutationRecord</a>"],"desc":"The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord\" rel=\"noopener noreferrer\" target=\"_blank\">MutationRecord</a> instance that that caused this method to be called.","type":"Argument","parent":"id:690e663ff8c376def002ab6edb155a2f4a5457bd6df3692710d9524930df7331","searchable":false,"lineNumber":209}],"lineNumber":209,"type":"Function","name":"onMutationRemoved","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"690e663ff8c376def002ab6edb155a2f4a5457bd6df3692710d9524930df7331"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","parent":"MythixUIComponent","desc":"Called when an element is added as a child.","arguments":[{"name":"node","dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a>"],"desc":"The child element being added.","type":"Argument","parent":"id:f71a3593d41cebba19e8422a23a935e1340a8b76f978febcdfa6416c3ac0b4d1","searchable":false,"lineNumber":226},{"name":"mutationRecord","dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord\" rel=\"noopener noreferrer\" target=\"_blank\">MutationRecord</a>"],"desc":"The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord\" rel=\"noopener noreferrer\" target=\"_blank\">MutationRecord</a> instance that that caused this method to be called.","type":"Argument","parent":"id:f71a3593d41cebba19e8422a23a935e1340a8b76f978febcdfa6416c3ac0b4d1","searchable":false,"lineNumber":226}],"lineNumber":226,"type":"Function","name":"onMutationChildAdded","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"f71a3593d41cebba19e8422a23a935e1340a8b76f978febcdfa6416c3ac0b4d1"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","parent":"MythixUIComponent","desc":"Called when a child element is removed.","arguments":[{"name":"node","dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a>"],"desc":"The child element being removed.","type":"Argument","parent":"id:2cee1d5bb15f47d34cd6839593d453987c659673bc0af941d51bde3de8aae7be","searchable":false,"lineNumber":243},{"name":"mutationRecord","dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord\" rel=\"noopener noreferrer\" target=\"_blank\">MutationRecord</a>"],"desc":"The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord\" rel=\"noopener noreferrer\" target=\"_blank\">MutationRecord</a> instance that that caused this method to be called.","type":"Argument","parent":"id:2cee1d5bb15f47d34cd6839593d453987c659673bc0af941d51bde3de8aae7be","searchable":false,"lineNumber":243}],"lineNumber":243,"type":"Function","name":"onMutationChildRemoved","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"2cee1d5bb15f47d34cd6839593d453987c659673bc0af941d51bde3de8aae7be"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","parent":"MythixUIComponent","desc":"<p>A convenience method for getting and setting attributes. If only one argument is provided\nto this method, then it will act as a getter, getting the attribute specified by name.</p>\n<p>If however two or more arguments are provided, then this is an attribute setter.</p>\n<p>If the provided value is <code>undefined</code>, <code>null</code>, or <code>false</code>, then the attribute will be\nremoved.</p>\n<p>If the provided value is <code>true</code>, then the attribute's value will be set to an empty string <code>''</code>.</p>\n<p>Any other value is converted to a string and set as the attribute's value.</p>","arguments":[{"name":"name","dataTypes":["string"],"desc":"The name of the attribute to operate on.","type":"Argument","parent":"id:6d24b6080fbe44002edada73da4fa627603433b99db98af6a3b8eca33ba50ee7","searchable":false,"lineNumber":340},{"name":"value","dataTypes":["any"],"desc":"If <code>undefined</code>, <code>null</code>, or <code>false</code>, remove the named attribute.\nIf <code>true</code>, set the named attribute's value to an empty string <code>''</code>.\nFor any other value, first convert it into a string, and then set the named attribute's value to the resulting string.","type":"Argument","parent":"id:6d24b6080fbe44002edada73da4fa627603433b99db98af6a3b8eca33ba50ee7","searchable":false,"lineNumber":340}],"return":"<ol>\n<li><span class=\"data-type\">string</span> If a single argument is provided, then return the value of the specified named attribute.</li>\n<li><span class=\"data-type\">this</span> If more than one argument is provided, then set the specified attribute to the specified value,\nand return <code>this</code> (to allow for chaining).</li>\n</ol>","lineNumber":340,"type":"Function","name":"attr","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"6d24b6080fbe44002edada73da4fa627603433b99db98af6a3b8eca33ba50ee7"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","parent":"MythixUIComponent","desc":"<p>Inject a new style sheet via a <code>&lt;style&gt;</code> element dynamically at run-time.</p>\n<p>This method allows the caller to inject dynamic styles at run-time.\nIt will only inject the styles once, no matter how many times the\nmethod is called--as long as the style content itself doesn't change.</p>\n<p>The content is hashed via SHA256, and the hash is used as the style sheet id. This\nallows you to call the method inside a component's <a href=\"/?search=name%3AMythixUIComponent.mounted\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.mounted</code></a>\nmethod, without needing to worry about duplicating the styles over and over again.</p>","arguments":[{"name":"content","dataTypes":["string"],"desc":"The CSS stylesheet content to inject into a <code>&lt;style&gt;</code> element. This content is\nused to generate an <code>id</code> for the <code>&lt;style&gt;</code> element, so that it only gets added\nto the <code>document</code> once.","type":"Argument","parent":"id:5129aefc17f546169683e0c2b88dec1788a47a1cb12ec00abd29487ba689b6c9","searchable":false,"lineNumber":411},{"name":"media","dataTypes":["string"],"default":"'screen'","optional":true,"desc":"What to set the <code>media</code> attribute of the created <code>&lt;style&gt;</code> element to. Defaults\nto <code>'screen'</code>.","type":"Argument","parent":"id:5129aefc17f546169683e0c2b88dec1788a47a1cb12ec00abd29487ba689b6c9","searchable":false,"lineNumber":411}],"notes":["⚠️ It is often better to simply add a <code>&lt;style&gt;</code> element to your component's HTML template.\nHowever, sometimes truly dynamic styles are needed, where the content won't be known\nuntil runtime. This is the proper use case for this method.","⚠️ Please educated yourself (unlike people who love React) and do not overuse dynamic or inline styles.\nWhile the result of this method is certainly a step above inline styles, this method has\n<a href=\"https://worldofdev.info/6-reasons-why-you-shouldnt-style-inline/\" rel=\"noopener noreferrer\" target=\"_blank\">great potential to cause harm</a>\nand spread your own ignorance to others. Use with <strong>CARE</strong>!"],"return":"<span class=\"data-type\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a></span> The <code>&lt;style&gt;</code> element for the specified style.","examples":["<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">MythixUIComponent</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;mythix-ui-core@1.0&#x27;</span>;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MyComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">MythixUIComponent</span> {\n  <span class=\"hljs-keyword\">static</span> tagName = <span class=\"hljs-string\">&#x27;my-component&#x27;</span>;\n\n  <span class=\"hljs-comment\">// ...</span>\n\n  <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">let</span> { sidebarWidth } = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">loadUserPreferences</span>();\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">injectStyleSheet</span>(<span class=\"hljs-string\">`nav.sidebar { width: <span class=\"hljs-subst\">${sidebarWidth}</span>px; }`</span>, <span class=\"hljs-string\">&#x27;screen&#x27;</span>);\n  }\n}\n\n<span class=\"hljs-title class_\">MyComponent</span>.<span class=\"hljs-title function_\">register</span>();\n</code></pre>"],"lineNumber":411,"type":"Function","name":"injectStyleSheet","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"5129aefc17f546169683e0c2b88dec1788a47a1cb12ec00abd29487ba689b6c9"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","parent":"MythixUIComponent","desc":"Get the parent <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a> of this element.","notes":["⚠️ Unlike <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode\" rel=\"noopener noreferrer\" target=\"_blank\">Node.parentNode</a>, this\nwill also search across Shadow DOM boundaries.","⚠️ <strong>Searching across Shadow DOM boundaries only works for Mythix UI components!</strong>","ℹ️ Searching across Shadow DOM boundaries is accomplished via leveraging <a href=\"/?search=name%3AMythixUIComponent.metadata\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.metadata</code></a> for\n<code>this</code> component. When a <code>null</code> parent is encountered, <code>getParentNode</code> will look for <a href=\"/?search=name%3AMythixUIComponent.metadata\" rel=\"noopener noreferrer\" target=\"_blank\"><code>metadata</code></a> key <a href=\"/?search=name%3AConstants.MYTHIX_SHADOW_PARENT\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Constants.MYTHIX_SHADOW_PARENT</code></a>\non <code>this</code>. If found, the result is considered the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node/parentNode\" rel=\"noopener noreferrer\" target=\"_blank\">parent Node</a> of <code>this</code> component.","👁️ This is just a wrapper for <a href=\"/?search=name%3AUtils.getParentNode\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.getParentNode</code></a>."],"return":"<span class=\"data-type\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a></span> The parent node, if there is any, or <code>null</code> otherwise.","lineNumber":484,"type":"Function","name":"getParentNode","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"a2eedacab2907c6ffa4371d040b5677e0396f636c3e465ad4f59969d46c6939a"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","parent":"MythixUIComponent","desc":"<p>This is a replacement for <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\" rel=\"noopener noreferrer\" target=\"_blank\">Element.attachShadow</a>\nwith one notable difference: It runs Mythix UI framework specific code after a shadow is attached.</p>\n<p>Currently, the method completes the following actions:</p>\n<ol>\n<li>Call <code>super.attachShadow(options)</code> to actually attach a Shadow DOM</li>\n<li>Assign <a href=\"/?search=name%3AMythixUIComponent.metadata\" rel=\"noopener noreferrer\" target=\"_blank\"><code>metadata</code></a> to the resulting <code>shadow</code>, using the key <code>Constants.MYTHIX_SHADOW_PARENT</code>, and value of <code>this</code>. <a class=\"source-control-link\" href=\"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js#L516\" target=\"_blank\"><span class=\"material-symbols-outlined\">arrow_outward</span></a> This allows <a href=\"/?search=name%3AgetParentNode\" rel=\"noopener noreferrer\" target=\"_blank\"><code>getParentNode</code></a> to later find the parent of the shadow.</li>\n<li><code>return shadow</code></li>\n</ol>","arguments":[{"name":"options","dataTypes":["object"],"desc":"<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#options\" rel=\"noopener noreferrer\" target=\"_blank\">options</a> for <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\" rel=\"noopener noreferrer\" target=\"_blank\">Element.attachShadow</a>","type":"Argument","parent":"id:31f98b60e927e85147fe1b7cd19425f411ed4e933ff339792cf95583762d288c","searchable":false,"lineNumber":510}],"notes":["This is just a wrapper for <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\" rel=\"noopener noreferrer\" target=\"_blank\">Element.attachShadow</a> that executes custom framework functionality after the <code>super</code> call."],"return":"<span class=\"data-type\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot\" rel=\"noopener noreferrer\" target=\"_blank\">ShadowRoot</a></span> The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot\" rel=\"noopener noreferrer\" target=\"_blank\">ShadowRoot</a> instance created by <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\" rel=\"noopener noreferrer\" target=\"_blank\">Element.attachShadow</a>.","lineNumber":510,"type":"Function","name":"attachShadow","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"31f98b60e927e85147fe1b7cd19425f411ed4e933ff339792cf95583762d288c"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","parent":"MythixUIComponent","desc":"<p>A stub for developers to control the Shadow DOM of the component.</p>\n<p>By default, this method will simply call <a href=\"/?search=name%3AMythixUIComponent.attachShadow\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.attachShadow</code></a> in <code>\"open\"</code> <code>mode</code>.</p>\n<p>Developers can overload this to do nothing (have no Shadow DOM for a specific component for example),\nor to do something else, such as specify they would like their component to be in <code>\"closed\"</code> <code>mode</code>.</p>\n<p>The result of this method is assigned to <code>this.shadow</code> inside the <code>constructor</code> of the component.</p>","arguments":[{"name":"options","dataTypes":["object"],"desc":"<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#options\" rel=\"noopener noreferrer\" target=\"_blank\">options</a> for <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\" rel=\"noopener noreferrer\" target=\"_blank\">Element.attachShadow</a>","type":"Argument","parent":"id:8e726a9c3c339a357733922932ea1981945d46f19040563d0ae3e6ababcfe4a2","searchable":false,"lineNumber":544}],"notes":["All this does is call <code>this.attachShadow</code>. Its purpose is for the developer to control what happens with the component's Shadow DOM."],"return":"<span class=\"data-type\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot\" rel=\"noopener noreferrer\" target=\"_blank\">ShadowRoot</a></span> The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot\" rel=\"noopener noreferrer\" target=\"_blank\">ShadowRoot</a> instance created by <a href=\"/?search=name%3AMythixUIComponent.attachShadow\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.attachShadow</code></a>.","lineNumber":544,"type":"Function","name":"createShadowDOM","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"8e726a9c3c339a357733922932ea1981945d46f19040563d0ae3e6ababcfe4a2"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","parent":"MythixUIComponent","desc":"<p>This method will dynamically build elements, or rather, <a href=\"/?search=name%3AElementDefinition\" rel=\"noopener noreferrer\" target=\"_blank\"><code>ElementDefinition</code></a> instances, that\ndefine elements to be created later. <a href=\"/?search=name%3AElementDefinition\" rel=\"noopener noreferrer\" target=\"_blank\"><code>ElementDefinition</code></a> instances are just that, a simple\nstructure that defines the name, attributes, and children of any given element.</p>\n<p>When these are inserted into a document, either through a <a href=\"/?search=name%3AQueryEngine\" rel=\"noopener noreferrer\" target=\"_blank\"><code>QueryEngine</code></a>, or directly by\ncalling <a href=\"/?search=name%3AElementDefinition.build\" rel=\"noopener noreferrer\" target=\"_blank\"><code>ElementDefinition.build</code></a> before insert, they are only at this point converted\ninto real <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\" rel=\"noopener noreferrer\" target=\"_blank\">Elements</a> and inserted\ninto the specified DOM (document) at the specified location.</p>","arguments":[{"name":"callback","dataTypes":["function"],"desc":"A callback that is immediately called and expected to return <a href=\"/?search=name%3AElementDefinition\" rel=\"noopener noreferrer\" target=\"_blank\"><code>ElementDefinition</code></a> instances.\nThe callback is called with only two arguments. The first arguments, <code>elements</code>, is a\n<a href=\"/?search=name%3AElementGenerator\" rel=\"noopener noreferrer\" target=\"_blank\"><code>ElementGenerator</code></a> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a> instance, that will properly generate any element definition requested.\nThe second argument, <code>context</code>, is simply an empty object provided to the callback, allowing the\ndeveloper to store contextual based information for the operation, if desired.","type":"Argument","parent":"id:ef3f9a1afe4a160490f5dc6bad121b14b50dc7827ef38c31ab0f9990a0e26bda","searchable":false,"lineNumber":824}],"return":"<ul>\n<li><span class=\"data-type\">ElementDefinition</span> A single <a href=\"/?search=name%3AElementDefinition\" rel=\"noopener noreferrer\" target=\"_blank\"><code>ElementDefinition</code></a> instance defining\nthe DOM to generate when inserted. Can be a <code>#fragment</code> element definition.</li>\n<li><span class=\"data-type\">Array&lt;ElementDefinition&gt;</span> An array of element definition instances\ndefining the DOM to generate when inserted.</li>\n<li><span class=\"data-type\">null</span> If nothing is returned, then no elements will be created.</li>\n</ul>","notes":["ℹ️ The difference between this method and <a href=\"/?search=name%3AMythixUIComponent.%24build\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.$build</code></a> method is\nthat this method will return <a href=\"/?search=name%3AElementDefinition\" rel=\"noopener noreferrer\" target=\"_blank\"><code>ElementDefinition</code></a> instances, whereas the\n<a href=\"/?search=name%3AMythixUIComponent.%24build\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.$build</code></a> method will return a <a href=\"/?search=name%3AQueryEngine\" rel=\"noopener noreferrer\" target=\"_blank\"><code>QueryEngine</code></a> instance containing\nall the built <a href=\"/?search=name%3AElementDefinition\" rel=\"noopener noreferrer\" target=\"_blank\"><code>ElementDefinition</code></a> instances."],"examples":["<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> {\n  <span class=\"hljs-title class_\">MythixUIComponent</span>,\n  <span class=\"hljs-title class_\">Utils</span>,\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cdn/mythix-ui-core@1&#x27;</span>; <span class=\"hljs-comment\">// ensure we lock this to whatever version is important to us</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">DemoNavComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">MythixUIComponent</span> {\n  <span class=\"hljs-keyword\">static</span> tagName = <span class=\"hljs-string\">&#x27;demo-nav-component&#x27;</span>; <span class=\"hljs-comment\">// a &quot;something-&quot; prefix is required</span>\n\n  <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) { <span class=\"hljs-comment\">// called whenever the component is added to another element</span>\n    <span class=\"hljs-keyword\">let</span> list = [\n      <span class=\"hljs-string\">&#x27;Test 1&#x27;</span>,\n      <span class=\"hljs-string\">&#x27;Test 2&#x27;</span>,\n      <span class=\"hljs-string\">&#x27;Lorem Ipsum&#x27;</span>,\n    ];\n\n    <span class=\"hljs-comment\">// Dynamically build and append some elements (with attributes and event bindings)</span>\n    <span class=\"hljs-keyword\">let</span> unorderedListElement = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">build</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ NAV, UL, LI, $TEXT }</span>) =&gt;</span> { <span class=\"hljs-comment\">// any element name can be requested here (even custom ones)</span>\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable constant_\">UL</span>.<span class=\"hljs-title function_\">id</span>(<span class=\"hljs-string\">&#x27;primary-list&#x27;</span>).<span class=\"hljs-title function_\">class</span>(<span class=\"hljs-string\">&#x27;interactive-list&#x27;</span>)(\n        <span class=\"hljs-comment\">// ...children of UL element</span>\n        ...list.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">item, index</span>) =&gt;</span> {\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable constant_\">LI</span>.<span class=\"hljs-title function_\">class</span>(<span class=\"hljs-string\">&#x27;item-name focusable&#x27;</span>).<span class=\"hljs-title function_\">dataIndex</span>(index).<span class=\"hljs-title function_\">onClick</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">onItemClick</span>)(\n            <span class=\"hljs-comment\">// ...children of LI element</span>\n            $TEXT(item),  <span class=\"hljs-comment\">// in this case, a single text node</span>\n          );\n        }),\n      );\n    });\n\n    <span class=\"hljs-comment\">// Create an append elements to this element</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">append</span>(\n      unorderedListElement.<span class=\"hljs-title function_\">build</span>(\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">ownerDocument</span>,\n        { <span class=\"hljs-attr\">scope</span>: <span class=\"hljs-title class_\">Utils</span>.<span class=\"hljs-title function_\">createScope</span>(<span class=\"hljs-variable language_\">this</span>) },\n      ),\n    );\n  }\n\n  <span class=\"hljs-comment\">// All class methods are automatically bound to &quot;this&quot; inside the super.constructor</span>\n  <span class=\"hljs-title function_\">onItemClick</span>(<span class=\"hljs-params\">event</span>) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;Item Clicked!&#x27;</span>, event.<span class=\"hljs-property\">target</span>);\n  }\n}\n\n<span class=\"hljs-title class_\">DemoNavComponent</span>.<span class=\"hljs-title function_\">register</span>();\n</code></pre>"],"lineNumber":824,"type":"Function","name":"build","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"ef3f9a1afe4a160490f5dc6bad121b14b50dc7827ef38c31ab0f9990a0e26bda"},{"groupID":"feccdc7ec31b8bf17d0f053c2c43c04495f56ee372cce5c9b76983cef7db5b45","groupName":"MythixUIComponent","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","fileName":"mythix-ui-component.js","fileExtension":"js","parent":"MythixUIComponent","desc":"A self-resetting timeout. This method expects an <code>id</code> argument (or will generate one from the provided\ncallback method if not provided). It uses this provided <code>id</code> to create a timeout. This timeout has a special feature\nhowever that differentiates it from a normal <code>setTimeout</code> call: if you call <code>this.debounce</code> again with the\nsame <code>id</code> <strong>before</strong> the time runs out, then it will automatically reset the timer. In short, only the last call\nto <code>this.debounce</code> (given the same id) will take effect (unless the specified timeout is reached between calls).","return":"<p>This method returns a specialized <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" rel=\"noopener noreferrer\" target=\"_blank\">Promise</a> instance. The instance is specialized because the following properties\nare injected into it:</p>\n<ol>\n<li><code>resolve(resultValue)</code> - When called, resolves the promise with the first provided argument</li>\n<li><code>reject(errorValue)</code> - When called, rejects the promise with the first provided argument</li>\n<li><code>status()</code> - When called, will return the fulfillment status of the promise, as a <code>string</code>, one of: <code>\"pending\", \"fulfilled\"</code>, or <code>\"rejected\"</code></li>\n<li><code>id&lt;string&gt;</code> - A randomly generated ID for this promise</li>\n</ol>\n<p>See <a href=\"/?search=name%3ABaseUtils.createResolvable\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.createResolvable</code></a></p>","arguments":[{"name":"callback","dataTypes":["function"],"desc":"The method to call when the timeout has been met.","type":"Argument","parent":"id:441c10b0dfb54d61e7808f2eafbf4e30c5cdfb54809b4d43da1338a052b5da37","searchable":false,"lineNumber":917},{"name":"timeMS","dataTypes":["number"],"optional":true,"default":0,"desc":"The number of milliseconds to wait before calling <code>callback</code>.","type":"Argument","parent":"id:441c10b0dfb54d61e7808f2eafbf4e30c5cdfb54809b4d43da1338a052b5da37","searchable":false,"lineNumber":917},{"name":"id","dataTypes":["string"],"optional":true,"default":"null","desc":"The identifier for this debounce timer. If not provided, then one\nwill be generated for you based on the provided callback.","type":"Argument","parent":"id:441c10b0dfb54d61e7808f2eafbf4e30c5cdfb54809b4d43da1338a052b5da37","searchable":false,"lineNumber":917}],"notes":["Though not required, it is faster and less problematic to provide your own <code>id</code> argument"],"lineNumber":917,"type":"Function","name":"debounce","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/mythix-ui-component.js","id":"441c10b0dfb54d61e7808f2eafbf4e30c5cdfb54809b4d43da1338a052b5da37"},{"groupID":"a7ba10dbfe06286620272bc4ec3777502ba7afc0e2edba538d9728f9850205e0","groupName":"Elements","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/elements.js","fileName":"elements.js","fileExtension":"js","type":"Namespace","name":"Elements","desc":"<p><code>import { Elements } from 'mythix-ui-core@1.0';</code></p>\n<p>Utility and element building functions for the DOM.</p>","lineNumber":23,"exported":true,"repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/elements.js","id":"6d9b8166db59f57c857d21d188ecd46b9c6b2f51d6bc03efead7d39c4bd5d28e"},{"groupID":"a7ba10dbfe06286620272bc4ec3777502ba7afc0e2edba538d9728f9850205e0","groupName":"Elements","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/elements.js","fileName":"elements.js","fileExtension":"js","parent":"Elements","desc":"<p>Almost like <code>Object.assign</code>, merge all component children into a single node (the <code>target</code>).</p>\n<p>This is \"template intelligent\", meaning for <code>&lt;template&gt;</code> elements specifically, it will execute\n<code>children = template.content.cloneNode(true).childNodes</code> to clone all the child nodes, and not\nmodify the original template. It is also template intelligent by the fact that if the <code>target</code> is\na template, it will add the children to <code>content</code> properly.</p>","arguments":[{"name":"target","dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a>"],"desc":"The target <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a> to merge all children into. If this <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a> is a <code>&lt;template&gt;</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a>, then it will\nplace all the merged children into <code>template.content</code>.","type":"Argument","parent":"id:8d1cad9edec30d1e7b7c421ebd82dc8693ea226802addb708bbef33b63c9fdff","searchable":false,"lineNumber":541}],"notes":["Any template <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a> will be cloned, and so the original will not be modified. All other nodes are <strong>NOT</strong> cloned before the merge, and so will be stripped of their children.","Make certain you deep clone any element first (except templates) if you don't want the provided elements to be modified."],"return":"<span class=\"data-type\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a></span> The provided <code>target</code>, with all children merged (added) into it.","lineNumber":541,"exported":true,"type":"Function","name":"mergeChildren","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/elements.js","id":"8d1cad9edec30d1e7b7c421ebd82dc8693ea226802addb708bbef33b63c9fdff"},{"groupID":"2f8893311ed7fcf3916798113162b5c063bbcf99dbe4e2ca1db1fe4bea9a69a5","groupName":"DynamicProperty","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/dynamic-property.js","fileName":"dynamic-property.js","fileExtension":"js","desc":"<p><code>DynamicProperty</code> is a simple value storage class wrapped in a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a>.</p>\n<p>It will allow the user to store any desired value. The catch however is that\n any value stored can only be set through its special <code>set</code> method.</p>\n<p>This will allow any listeners to receive the <code>'update'</code> event when a value is set.</p>\n<p>Since <code>DynamicProperty</code> instances are also always wrapped in a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a>, the user may\n \"directly\" access attributes of the stored value. For example, if a <code>DynamicProperty</code>\n is storing an Array instance, then one would be able to access the <code>.length</code> property\n \"directly\", i.e. <code>dynamicProp.length</code>.</p>\n<p><code>DynamicProperty</code> has a special <code>set</code> method, whose name is a <code>symbol</code>, to avoid conflicting\n namespaces with the underlying datatype (and the wrapping <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a>).\n To set a value on a <code>DynamicProperty</code> instance, one must do so as follows: <code>dynamicProperty[DynamicProperty.set](myNewValue)</code>.\n This will update the internal value, and if the set value differs from the stored value, the <code>'update'</code> event will be dispatched to\n any listeners.</p>\n<p>As <code>DynamicProperty</code> is an <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/EventTarget\" rel=\"noopener noreferrer\" target=\"_blank\">EventTarget</a>, one can attach\n event listeners to the <code>'update'</code> event to listen for updates to the underlying value. The <code>'update'</code> event is the only event that is\n ever triggered by this class. The received <code>event</code> instance in event callbacks will have the following attributes:</p>\n<ol>\n<li><p><code>updateEvent.originator = this;</code> - <code>originator</code> is the instance of the <code>DynamicProperty</code> where the event originated from.</p></li>\n<li><p><code>updateEvent.oldValue = currentValue;</code> - <code>oldValue</code> contains the previous value of the <code>DynamicProperty</code> before set.</p></li>\n<li><p><code>updateEvent.value = newValue;</code> - <code>value</code> contains the current value being set on the <code>DynamicProperty</code>.</p>\n<p>To retrieve the underlying raw value of a <code>DynamicProperty</code>, one may call <code>valueOf()</code>: <code>let rawValue = dynamicProperty.valueOf();</code></p></li>\n</ol>","notes":["⚠️ <code>DynamicProperty</code> instances will internally track when a <code>set</code> operation is underway, to prevent\ncyclic sets and maximum call stack errors. You are allowed to set the value recursively, however <code>update</code> events\nwill only be dispatched for the first <code>set</code> call. Any <code>set</code> operation that happens while another <code>set</code> operation is\nunderway will <strong>not</strong> dispatch any <code>'update'</code> events.","<code>'update'</code> events will be dispatched immediately <em>after</em> the internal underlying stored value is updated. Though it is\npossible to <code>stopImmediatePropagation</code> in an event callback, attempting to \"preventDefault\" or \"stopPropagation\" will do nothing."],"examples":["<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">DynamicProperty</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;mythix-ui-core@1.0&#x27;</span>;\n\n<span class=\"hljs-keyword\">let</span> dynamicProperty = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">DynamicProperty</span>(<span class=\"hljs-string\">&#x27;initial value&#x27;</span>);\n\ndynamicProperty.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;update&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">event</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Dynamic Property Updated! New value = &#x27;<span class=\"hljs-subst\">${event.value}</span>&#x27;, Previous Value = &#x27;<span class=\"hljs-subst\">${event.oldValue}</span>&#x27;`</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Current Value = &#x27;<span class=\"hljs-subst\">${dynamicProperty.valueOf()}</span>&#x27;`</span>);\n});\n\ndynamicProperty[<span class=\"hljs-title class_\">DynamicProperty</span>.<span class=\"hljs-property\">set</span>](<span class=\"hljs-string\">&#x27;new value&#x27;</span>);\n\n<span class=\"hljs-comment\">// output -&gt; Dynamic Property Updated! New value = &#x27;new value&#x27;, Old Value = &#x27;initial value&#x27;</span>\n<span class=\"hljs-comment\">// output -&gt; Current Value = &#x27;initial value&#x27;</span>\n</code></pre>"],"lineNumber":69,"exported":true,"type":"Class","name":"DynamicProperty","extends":"EventTarget","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/dynamic-property.js","id":"2b5c77ea344ecd025a4d498dfb65f9598f74ee98374b51781e0e6dcf2664ad45"},{"groupID":"2f8893311ed7fcf3916798113162b5c063bbcf99dbe4e2ca1db1fe4bea9a69a5","groupName":"DynamicProperty","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/dynamic-property.js","fileName":"dynamic-property.js","fileExtension":"js","type":"Property","name":"set","parent":"DynamicProperty","static":true,"desc":"A special <code>symbol</code> used to access the <code>set</code> method of a <code>DynamicProperty</code>.","examples":["<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">DynamicProperty</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;mythix-ui-core@1.0&#x27;</span>;\n\n<span class=\"hljs-keyword\">let</span> dynamicProperty = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">DynamicProperty</span>(<span class=\"hljs-string\">&#x27;initial value&#x27;</span>);\n\ndynamicProperty.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;update&#x27;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">event</span>) =&gt;</span> {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Dynamic Property Updated! New value = &#x27;<span class=\"hljs-subst\">${event.value}</span>&#x27;, Previous Value = &#x27;<span class=\"hljs-subst\">${event.oldValue}</span>&#x27;`</span>);\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Current Value = &#x27;<span class=\"hljs-subst\">${dynamicProperty.valueOf()}</span>&#x27;`</span>);\n});\n\ndynamicProperty[<span class=\"hljs-title class_\">DynamicProperty</span>.<span class=\"hljs-property\">set</span>](<span class=\"hljs-string\">&#x27;new value&#x27;</span>);\n\n<span class=\"hljs-comment\">// output -&gt; Dynamic Property Updated! New value = &#x27;new value&#x27;, Old Value = &#x27;initial value&#x27;</span>\n<span class=\"hljs-comment\">// output -&gt; Current Value = &#x27;initial value&#x27;</span>\n</code></pre>"],"lineNumber":104,"repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/dynamic-property.js","id":"94ec3b48719e7d1fc6ae6dac0a4b50e8590994df60f83c37d6beead243fa9253"},{"groupID":"2f8893311ed7fcf3916798113162b5c063bbcf99dbe4e2ca1db1fe4bea9a69a5","groupName":"DynamicProperty","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/dynamic-property.js","fileName":"dynamic-property.js","fileExtension":"js","type":"Function","name":"constructor","parent":"Utils","desc":"Construct a <code>DynamicProperty</code>.","arguments":[{"name":"initialValue","dataType":"any","desc":"The initial value to store.","type":"Argument","parent":"id:6f8485a85ffb91e413ddb9ff34eac6912ab8b89f61a39047806d477a544516e2","searchable":false,"lineNumber":126,"dataTypes":["any"]}],"notes":["ℹ️ This will return a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\" rel=\"noopener noreferrer\" target=\"_blank\">Proxy</a> instance wrapping the <code>DynamicProperty</code> instance.","ℹ️ You can not set a <code>DynamicProperty</code> to another <code>DynamicProperty</code> instance.\nIf <code>initialValue</code> is a <code>DynamicProperty</code> instance, it will use the stored value\nof that instance instead (by calling <a href=\"/?search=name%3ADynamicProperty.valueOf\" rel=\"noopener noreferrer\" target=\"_blank\"><code>DynamicProperty.valueOf</code></a>)."],"lineNumber":126,"repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/dynamic-property.js","id":"6f8485a85ffb91e413ddb9ff34eac6912ab8b89f61a39047806d477a544516e2"},{"groupID":"2f8893311ed7fcf3916798113162b5c063bbcf99dbe4e2ca1db1fe4bea9a69a5","groupName":"DynamicProperty","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/dynamic-property.js","fileName":"dynamic-property.js","fileExtension":"js","type":"Function","parent":"DynamicProperty","desc":"Fetch the underlying raw value stored by this <code>DynamicProperty</code>.","return":"@types: any; The underling raw value.","lineNumber":196,"name":"valueOf","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/dynamic-property.js","id":"dd2a91d22bb134ce77b75b806fd708f7d7a53612347d4b1d4f215ef389fbc36b"},{"groupID":"2f8893311ed7fcf3916798113162b5c063bbcf99dbe4e2ca1db1fe4bea9a69a5","groupName":"DynamicProperty","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/dynamic-property.js","fileName":"dynamic-property.js","fileExtension":"js","type":"Function","name":"[DynamicProperty.set]","parent":"DynamicProperty","desc":"<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\" rel=\"noopener noreferrer\" target=\"_blank\">Set</a> the underlying raw value stored by this <code>DynamicProperty</code>.</p>\n<p>If the current stored value is exactly the same as the provided <code>value</code>,\nthen this method will simply return.</p>\n<p>Otherwise, when the underlying value is updated, <code>this.dispatchEvent</code> will\nbe called to dispatch an <code>'update'</code> event to notify all listeners that the\nunderlying value has been changed.</p>","arguments":[{"name":"newValue","dataType":"any","desc":"The new value to set. If this is itself a <code>DynamicProperty</code> instance, then\nit will be unwrapped to its underlying value, and that will be used as the value instead.","type":"Argument","parent":"id:0d543954f47c325a5963f7d6ae64b762c058f5cc8af6d351055ae1ef5e921b6d","searchable":false,"lineNumber":241,"dataTypes":["any"]},{"name":"options","optional":true,"dataType":"object","desc":"An object to provided options for the operation. The shape of this object is <code>{ dispatchUpdateEvent: boolean }</code>.\nIf <code>options.dispatchUpdateEvent</code> equals <code>false</code>, then no <code>'update'</code> event will be dispatched to listeners.","type":"Argument","parent":"id:0d543954f47c325a5963f7d6ae64b762c058f5cc8af6d351055ae1ef5e921b6d","searchable":false,"lineNumber":241,"dataTypes":["object"]}],"notes":["ℹ️ If the underlying stored value is exactly the same as the value provided,\nthen nothing will happen, and the method will simply return.","ℹ️ The underlying value is updated <em>before</em> dispatching events.","ℹ️ <code>DynamicProperty</code> protects against cyclic event callbacks. If an\nevent callback again sets the underlying <code>DynamicProperty</code> value, then\nthe value will be set, but no event will be dispatched (to prevent event loops).","ℹ️ You can not set a <code>DynamicProperty</code> to another <code>DynamicProperty</code> instance.\nIf this method receives a <code>DynamicProperty</code> instance, it will use the stored value\nof that instance instead (by calling <a href=\"/?search=name%3ADynamicProperty.valueOf\" rel=\"noopener noreferrer\" target=\"_blank\"><code>DynamicProperty.valueOf</code></a>)."],"lineNumber":241,"repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/dynamic-property.js","id":"0d543954f47c325a5963f7d6ae64b762c058f5cc8af6d351055ae1ef5e921b6d"},{"groupID":"f1d7788d4c052a9a6f0a4eed32ef2e7232bac9458292e1f32fd800b1eb460047","groupName":"Constants","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/constants.js","fileName":"constants.js","fileExtension":"js","type":"Namespace","name":"Constants","desc":"<p><code>import { Constants } from 'mythix-ui-core@1.0';</code></p>\n<p>Misc global constants are found within this namespace.</p>","lineNumber":65,"repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/constants.js","id":"734092caeb134c8254fae7291f08b1b248bea2965fe55974f6e27a3185d2542f"},{"groupID":"149d8250e5c1865031aaf4961bb578300d00c924a61bedab4fddd99a150e7470","groupName":"ComponentUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/component-utils.js","fileName":"component-utils.js","fileExtension":"js","type":"Namespace","name":"ComponentUtils","desc":"<p><code>import { ComponentUtils } from 'mythix-ui-core@1.0';</code></p>\n<p>Component and framework classes and functionality are found here.</p>","lineNumber":18,"exported":true,"repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/component-utils.js","id":"4e28944d68cdc7d3f7c15b23b68f17cb3d805f756500004e58b659f0617ba737"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","type":"Namespace","name":"BaseUtils","desc":"<p><code>import { BaseUtils } from 'mythix-ui-core@1.0';</code></p>\n<p>Misc utility functions and global constants are found within this namespace.</p>","lineNumber":18,"repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"8bcf7997581f015681f25fff006c5ff1079198d71865dcff2a84bf59adcba2e3"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"Generate a partially random unique ID. The id generated will be a <code>Date.now()</code>\nvalue with an incrementing <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\" rel=\"noopener noreferrer\" target=\"_blank\">BigInt</a> postfixed to it.","return":"<span class=\"data-type\">string</span> A unique ID.","examples":["<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">BaseUtils</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;mythix-ui-core@1.0&#x27;</span>;\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;ID: &#x27;</span>, <span class=\"hljs-title class_\">BaseUtils</span>.<span class=\"hljs-title function_\">generateID</span>());\n<span class=\"hljs-comment\">// output -&gt; &#x27;ID17041430271790000000000000000007&#x27;</span>\n</code></pre>"],"lineNumber":93,"exported":true,"type":"Function","name":"generateID","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"01b43d9eae5ada47b4054166480afb19e29b33816bbf68d265c17c9ea9818929"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Get a unique ID for any garbage-collectable reference.</p>\n<p>Unique IDs are generated via <a href=\"/?search=name%3ABaseUtils.generateID\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.generateID</code></a>.</p>","arguments":[{"name":"value","dataType":"any","desc":"Any garbage-collectable reference.","type":"Argument","parent":"id:ed51a3adf503f6a7f9cb3400e65b4ab276c63f046fcea5297971a2288a20cfa3","searchable":false,"lineNumber":124,"dataTypes":["any"]}],"return":"<span class=\"data-type\">string</span> A unique ID for this reference (as a SHA256 hash).","examples":["<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">BaseUtils</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;mythix-ui-core@1.0&#x27;</span>;\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">BaseUtils</span>.<span class=\"hljs-title function_\">getObjectID</span>(divElement));\n<span class=\"hljs-comment\">// output -&gt; &#x27;17041430271790000000000000000007&#x27;</span>\n</code></pre>"],"lineNumber":124,"exported":true,"type":"Function","name":"getObjectID","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"ed51a3adf503f6a7f9cb3400e65b4ab276c63f046fcea5297971a2288a20cfa3"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Create an unresolved specialized <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" rel=\"noopener noreferrer\" target=\"_blank\">Promise</a> instance, with the intent that it will be\nresolved later.</p>\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" rel=\"noopener noreferrer\" target=\"_blank\">Promise</a> instance is specialized because the following properties are injected into it:</p>\n<ol>\n<li><code>resolve(resultValue)</code> - When called, resolves the promise with the first provided argument</li>\n<li><code>reject(errorValue)</code> - When called, rejects the promise with the first provided argument</li>\n<li><code>status()</code> - When called, will return the fulfillment status of the promise, as a <code>string</code>, one of: <code>\"pending\", \"fulfilled\"</code>, or <code>\"rejected\"</code></li>\n<li><code>id&lt;string&gt;</code> - A randomly generated ID for this promise</li>\n</ol>","return":"<span class=\"data-type\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" rel=\"noopener noreferrer\" target=\"_blank\">Promise</a></span> An unresolved <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" rel=\"noopener noreferrer\" target=\"_blank\">Promise</a> that can be resolved or rejected by calling <code>promise.resolve(result)</code> or <code>promise.reject(error)</code> respectively.","lineNumber":151,"exported":true,"type":"Function","name":"createResolvable","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"993642d5fae19c8227be512f2dc2f36da1fe82a86f59e0566cb93e773b3ec9d0"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Runtime type reflection helper. This is intended to be a more robust replacement for the <code>typeof</code> operator.</p>\n<p>This method always returns a name (as a <code>string</code> type) of the underlying datatype.\nThe \"datatype\" is a little loose for primitive types. For example, a\nprimitive <code>typeof x === 'number'</code> type is returned as its corresponding Object (class) type <code>'Number'</code>. For <code>boolean</code> it will instead\nreturn <code>'Boolean'</code>, and for <code>'string'</code>, it will instead return <code>'String'</code>. This is true of all underlying primitive types.</p>\n<p>For internal datatypes, it will return the real class name prefixed by two colons.\nFor example, <code>typeOf(new Map())</code> will return <code>'::Map'</code>.</p>\n<p>Non-internal types will not be prefixed, allowing custom types with the same name as internal types to also be detected.\nFor example, <code>class Test {}; typeOf(new Test())</code> will result in the non-prefixed result <code>'Test'</code>.</p>\n<p>For raw <code>function</code> types, <code>typeOf</code> will check if they are a constructor or not. If a constructor is detected, then\nthe format <code>'[Class ${name}]'</code> will be returned as the type. For internal types the name will\nbe prefixed, i.e. <code>[Class ::${internalName}]</code>, and for non-internal types will instead be non-prefixed, i.e. <code>[Class ${name}]</code> .\nFor example, <code>typeOf(Map)</code> will return <code>'[Class ::Map]'</code>, whereas <code>typeOf(Test)</code> will result in <code>'[Class Test]'</code>.</p>","arguments":[{"name":"value","dataType":"any","desc":"The value whose type you wish to discover.","type":"Argument","parent":"id:0542f54d0b7e117970ec06156c4e2376ea6555d17af302f49277377f87b0b745","searchable":false,"lineNumber":238,"dataTypes":["any"]}],"return":"<span class=\"data-type\">string</span> The name of the provided type, or an empty string <code>''</code> if the provided value has no type.","notes":["This method will look for a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag\" rel=\"noopener noreferrer\" target=\"_blank\">Symbol.toStringTag</a> key on the value provided… and if found, will use it to assist with finding the correct type name.","If the <code>value</code> provided is type-less, i.e. <code>undefined</code>, <code>null</code>, or <code>NaN</code>, then an empty type <code>''</code> will be returned.","Use the <code>typeof</code> operator if you want to detect if a type is primitive or not."],"lineNumber":238,"exported":true,"type":"Function","name":"typeOf","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"0542f54d0b7e117970ec06156c4e2376ea6555d17af302f49277377f87b0b745"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Runtime type reflection helper. This is intended to be a more robust replacement for the <code>instanceof</code> operator.</p>\n<p>This method will return <code>true</code> if the provided <code>value</code> is <em>any</em> of the provided <code>types</code>.</p>\n<p>The provided <code>types</code> can each either be a real raw type (i.e. <code>String</code> class), or the name of a type, as a string,\ni.e. <code>'::String'</code>.</p>","arguments":[{"name":"value","dataType":"any","desc":"The value whose type you wish to compare.","type":"Argument","parent":"id:caa5b2ed2a711f35f74f2f64268746b65cbd27389657bfd50c0d460b33f745a1","searchable":false,"lineNumber":338,"dataTypes":["any"]},{"name":"...types","dataType":"Array<any>","desc":"All types you wish to check against. String values compare types by name, function values compare types by <code>instanceof</code>.","type":"Argument","parent":"id:caa5b2ed2a711f35f74f2f64268746b65cbd27389657bfd50c0d460b33f745a1","searchable":false,"lineNumber":338,"dataTypes":["Array<any></any>"]}],"return":"<p><span class=\"data-type\">boolean</span></p>\n<ol>\n<li>Return <code>true</code> if <code>value</code> matches any of the provided <code>types</code>.</li>\n<li>Otherwise, <code>false</code> is returned.</li>\n</ol>","notes":["👁️ <a href=\"/?search=name%3ABaseUtils.typeOf\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.typeOf</code></a>."],"lineNumber":338,"exported":true,"type":"Function","name":"isType","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"caa5b2ed2a711f35f74f2f64268746b65cbd27389657bfd50c0d460b33f745a1"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"Verify that the provided <code>value</code> is a <code>number</code> type (or <code>Number</code> instance), and that\nit <strong>is not</strong> <code>NaN</code>, <code>Infinity</code>, or <code>-Infinity</code>.","arguments":[{"name":"value","dataType":"any","desc":"Value to check","type":"Argument","parent":"id:be70f9459181bcbb551906ecb1e006437bab8a85668dbff2fd7de9f7ed974f0a","searchable":false,"lineNumber":385,"dataTypes":["any"]}],"return":"<p><span class=\"data-type\">boolean</span></p>\n<ol>\n<li>Return <code>true</code> if <code>value</code> is a <code>number</code> (or <code>Number</code> instance) and is also <strong>not</strong> <code>NaN</code>, <code>Infinity</code>, or <code>-Infinity</code>. i.e. <code>(isNumber(value) &amp;&amp; isFinite(value))</code>.</li>\n<li>Otherwise, <code>false</code> is returned.</li>\n</ol>","notes":["👁️ <a href=\"/?search=name%3ABaseUtils.typeOf\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.typeOf</code></a>.","👁️ <a href=\"/?search=name%3ABaseUtils.isType\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.isType</code></a>."],"lineNumber":385,"exported":true,"type":"Function","name":"isValidNumber","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"be70f9459181bcbb551906ecb1e006437bab8a85668dbff2fd7de9f7ed974f0a"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Verify that the provided <code>value</code> is a \"plain\"/\"vanilla\" Object instance.</p>\n<p>This method is intended to help the caller detect if an object is a \"raw plain object\",\ninheriting from <code>Object.prototype</code> (or a <code>null</code> prototype).</p>\n<ol>\n<li><code>isPlainObject({})</code> will return <code>true</code>.</li>\n<li><code>isPlainObject(new Object())</code> will return <code>true</code>.</li>\n<li><code>isPlainObject(Object.create(null))</code> will return <code>true</code>.</li>\n<li><code>isPlainObject(new CustomClass())</code> will return <code>false</code>.</li>\n<li>All other invocations should return <code>false</code>.</li>\n</ol>","arguments":[{"name":"value","dataType":"any","desc":"Value to check","type":"Argument","parent":"id:7019128d8e348c2a6fc60ca4d59d0e399573687748fdd82bc36b7eee2babd8b7","searchable":false,"lineNumber":416,"dataTypes":["any"]}],"return":"<p><span class=\"data-type\">boolean</span></p>\n<ol>\n<li>Return <code>true</code> if <code>value</code> is a \"raw\"/\"plain\" Object instance.</li>\n<li>Otherwise, <code>false</code> is returned.</li>\n</ol>","notes":["👁️ <a href=\"/?search=name%3ABaseUtils.typeOf\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.typeOf</code></a>.","👁️ <a href=\"/?search=name%3ABaseUtils.isType\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.isType</code></a>."],"lineNumber":416,"exported":true,"type":"Function","name":"isPlainObject","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"7019128d8e348c2a6fc60ca4d59d0e399573687748fdd82bc36b7eee2babd8b7"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"Detect if the provided <code>value</code> is a javascript primitive type.","arguments":[{"name":"value","dataType":"any","desc":"Value to check","type":"Argument","parent":"id:a89fcf82178571d250135e2eec35083bc958dfb17bd57cff5f53763375394845","searchable":false,"lineNumber":448,"dataTypes":["any"]}],"return":"<p><span class=\"data-type\">boolean</span></p>\n<ol>\n<li>Return <code>true</code> if <code>typeof value</code> is one of: <code>string</code>, <code>number</code>, <code>boolean</code>, <code>bigint</code>, or <code>symbol</code>,\n<em>and also</em> <code>value</code> is <em>not</em> <code>NaN</code>, <code>Infinity</code>, <code>-Infinity</code>, <code>undefined</code>, or <code>null</code>.</li>\n<li>Otherwise, <code>false</code> is returned.</li>\n</ol>","notes":["👁️ <a href=\"/?search=name%3ABaseUtils.typeOf\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.typeOf</code></a>.","👁️ <a href=\"/?search=name%3ABaseUtils.isType\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.isType</code></a>."],"lineNumber":448,"exported":true,"type":"Function","name":"isPrimitive","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"a89fcf82178571d250135e2eec35083bc958dfb17bd57cff5f53763375394845"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Detect if the provided <code>value</code> is garbage collectable.</p>\n<p>This method is used to check if any <code>value</code> is allowed to be used as a weak reference.</p>\n<p>Essentially, this will return <code>false</code> for any primitive type, or <code>null</code>, <code>undefined</code>, <code>NaN</code>, <code>Infinity</code>, or <code>-Infinity</code> values.</p>","arguments":[{"name":"value","dataType":"any","desc":"Value to check","type":"Argument","parent":"id:e0ff3b5ee1ad7f0da91ec2ae411304c0b57bb8f7788a84ff27b1fabcdca0b619","searchable":false,"lineNumber":484,"dataTypes":["any"]}],"return":"<p><span class=\"data-type\">boolean</span></p>\n<ol>\n<li>Return <code>true</code> if <code>typeof value</code> is one of: <code>string</code>, <code>number</code>, <code>boolean</code>, <code>bigint</code>, or <code>symbol</code>,\n<em>and also</em> <code>value</code> <em>is not</em> <code>NaN</code>, <code>Infinity</code>, <code>-Infinity</code>, <code>undefined</code>, or <code>null</code>.</li>\n<li>Otherwise, <code>false</code> is returned.</li>\n</ol>","notes":["👁️ <a href=\"/?search=name%3ABaseUtils.typeOf\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.typeOf</code></a>.","👁️ <a href=\"/?search=name%3ABaseUtils.isType\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.isType</code></a>."],"lineNumber":484,"exported":true,"type":"Function","name":"isCollectable","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"e0ff3b5ee1ad7f0da91ec2ae411304c0b57bb8f7788a84ff27b1fabcdca0b619"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Detect if the provided <code>value</code> is \"empty\" (is <strong>N</strong>ull <strong>O</strong>r <strong>E</strong>mpty).</p>\n<p>A value is considered \"empty\" if any of the following conditions is met:</p>\n<ol>\n<li><code>value</code> is <code>undefined</code>.</li>\n<li><code>value</code> is <code>null</code>.</li>\n<li><code>value</code> is <code>''</code> (an empty string).</li>\n<li><code>value</code> is not an empty string, but it contains nothing except whitespace (<code>\\t</code>, <code>\\r</code>, <code>\\s</code>, or <code>\\n</code>).</li>\n<li><code>value</code> is <code>NaN</code>.</li>\n<li><code>value.length</code> is a <code>Number</code> or <code>number</code> type, and is equal to <code>0</code>.</li>\n<li><code>value</code> is a <a href=\"/?search=name%3ABaseUtils.isPlainObject\" rel=\"noopener noreferrer\" target=\"_blank\"><code>plain object</code></a> and has no iterable keys.</li>\n</ol>","arguments":[{"name":"value","dataType":"any","desc":"Value to check","type":"Argument","parent":"id:b98463b78cd11efabe68fbfae841aa9613b5c07b5d8eb06ceb7a86c3e9577ec5","searchable":false,"lineNumber":522,"dataTypes":["any"]}],"return":"<p><span class=\"data-type\">boolean</span></p>\n<ol>\n<li>Return <code>true</code> if any of the \"empty\" conditions above are true.</li>\n<li>Otherwise, <code>false</code> is returned.</li>\n</ol>","notes":["👁️ <a href=\"/?search=name%3ABaseUtils.isNotNOE\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.isNotNOE</code></a>."],"lineNumber":522,"exported":true,"type":"Function","name":"isNOE","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"b98463b78cd11efabe68fbfae841aa9613b5c07b5d8eb06ceb7a86c3e9577ec5"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Detect if the provided <code>value</code> is <strong>not</strong> \"empty\" (is not <strong>N</strong>ull <strong>O</strong>r <strong>E</strong>mpty).</p>\n<p>A value is considered \"empty\" if any of the following conditions is met:</p>\n<ol>\n<li><code>value</code> is <code>undefined</code>.</li>\n<li><code>value</code> is <code>null</code>.</li>\n<li><code>value</code> is <code>''</code> (an empty string).</li>\n<li><code>value</code> is not an empty string, but it contains nothing except whitespace (<code>\\t</code>, <code>\\r</code>, <code>\\s</code>, or <code>\\n</code>).</li>\n<li><code>value</code> is <code>NaN</code>.</li>\n<li><code>value.length</code> is a <code>Number</code> or <code>number</code> type, and is equal to <code>0</code>.</li>\n<li><code>value</code> is a <a href=\"/?search=name%3ABaseUtils.isPlainObject\" rel=\"noopener noreferrer\" target=\"_blank\"><code>plain object</code></a> and has no iterable keys.</li>\n</ol>","arguments":[{"name":"value","dataType":"any","desc":"Value to check","type":"Argument","parent":"id:ade461ad1ae8fee9dabacea821ebbd5c6e7077d1d911dc10295ee77d16fc0993","searchable":false,"lineNumber":571,"dataTypes":["any"]}],"return":"<p><span class=\"data-type\">boolean</span></p>\n<ol>\n<li>Return <code>false</code> if any of the \"empty\" conditions above are true.</li>\n<li>Otherwise, <code>true</code> is returned.</li>\n</ol>","notes":["ℹ️ This is the exact inverse of <a href=\"/?search=name%3ABaseUtils.isNOE\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.isNOE</code></a>","👁️ <a href=\"/?search=name%3ABaseUtils.isNOE\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.isNOE</code></a>."],"lineNumber":571,"exported":true,"type":"Function","name":"isNotNOE","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"ade461ad1ae8fee9dabacea821ebbd5c6e7077d1d911dc10295ee77d16fc0993"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Convert the provided <code>string</code> <code>value</code> into <a href=\"https://en.wikipedia.org/wiki/Letter_case#Camel_case\" rel=\"noopener noreferrer\" target=\"_blank\">camelCase</a>.</p>\n<p>The process is roughly as follows:</p>\n<ol>\n<li>Any non-word characters ([a-zA-Z0-9_]) are stripped from the beginning of the string.</li>\n<li>Any non-word characters ([a-zA-Z0-9_]) are stripped from the end of the string.</li>\n<li>Each \"word\" is capitalized.</li>\n<li>The first letter is always lower-cased.</li>\n</ol>","arguments":[{"name":"value","dataType":"string","desc":"String to convert into <a href=\"https://en.wikipedia.org/wiki/Letter_case#Camel_case\" rel=\"noopener noreferrer\" target=\"_blank\">camelCase</a>.","type":"Argument","parent":"id:c16b733f71a97363c462d9c61726dadbbae322c0d159f2e125150dfb8b56cfb1","searchable":false,"lineNumber":600,"dataTypes":["string"]}],"return":"<span class=\"data-type\">string</span> The formatted string in <a href=\"https://en.wikipedia.org/wiki/Letter_case#Camel_case\" rel=\"noopener noreferrer\" target=\"_blank\">camelCase</a>.","examples":["<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">BaseUtils</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;mythix-ui-core@1.0&#x27;</span>;\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">BaseUtils</span>.<span class=\"hljs-title function_\">toCamelCase</span>(<span class=\"hljs-string\">&#x27;--test-some_value_@&#x27;</span>));\n<span class=\"hljs-comment\">// output -&gt; &#x27;testSomeValue&#x27;</span>\n</code></pre>"],"lineNumber":600,"exported":true,"type":"Function","name":"toCamelCase","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"c16b733f71a97363c462d9c61726dadbbae322c0d159f2e125150dfb8b56cfb1"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Convert the provided <code>string</code> <code>value</code> into <a href=\"https://en.wikipedia.org/wiki/Letter_case#Snake_case\" rel=\"noopener noreferrer\" target=\"_blank\">snake_case</a>.</p>\n<p>The process is roughly as follows:</p>\n<ol>\n<li>Any capitalized character sequence is prefixed by an underscore.</li>\n<li>More than one sequential underscores are converted into a single underscore.</li>\n</ol>","arguments":[{"name":"value","dataType":"string","desc":"String to convert into <a href=\"https://en.wikipedia.org/wiki/Letter_case#Snake_case\" rel=\"noopener noreferrer\" target=\"_blank\">snake_case</a>.","type":"Argument","parent":"id:79dee53436eaafbacafb5e5dd250f7575cdcb6a3b999f7019c8c09457a1c5d42","searchable":false,"lineNumber":635,"dataTypes":["string"]}],"return":"<span class=\"data-type\">string</span> The formatted string in <a href=\"https://en.wikipedia.org/wiki/Letter_case#Snake_case\" rel=\"noopener noreferrer\" target=\"_blank\">snake_case</a>.","examples":["<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">BaseUtils</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;mythix-ui-core@1.0&#x27;</span>;\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">BaseUtils</span>.<span class=\"hljs-title function_\">toSnakeCase</span>(<span class=\"hljs-string\">&#x27;ThisIsASentence&#x27;</span>));\n<span class=\"hljs-comment\">// output -&gt; &#x27;this_is_a_sentence&#x27;</span>\n</code></pre>"],"lineNumber":635,"exported":true,"type":"Function","name":"toSnakeCase","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"79dee53436eaafbacafb5e5dd250f7575cdcb6a3b999f7019c8c09457a1c5d42"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Convert the provided <code>string</code> <code>value</code> into <a href=\"https://en.wikipedia.org/wiki/Letter_case#Kebab_case\" rel=\"noopener noreferrer\" target=\"_blank\">kebab-case</a>.</p>\n<p>The process is roughly as follows:</p>\n<ol>\n<li>Any capitalized character sequence is prefixed by a hyphen.</li>\n<li>More than one sequential hyphens are converted into a single hyphen.</li>\n</ol>","arguments":[{"name":"value","dataType":"string","desc":"String to turn into <a href=\"https://en.wikipedia.org/wiki/Letter_case#Kebab_case\" rel=\"noopener noreferrer\" target=\"_blank\">kebab-case</a>.","type":"Argument","parent":"id:92ecb18a72c72a19281b8ac0b5e5d5a75e7c97ce7f4d1ae89bb6ead4725194dd","searchable":false,"lineNumber":665,"dataTypes":["string"]}],"return":"<span class=\"data-type\">string</span> The formatted string in <a href=\"https://en.wikipedia.org/wiki/Letter_case#Kebab_case\" rel=\"noopener noreferrer\" target=\"_blank\">kebab-case</a>.","examples":["<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">BaseUtils</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;mythix-ui-core@1.0&#x27;</span>;\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">BaseUtils</span>.<span class=\"hljs-title function_\">toKebabCase</span>(<span class=\"hljs-string\">&#x27;ThisIsASentence&#x27;</span>));\n<span class=\"hljs-comment\">// output -&gt; &#x27;this-is-a-sentence&#x27;</span>\n</code></pre>"],"lineNumber":665,"exported":true,"type":"Function","name":"toKebabCase","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"92ecb18a72c72a19281b8ac0b5e5d5a75e7c97ce7f4d1ae89bb6ead4725194dd"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Do our best to emulate <a href=\"https://nodejs.org/en/guides/event-loop-timers-and-nexttick/#processnexttick\" rel=\"noopener noreferrer\" target=\"_blank\">process.nextTick</a>\nin the browser.</p>\n<p>In order to try and emulate <code>process.nextTick</code>, this function will use <code>globalThis.requestAnimationFrame(() =&gt; callback())</code> if available,\notherwise it will fallback to using <code>Promise.resolve().then(callback)</code>.</p>","arguments":[{"name":"callback","dataType":"function","desc":"Callback function to call on \"nextTick\".","type":"Argument","parent":"id:816cad652b1d5894aa1e8734a19e9d7fb24444f5bf0d00fa8d83469df64f454f","searchable":false,"lineNumber":702,"dataTypes":["function"]}],"notes":["ℹ️ This function will prefer and use <code>process.nextTick</code> if it is available (i.e. if running on NodeJS).","⚠️ This function is unlikely to actually be the next \"tick\" of the underlying\njavascript engine. This method just does its best to emulate \"nextTick\". Instead of the\nactual \"next tick\", this will instead be \"as fast as possible\".","ℹ️ This function deliberately attempts to use <code>requestAnimationFrame</code> first--even though it likely doesn't\nhave the fastest turn-around-time--to save battery power. The idea being that \"something needs to be done <em>soon</em>\"."],"lineNumber":702,"exported":true,"type":"Function","name":"nextTick","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"816cad652b1d5894aa1e8734a19e9d7fb24444f5bf0d00fa8d83469df64f454f"},{"groupID":"8d91c3365a15a89938f1ac406e762768caaed0497376615cd17667a34f4ca518","groupName":"BaseUtils","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/lib","fullFileName":"/home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","fileName":"base-utils.js","fileExtension":"js","desc":"<p>Coerce a string to its most likely underlying primitive type.</p>\n<p>Conversion input and output table:</p>\n<ul>\n<li><code>'null'</code> converts to <code>null</code></li>\n<li><code>'undefined'</code> converts to <code>undefined</code></li>\n<li><code>'NaN'</code> converts to <code>NaN</code></li>\n<li><code>'Infinity'</code> converts to <code>Infinity</code></li>\n<li><code>'-Infinity'</code> converts to <code>-Infinity</code></li>\n<li><code>'true'</code> converts to <code>true</code></li>\n<li><code>'false'</code> converts to <code>false</code></li>\n<li>Any parsable numeric string value (including <a href=\"https://en.wikipedia.org/wiki/Scientific_notation#E_notation\" rel=\"noopener noreferrer\" target=\"_blank\">E notation</a>) converts to <code>number</code></li>\n</ul>","arguments":[{"name":"value","dataType":"string","desc":"Value to convert.","type":"Argument","parent":"id:23a2adfcdb6f16d8741bcf85c3483dc87712e15ba268627f17c5a9ddefeac692","searchable":false,"lineNumber":741,"dataTypes":["string"]}],"lineNumber":741,"exported":true,"type":"Function","name":"coerce","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/base-utils.js","id":"23a2adfcdb6f16d8741bcf85c3483dc87712e15ba268627f17c5a9ddefeac692"},{"groupID":"698708033fff81eadd040647c1dc6dd76d140b40af58a83ce0348caa08339ca0","groupName":"web-component-oddities.md","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/docs","fullFileName":"/home/wyatt/Projects/mythix-ui-core/docs/web-component-oddities.md.yaml","fileName":"web-component-oddities.md.yaml","fileExtension":"md.yaml","order":"A4","name":"Web Component Oddities","desc":"<p>Hopefully you did yourself a favor and have already read up on <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Components\" rel=\"noopener noreferrer\" target=\"_blank\">Web Components</a> and their quirks. If not, then you are in good hands, because we are discussing that now.</p>\n<p>First, let's discuss the elephant in the room, the <code>constructor</code>. The <code>constructor</code> of a Web Component behaves oddly compared to other classes. Inside the <code>constructor</code> you will not have access to the elements attributes or children, and are disallowed from modifying the attributes or children.</p>\n<p>Now at first, you might be like \"Whhaaa?\" 🤔 like I was, until you understand the reason beyond this oddity. The reasons for these oddities are best stated <a href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#custom-element-conformance\" rel=\"noopener noreferrer\" target=\"_blank\">here on the specification itself</a>: Basically, the primary reason is that the DOM may be parsed <em>before</em> your custom element is loaded and registered. So the DOM engine needs to <code>construct</code> elements, but not <em>fully</em>, not until all JavaScript for the DOM has loaded. In short, the browser may need to \"promote\" your element later on, after the JavaScript for your element has been loaded and registered as a component (and also after the element has already been constructed).</p>\n<p>The second most important thing to know about Web Components is their <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_shadow_DOM\" rel=\"noopener noreferrer\" target=\"_blank\">Shadow DOM</a>. The Shadow DOM is like a completely separate document, but just for a single node of the DOM. If your component uses a Shadow DOM (which is entirely optional), then it is <strong>very</strong> important to know that it will have specialized behavior that you won't expect:</p>\n<ol>\n<li>It is not always possible (and often difficult) to apply CSS from external sources, such as globally, through your <code>document</code>.</li>\n<li>It is not always possible to bridge the gap into a component's Shadow DOM JavaScript (it is possible to make a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/mode\" rel=\"noopener noreferrer\" target=\"_blank\">closed Shadow DOM</a>).</li>\n<li>Another poorly engineered side-effect of the Shadow DOM is that it will also not have access to ANY of the resources from its parent <code>document</code>. This means for example if you have an icon pack loaded, or a font, then you are out of luck! It won't work in your Shadow DOM… at least not without a little mythical Mythix magic 😉. Any <code>&lt;script&gt;</code>, <code>&lt;link&gt;</code>, or <code>&lt;style&gt;</code> tag in the <code>&lt;head&gt;</code> of your document that has a <code>data-auto-merge</code> attribute that contains a comma separated list of selectors. Any component that matches the defined selectors will automatically be have such tags added to their template on insert. This helps if you have a font, or icon pack that you would like to share across all components for your site, even third party components.</li>\n<li>The CSS selectors for Shadow DOM can be a little strange until you get used to them. I suggest you get familiar with them now: <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:host\" rel=\"noopener noreferrer\" target=\"_blank\">:host</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:host_function\" rel=\"noopener noreferrer\" target=\"_blank\">:host()</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/:host-context\" rel=\"noopener noreferrer\" target=\"_blank\">:host-context()</a>. The <code>:host</code> selectors match against the owner of the Shadow DOM in question (called the \"host\"). The <code>:host-context()</code> selector matches on external context outside of the \"host\", i.e. the <code>body</code>, parents, or other external features of the document.</li>\n<li>Only the styles applied inside the Shadow DOM are applied to the Shadow DOM (excepting <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\" rel=\"noopener noreferrer\" target=\"_blank\">parts</a>). This means your <code>&lt;style&gt;</code> or <code>&lt;link&gt;</code> tags must be inside the Shadow DOM. This is why it is standard in the component's HTML to have a <code>&lt;style&gt;</code> inside the template.</li>\n</ol>\n<p>The last oddity we want to discuss is more about Mythix UI than the standards of browsers. Mythix UI will play some \"tricks\" to get access to (and out of) the Shadow DOM. For example, if you use <a href=\"/?search=name%3AMythixUIComponent.select\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.select</code></a>, it will naturally select components found inside your Shadow DOM (not functionality found with <code>querySelector</code>). <a href=\"/?search=name%3AUtils.getParentNode\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.getParentNode</code></a> will also search beyond the Shadow DOM boundary via some <a href=\"/?search=name%3AUtils.metadata\" rel=\"noopener noreferrer\" target=\"_blank\"><code>metadata</code></a> that Mythix UI adds to the Shadow DOM to store the real parent node.</p>\n<p>So the final question you are wondering is probably \"When should I use a Shadow DOM?\"</p>\n<p>You should ask yourself the following questions:</p>\n<ol>\n<li>Do I want to externally (at the <code>document</code> level) style the contents of my component?</li>\n<li>Do I want externally styled children to be embeded into my component?</li>\n<li>Am I able to use <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\" rel=\"noopener noreferrer\" target=\"_blank\">parts</a> or <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots\" rel=\"noopener noreferrer\" target=\"_blank\">slots</a>?</li>\n<li>Do I want or need the hassle of parts or slots?</li>\n</ol>\n<p>As you can see, the answer really boils down to what you are trying to do. Take for example the <code>&lt;mythix-for-each&gt;</code> custom element that renders children iteratively like they are in a loop. When we designed this component, we had to take into account styling the children. Ultimately, the best option ended up being to NOT use a Shadow DOM, as internally styling the generated items (even though provided as children) became super difficult. Since it was the users elements we are rendering here, it didn't make much sense to break the ability to style them.</p>\n<p>But this isn't always the case. Take for example the <code>&lt;mythix-search&gt;</code> field component. This one was a lot different. The only item that needed styling was the internal <code>&lt;input&gt;</code> field, and slots made a lot more sense for any <code>&lt;input type=\"hidden\"&gt;</code> fields the user needs to add. So for this case, it made more sense to have a Shadow DOM.</p>\n<p>Another example would be the <code>&lt;mythix-modal&gt;</code> component. It is fully self contained with a Shadow DOM, because that makes a lot of sense for a modal system. However, it is still possible for the user to change the title of each modal, and the buttons each modal has via the use of <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/::part\" rel=\"noopener noreferrer\" target=\"_blank\">parts</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_templates_and_slots\" rel=\"noopener noreferrer\" target=\"_blank\">slots</a>. In this case a Shadow DOM made sense, especially when combined with slots which allowed the user to modify the modals as-needed.</p>\n<p>It just depends on what your component is doing. If your component has external children and styling that need to be inserted into it a lot, then it might be a bad idea to use a Shadow DOM. If your component is mostly or entirely self-contained, then a Shadow DOM with a few <code>part</code> attributes or a few slots might be a great way to go. You decided; and ultimately, the browser will likely force you down a path based on what you want to do with your component.</p>\n<p>There are two ways to control the Shadow DOM for your component. You can either set the static property <code>static shadow: true | false;</code> (default is <code>true</code>), or you can override the <a href=\"/?search=name%3AMythixUIComponent.createShadowDOM\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.createShadowDOM</code></a> method. The return value of this method is assigned to <code>this.shadow</code> of the component instance.</p>\n<p>If a Shadow DOM is not used, then the template of the component (if any) will not be automatically appended on mount; you must manually append the template instead if you wish to do so, via <code>this.appendTemplateTo(this)</code> inside <a href=\"/?search=name%3AMythixUIComponent.mounted\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.mounted</code></a>.</p>\n<p><button class=\"next-page-button\" onclick=\"globalThis.globalScope.goToNextEntity(event)\"><span>Go to Next Page</span><span class=\"material-symbols-outlined\">skip_next</span></button></p>","lineNumber":1,"type":"Article","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/docs/web-component-oddities.md.yaml","id":"726f19c4af990719ea7306c176fad7b66bb96819ff17d38bf9ba81083825227b"},{"groupID":"b2cb5102767b47406fc67465323988c02ede50adc1b7d6fb28c0f184f0e07e75","groupName":"upgrading-your-first-component.md","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/docs","fullFileName":"/home/wyatt/Projects/mythix-ui-core/docs/upgrading-your-first-component.md.yaml","fileName":"upgrading-your-first-component.md.yaml","fileExtension":"md.yaml","order":"A3","name":"Upgrading Your First Component","desc":"<p>As you probably noticed, our last component was only JavaScript. No HTML at all! No fun! Well, let's go ahead and fix that right now. To keep our demos separate, we are going to copy the <code>/demos/real-time-clock.js</code> to <code>/demos/real-time-clock-component.js</code>, and create a new file called <code>/demos/real-time-clock-component.html</code>. The contents of this HTML file will look like follows:</p>\n<pre><code class=\"hljs html language-html\"><span class=\"hljs-comment\">&lt;!-- /demos/real-time-clock-component.html --&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!-- Component style in &quot;document&quot; scope --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">data-auto-merge</span>=<span class=\"hljs-string\">&quot;real-time-clock-component&quot;</span>&gt;</span><span class=\"language-css\">\n  <span class=\"hljs-comment\">/* Global (document-level) styles go here */</span>\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!-- Component template --&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- The &quot;data-for&quot; attribute ties it to the registered component class --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">data-for</span>=<span class=\"hljs-string\">&quot;real-time-clock-component&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">part</span>=<span class=\"hljs-string\">&quot;time&quot;</span>&gt;</span>\\@@currentTime@@<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!-- Now include the component script --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;./real-time-clock-component.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<p>Next, we need to define what its <code>tagName</code> (<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a> name) will be.</p>\n<p>Finally, we probably want our component to do something, so let's have it be a clock that will update it real time.</p>\n<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-comment\">// /demos/real-time-clock-component.js</span>\n\n<span class=\"hljs-keyword\">import</span> {\n  <span class=\"hljs-title class_\">MythixUIComponent</span>,\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cdn/mythix-ui-core@1&#x27;</span>; <span class=\"hljs-comment\">// you should always specify your versions properly</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">ONE_SECOND</span> = <span class=\"hljs-number\">1000</span>; <span class=\"hljs-comment\">// 1000 milliseconds</span>\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">RealTimeClockComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">MythixUIComponent</span> {\n  <span class=\"hljs-keyword\">static</span> shadow = <span class=\"hljs-literal\">true</span>; <span class=\"hljs-comment\">// Now a shadow DOM is more useful</span>\n\n  <span class=\"hljs-comment\">// This ties us to our HTML template</span>\n  <span class=\"hljs-keyword\">static</span> tagName = <span class=\"hljs-string\">&#x27;real-time-clock-component&#x27;</span>;\n\n  <span class=\"hljs-title function_\">getFormattedTime</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>()).toGMTString()}</span>`</span>;\n  }\n\n  <span class=\"hljs-comment\">/* We no longer need a method to help us update the time */</span>\n\n  <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">super</span>();\n\n    <span class=\"hljs-comment\">// Define our dynamicProperty</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">defineDynamicProp</span>(<span class=\"hljs-string\">&#x27;currentTime&#x27;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">getFormattedTime</span>());\n  }\n\n  <span class=\"hljs-comment\">// This is called when our element enters the DOM structure (i.e. is inserted as a child)</span>\n  <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-comment\">// Next, setup an interval to update the display every second</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">intervalID</span> = <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-function\">() =&gt;</span> {\n      <span class=\"hljs-comment\">// Update the display time every second</span>\n      <span class=\"hljs-comment\">// Simply updating the dynamic property</span>\n      <span class=\"hljs-comment\">// will cause the component to automatically</span>\n      <span class=\"hljs-comment\">// re-render itself to match.</span>\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentTime</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">getFormattedTime</span>();\n    }, <span class=\"hljs-variable constant_\">ONE_SECOND</span>);\n  }\n\n  <span class=\"hljs-title function_\">unmounted</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">intervalID</span>) {\n      <span class=\"hljs-built_in\">clearInterval</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">intervalID</span>);\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">intervalID</span> = <span class=\"hljs-literal\">null</span>;\n    }\n  }\n}\n\n<span class=\"hljs-title class_\">RealTimeClockComponent</span>.<span class=\"hljs-title function_\">register</span>(); <span class=\"hljs-comment\">// Register our component with the browser</span>\n</code></pre>\n<pre><code class=\"hljs html language-html\"><span class=\"hljs-comment\">&lt;!-- /index.html --&gt;</span>\n\n<span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- ... all that we saw in the previous example --&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- Notice the minor name change here, with the &quot;-component&quot; postfix --&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- Also notice how we are &quot;requiring&quot; an HTML file --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mythix-require</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;@demos/real-time-clock-component.html&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mythix-require</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!-- The script for the component gets included by the components HTML --&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- No now we are ready to rock n&#x27; roll! --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">real-time-clock-component</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">real-time-clock-component</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<p>And this is the result:\n<mythix-require src=\"/demos/real-time-clock-component.html\"></mythix-require>\n<span class=\"realtime-example\"><real-time-clock-component></real-time-clock-component></span></p>\n<p>Cool! In this example, we used an HTML template, combined with a DynamicProperty to automatically update the display of the dynamic property value when it changes.</p>\n<p>The <code>this.defineDynamicProp</code> method we used created a getter/setter that is a <a href=\"/?search=name%3ADynamicProperty\" rel=\"noopener noreferrer\" target=\"_blank\"><code>DynamicProperty</code></a> instance for us. This is why we didn't use the return value. We have to have a getter/setter property, so that we can know when the user updates it, and therefor trigger an update, and so <a href=\"/?search=name%3AMythixUIComponent.defineDynamicProp\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.defineDynamicProp</code></a> is more like <code>Object.defineProperty</code> than it is a property builder.</p>\n<p>Still, it does return the <a href=\"/?search=name%3ADynamicProperty\" rel=\"noopener noreferrer\" target=\"_blank\"><code>DynamicProperty</code></a> instance used to define the property, and assigning the DynamicProperty to itself would result in no operation, so if it makes things easier to read, you can always do so if you want:</p>\n<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-variable language_\">super</span>();\n\n  <span class=\"hljs-comment\">// Define our dynamicProperty, and assign to the same variable</span>\n  <span class=\"hljs-comment\">// just to look better to human eyes. The assignment won&#x27;t</span>\n  <span class=\"hljs-comment\">// actually do anything, and so is just for looks.</span>\n  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">currentTime</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">defineDynamicProp</span>(<span class=\"hljs-string\">&#x27;currentTime&#x27;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">getFormattedTime</span>());\n}\n</code></pre>\n<p>Now, in the next section we'll take a moment to discuss some oddities about Web Components.</p>\n<p><button class=\"next-page-button\" onclick=\"globalThis.globalScope.goToNextEntity(event)\"><span>Go to Next Page</span><span class=\"material-symbols-outlined\">skip_next</span></button></p>","lineNumber":1,"type":"Article","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/docs/upgrading-your-first-component.md.yaml","id":"e14abe522b0780af3b078474a73b4b63ada47edb222f2005e4ac37fcd888eeb8"},{"groupID":"85f219dc4930bea45c601e6a70f584afa81c68e8513ed40f6f42cb269de9984d","groupName":"specialized-attribute-methods.md","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/docs","fullFileName":"/home/wyatt/Projects/mythix-ui-core/docs/specialized-attribute-methods.md.yaml","fileName":"specialized-attribute-methods.md.yaml","fileExtension":"md.yaml","order":"B1","name":"Specialized Attribute Methods","desc":"<p>Mythix UI supports specially named methods for components that will dynamically react to attribute requests.</p>\n<p>To use these specialized methods, you simply need to name your methods appropriately. The naming convention is <code>attr$yourAttributeName</code>. When a method is named like this, Mythix UI will do a few things for you to make your life easier:</p>\n<ul>\n<li>First, it will parse method names with this naming pattern from the <code>prototype</code> chain of your component, and will then create the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements#responding_to_attribute_changes\" rel=\"noopener noreferrer\" target=\"_blank\"><code>static observedAttributes</code></a> property on your component class for you automatically.</li>\n<li>Second, it will use methods following this convention as <code>setter</code> notification callbacks for attributes (i.e. your method will be called when the attribute's value changes).</li>\n<li>Third, to be more descriptive, one can create actual <code>getters</code> and <code>setters</code> using this naming convention to entirely intercept the process of getting and setting attribute values for any specific attribute.</li>\n<li>Finally, when using this naming convention for methods, for each such attribute a \"bridge property\" getter/setter property will be created for the element. For example, if you create a method on your component named <code>attr$source</code> then your element instance would automatically have a property named <code>source</code> as a getter/setter, that would both get the attribute value for you when called as a getter, and set the attribute value on your element when set from JavaScript.</li>\n</ul>\n<p>Let's look at a quick visual example for better understanding:</p>\n<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-keyword\">import</span> {\n  <span class=\"hljs-title class_\">MythixUIComponent</span>,\n  <span class=\"hljs-title class_\">Utils</span>,\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cdn/mythix-ui-core@1&#x27;</span>; <span class=\"hljs-comment\">// ensure we lock this to whatever version is important to us</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">DemoAttributeComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">MythixUIComponent</span> {\n  <span class=\"hljs-comment\">// ...No need to define `static observedAttributes = [ ... ];`</span>\n\n  <span class=\"hljs-keyword\">static</span> tagName = <span class=\"hljs-string\">&#x27;demo-attribute-component&#x27;</span>; <span class=\"hljs-comment\">// a &quot;something-&quot; prefix is required</span>\n\n  <span class=\"hljs-comment\">// This will be called whenever the &#x27;my-custom-attribute-name&#x27; attribute</span>\n  <span class=\"hljs-comment\">// has its value changed (from any source, including browser devtools).</span>\n  <span class=\"hljs-comment\">// This also sets up the instance &quot;bridge property&quot; `myCustomAttributeName` so</span>\n  <span class=\"hljs-comment\">// it can be directly interacted with via JavaScript.</span>\n  <span class=\"hljs-comment\">//</span>\n  <span class=\"hljs-comment\">// Please keep in mind that this will NOT remain a directly callable method</span>\n  <span class=\"hljs-comment\">// after Mythix UI manages your component. Instead, it will be a getter/setter</span>\n  <span class=\"hljs-comment\">// property named `myCustomAttributeName` on your element instance. For</span>\n  <span class=\"hljs-comment\">// example: `demoAttributeComponentElement.myCustomAttributeName` is how you</span>\n  <span class=\"hljs-comment\">// would get/set this attribute. This method will also be called if the</span>\n  <span class=\"hljs-comment\">// attribute&#x27;s value is changed via any other means.</span>\n  <span class=\"hljs-comment\">//</span>\n  <span class=\"hljs-comment\">// This method will only be called when your element&#x27;s attribute named</span>\n  <span class=\"hljs-comment\">// &#x27;my-custom-attribute-name&#x27; is SET. It will NOT be called when the attribute</span>\n  <span class=\"hljs-comment\">// value is FETCHED.</span>\n  <span class=\"hljs-title function_\">attr$myCustomAttributeName</span>([ newValue, oldValue ]) {\n\n  }\n\n  <span class=\"hljs-comment\">// Alternatively, you can define it as a setter, which is functionally equivalent.</span>\n  <span class=\"hljs-comment\">// This format is the Mythix UI preferred way of doing things, as</span>\n  <span class=\"hljs-comment\">// it is more verbose, and extremely obvious what is happening:</span>\n  <span class=\"hljs-comment\">// i.e. it reads like &quot;on set of attr name&quot;.</span>\n  <span class=\"hljs-comment\">//</span>\n  <span class=\"hljs-comment\">// Note: This setter will only ever be called if the previous value of the</span>\n  <span class=\"hljs-comment\">// attribute and the new value differ.</span>\n  <span class=\"hljs-keyword\">set</span> <span class=\"hljs-title function_\">attr$myCustomAttributeName</span>(<span class=\"hljs-params\">[ newValue, previousValue ]</span>) {\n    <span class=\"hljs-comment\">// `this.attr` is a helper method provided by Mythix UI</span>\n    <span class=\"hljs-comment\">// to make interacting with attributes easier</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-string\">&#x27;my-custom-attribute-name&#x27;</span>, newValue);\n  }\n\n  <span class=\"hljs-comment\">// You can also define a getter. This operation is confusing, and so</span>\n  <span class=\"hljs-comment\">// not recommended by the Mythix UI team. It is useful at times however,</span>\n  <span class=\"hljs-comment\">// which is why we support it, even though it isn&#x27;t recommended.</span>\n  <span class=\"hljs-comment\">//</span>\n  <span class=\"hljs-comment\">// We can&#x27;t (or rather, wouldn&#x27;t want to) intercept `getAttribute` requests</span>\n  <span class=\"hljs-comment\">// against our component directly (at a DOM level). That might be dangerous,</span>\n  <span class=\"hljs-comment\">// and if not implemented properly would be a potential source for hard to trace bugs.</span>\n  <span class=\"hljs-comment\">//</span>\n  <span class=\"hljs-comment\">// Instead, a getter of this type is only called when the related JavaScript</span>\n  <span class=\"hljs-comment\">// property for your component is accessed. In our example here, the</span>\n  <span class=\"hljs-comment\">// following getter would only be called when we fetch the value of our custom</span>\n  <span class=\"hljs-comment\">// bridge property, i.e.: `myCustomAttributeElement.myCustomAttributeName`.</span>\n  <span class=\"hljs-comment\">//</span>\n  <span class=\"hljs-comment\">// By default (if you yourself don&#x27;t specify this method), such a &quot;bridge property getter&quot;</span>\n  <span class=\"hljs-comment\">// is setup to simply call `return this.attr(&#x27;my-custom-attribute-name&#x27;)` to get the current</span>\n  <span class=\"hljs-comment\">// value of the attribute. As soon as you define this method, YOU must return the current</span>\n  <span class=\"hljs-comment\">// value of the attribute to JavaScript, which you can modify before you return it if you</span>\n  <span class=\"hljs-comment\">// want (just keep in mind that if you do this, the value returned won&#x27;t match the real</span>\n  <span class=\"hljs-comment\">// attribute value of your element). If you implement a custom getter for an attribute,</span>\n  <span class=\"hljs-comment\">// calling `element.getAttribute(&#x27;my-attribute&#x27;)` could give you a different result than if</span>\n  <span class=\"hljs-comment\">// you call `element.myAttribute`.</span>\n  <span class=\"hljs-keyword\">get</span> <span class=\"hljs-title function_\">attr$myCustomAttributeName</span>() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-string\">&#x27;my-custom-attribute-name&#x27;</span>);\n  }\n}\n\n<span class=\"hljs-comment\">// Parse your attribute handlers, and register the</span>\n<span class=\"hljs-comment\">// component with the browser</span>\n<span class=\"hljs-title class_\">DemoAttributeComponent</span>.<span class=\"hljs-title function_\">register</span>();\n</code></pre>\n<p>So, as you can see, we can define methods whose names follow a certain naming convention where the prefix of the method name begins with <code>attr$</code>, and everything following <code>attr$</code> is the actual attribute name, in camelCase (the attribute name on the element itself will be kebab-case).</p>\n<p>When we do this, we define a \"setter\" for an attribute, that will be called whenever the attribute's value is modified on the element. We can then react to such changes, to perform some task, load some resource, or maybe even change how our component looks or behaves.</p>\n<p>It is recommended that you follow this naming convention with actual JavaScript getters and setters format. In this way, your code will behave as just described, but will be clearer to read and understand.</p>\n<p>You can also always fallback to simply using the <a href=\"/?search=name%3AMythixUIComponent.attributeChanged\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.attributeChanged</code></a> life-cycle hook as well, if you find that more convenient.</p>\n<p><button class=\"next-page-button\" onclick=\"globalThis.globalScope.goToNextEntity(event)\"><span>Go to Next Page</span><span class=\"material-symbols-outlined\">skip_next</span></button></p>","lineNumber":1,"type":"Article","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/docs/specialized-attribute-methods.md.yaml","id":"fa8e440ff32acb2c67daf21c4c95dd191c34e21622725b9fee4bfd2616160868"},{"groupID":"5b9f5b1c253413e2b014ea2c90c6ed3964a2c22cc993590c070bbf6cecc0783f","groupName":"setting-up.md","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/docs","fullFileName":"/home/wyatt/Projects/mythix-ui-core/docs/setting-up.md.yaml","fileName":"setting-up.md.yaml","fileExtension":"md.yaml","order":"A1","name":"Setting Up","desc":"<p>Setting up Mythix UI is as simple as defining an <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap\" rel=\"noopener noreferrer\" target=\"_blank\">importmap</a> and including a <code>&lt;script&gt;</code> tag in your document's <code>&lt;head&gt;</code> to load Mythix UI. Obviously more complex things <em>can</em> be done, such as customizing resource resolution, lazy loading resources / chunks, and dynamically importing what is needed. But that can all come later. For now, to start off with, just dump the following into your <code>&lt;head&gt;</code> tag:</p>\n<pre><code class=\"hljs html language-html\"><span class=\"hljs-comment\">&lt;!-- Import Maps --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;importmap&quot;</span>&gt;</span><span class=\"language-handlebars\"><span class=\"language-xml\">\n  {\n    &quot;imports&quot;: {\n      &quot;@cdn&quot;: &quot;https://cdn.jsdelivr.net/npm&quot;,\n      &quot;@cdn/mythix-ui-core@$</span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">majorVersion</span>}}</span><span class=\"language-xml\">&quot;: &quot;https://cdn.jsdelivr.net/npm/mythix-ui-core@$</span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">majorVersion</span>}}</span><span class=\"language-xml\">/dist/index.js&quot;\n    }\n  }\n</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!-- Mythix UI --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/npm/mythix-ui-core@1/dist/index.js&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<p>Many downstream scripts and components will import <code>'@cdn/mythix-ui-core'</code>, so it is important to ensure we setup our import map properly to start off with. Next, we just import Mythix UI itself from a common CDN. After this initial setup, we are now ready to use Mythix UI, including its built-in elements such as <a href=\"/?search=name%3AMythixElements.MythixUIRequire\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixElements.MythixUIRequire</code></a>, and <a href=\"/?search=name%3AMythixElements.MythixUILanguageProvider\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixElements.MythixUILanguageProvider</code></a>.</p>\n<p>Now that we have fully setup Mythix UI, the first thing we will want to do that will GREATLY help us in development is to setup a global <code>urlResolver</code>. This method will allow us to modify how Mythix UI internally resolves all URLs.</p>\n<p>Add the following to your head, immediately below the importing of Mythix UI:</p>\n<pre><code class=\"hljs html language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n  <span class=\"hljs-keyword\">const</span> mythixUI = (globalThis.<span class=\"hljs-property\">mythixUI</span> = (globalThis.<span class=\"hljs-property\">mythixUI</span> || {})); <span class=\"hljs-comment\">// Use or setup standard mythixUI scope</span>\n  <span class=\"hljs-keyword\">const</span> globalScope = mythixUI.<span class=\"hljs-property\">globalScope</span> = (mythixUI.<span class=\"hljs-property\">globalScope</span> || {}); <span class=\"hljs-comment\">// Use or setup standard globalScope scope</span>\n\n  <span class=\"hljs-comment\">// Resolver for &lt;mythix-require&gt;</span>\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">CDN_SCRIPT</span>  = <span class=\"hljs-regexp\">/^@cdn\\/([\\w-]+)(@[\\d.]+)?$/</span>;\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">APP_SCRIPT</span>  = <span class=\"hljs-regexp\">/^@app\\/(.+)$/</span>;\n\n  mythixUI.<span class=\"hljs-property\">urlResolver</span> = <span class=\"hljs-function\">(<span class=\"hljs-params\">{ src, path, fileName }</span>) =&gt;</span> {\n    <span class=\"hljs-comment\">// Check if this is a CDN url</span>\n    <span class=\"hljs-keyword\">let</span> result = (<span class=\"hljs-string\">&#x27;&#x27;</span> + src).<span class=\"hljs-title function_\">match</span>(<span class=\"hljs-variable constant_\">CDN_SCRIPT</span>);\n    <span class=\"hljs-keyword\">if</span> (result)\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`https://cdn.jsdelivr.net/npm/<span class=\"hljs-subst\">${result[<span class=\"hljs-number\">1</span>]}</span><span class=\"hljs-subst\">${result[<span class=\"hljs-number\">2</span>] || <span class=\"hljs-string\">&#x27;@1&#x27;</span>}</span>/dist/<span class=\"hljs-subst\">${result[<span class=\"hljs-number\">1</span>]}</span>.html`</span>;\n\n    <span class=\"hljs-comment\">// Check if this is an application URL</span>\n    result = (<span class=\"hljs-string\">&#x27;&#x27;</span> + src).<span class=\"hljs-title function_\">match</span>(<span class=\"hljs-variable constant_\">APP_SCRIPT</span>);\n    <span class=\"hljs-keyword\">if</span> (result)\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`/app/resources/javascript/<span class=\"hljs-subst\">${result[<span class=\"hljs-number\">1</span>]}</span>`</span>;\n\n    <span class=\"hljs-comment\">// Pass through</span>\n    <span class=\"hljs-keyword\">return</span> src;\n  }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<p>This global <code>urlResolver</code> will allow you to resolve URLs however you want. It is standard for the <code>@cdn/</code> prefix to be used by all scripts that need to load other (external) modules. So ensure you properly configure this entry to point to a valid CDN or other resource, at the very least.</p>\n<p><button class=\"next-page-button\" onclick=\"globalThis.globalScope.goToNextEntity(event)\"><span>Go to Next Page</span><span class=\"material-symbols-outlined\">skip_next</span></button></p>","lineNumber":1,"type":"Article","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/docs/setting-up.md.yaml","id":"a311a17dc21fdf113bbe5f2532b07df74209c51b7db53af8138a944efde034ba"},{"groupID":"dd10b5421d4817b44199945ba08d3c4d6759b090e2fe582dbe6fe4041286a782","groupName":"getting-started.md","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/docs","fullFileName":"/home/wyatt/Projects/mythix-ui-core/docs/getting-started.md.yaml","fileName":"getting-started.md.yaml","fileExtension":"md.yaml","order":"A0","name":"Getting Started","desc":"<p>Hello there! We know learning a new framework can always be daunting. Don't sweat it though. We believe in the <a href=\"https://en.wikipedia.org/wiki/Golden_Rule\" rel=\"noopener noreferrer\" target=\"_blank\">Golden Rule</a>, and so will treat you kindly. This documentation is designed for humans, not for computers.</p>\n<p>First, a little blurb on this documentation. This entire thing is laid out as a stack of \"entities\", where each \"entity\" contains information regarding a certain subset of the Mythix UI framework. This \"Getting Started\" article for example would be one of these imaginary \"entities\". Another way one can think of these entities is to think of them like posts on a social site, where each one contains a focused piece of information regarding a certain function, class, property, or namespace.</p>\n<p>At the top of this page you can always easily access the Quick Search. You can at any time type into this Quick Search  to instantly search across this entire documentation set. Search terms will be matched against the title, content, and id of each entity.</p>\n<hr>\n<p>Mythix UI is a framework to assist in creating <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Components\" rel=\"noopener noreferrer\" target=\"_blank\">Web Components</a>. We try to be minimally opinionated about non-important things, yet strongly opinionated about important things. For example, we deliberately make it difficult to work with the <code>style</code> attribute of elements, because unlike other popular frameworks, we believe in upholding a <a href=\"https://en.wikipedia.org/wiki/Separation_of_content_and_presentation\" rel=\"noopener noreferrer\" target=\"_blank\">strong separation of concerns</a>, and are fully aware that abuse of the <code>style</code> attribute is bad for accessibility standards, user stylesheets, <code>media</code> attributes, system maintenance, flexible design, and much more.</p>\n<p>The goals of Mythix UI are as follows:</p>\n<ul>\n<li>Assist with <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Components\" rel=\"noopener noreferrer\" target=\"_blank\">Web Component</a> creation.</li>\n<li>Assist with DOM queries and manipulation.</li>\n<li>Be modular, extensible, flexible, and integrate and interoperate well with others.</li>\n<li>Be incredibly small, simple, and mostly invisible.</li>\n<li>Be opinionated on things that actually matter, but not otherwise.</li>\n<li>No tools required to setup or use.</li>\n<li>Be easily distributed and easily shared, while retaining version control.</li>\n<li>Provide useful tools and features to the broad community across the globe, for every language and culture, to ease the development of interactive websites and UIs.</li>\n</ul>\n<p>For developers this means:</p>\n<ul>\n<li><p>With quick and easy setup, start using Mythix UI with zero hassle. You can even drop a few lines of code into your browser developer tools right now and go experimenting, without ever leaving your browser! Go ahead, paste this into the <code>&lt;head&gt;</code> of any document:</p>\n<pre><code class=\"hljs html language-html\"><span class=\"hljs-comment\">&lt;!-- Import Maps --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;importmap&quot;</span>&gt;</span><span class=\"language-handlebars\"><span class=\"language-xml\">\n  {\n    &quot;imports&quot;: {\n      &quot;@cdn&quot;: &quot;https://cdn.jsdelivr.net/npm&quot;,\n      &quot;@cdn/mythix-ui-core@$</span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">majorVersion</span>}}</span><span class=\"language-xml\">&quot;: &quot;https://cdn.jsdelivr.net/npm/mythix-ui-core@$</span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">majorVersion</span>}}</span><span class=\"language-xml\">/dist/index.js&quot;\n    }\n  }\n</span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!-- Mythix UI --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/npm/mythix-ui-core@1/dist/index.js&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre></li>\n<li><p>Easy <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Components\" rel=\"noopener noreferrer\" target=\"_blank\">Web Component</a> creation.</p></li>\n<li><p>Easy interoperability: Mythix UI components can be embedded in other frameworks, or other frameworks can be embedded into Mythix UI Components.</p></li>\n<li><p>Easy templating system, templating engine, resource fetching, and version management.</p></li>\n<li><p>A fully featured templating engine, with dynamic auto-updating properties.</p></li>\n<li><p>A fully featured I18N engine built-in.</p></li>\n<li><p>Lazy-loading content engine built-in.</p></li>\n<li><p>Easy <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a> creation, querying, modification, insertion, and removal.</p></li>\n<li><p>Hassle free event bindings.</p></li>\n<li><p>Useful tools often needed for most websites / applications.</p></li>\n<li><p>Zero tools or need to setup any environment except a text editor / IDE.</p></li>\n<li><p>Iterative templates, search boxes, modals, and other common components at your fingertips (using provided Mythix UI packages found online).</p></li>\n<li><p>… and much more! All within 69K (uncompressed)!</p></li>\n</ul>\n<p>Mythix UI attempts to remain as small as possible while providing the developer useful tools that they would likely need to implement themselves. For example, easily creating DOM on the fly with Javascript is a fairly daunting task, even if it isn't complex. Sometimes a single element creation and insert can take half a dozen or more lines of pure vanilla JavaScript. Mythix UI assists the developer in areas like this. As a framework, it makes element creation and insertion easy and intuitive. For example, one can use the <a href=\"/?search=name%3AMythixUIComponent.build\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.build</code></a> method to create complex element fragments and then insert them into the DOM. There are also useful tools like the <a href=\"/?search=name%3AQueryEngine\" rel=\"noopener noreferrer\" target=\"_blank\"><code>QueryEngine</code></a> class. This is a jQuery-like wrapper around an array, that like jQuery allows querying elements from the DOM, while also operating on those elements by filtering them, removing them, inserting them, etc… Keep in mind that this is <strong>not</strong> jQuery. Its interface was simply inspired by jQuery.</p>\n<p>Being an assistive <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Components\" rel=\"noopener noreferrer\" target=\"_blank\">Web Component</a> framework, Mythix UI heavily relies on <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template\" rel=\"noopener noreferrer\" target=\"_blank\">templates</a>. We highly recommend you fully read up and understand both Web Components, and templates.\nWithout this foundational understanding you might find yourself in some confusing and tricky situations (<a href=\"https://html.spec.whatwg.org/multipage/custom-elements.html#custom-element-conformance\" rel=\"noopener noreferrer\" target=\"_blank\">for example, the idea that you rarely--if ever--want to use a <code>constructor</code> in Web Components</a>).</p>\n<p>While we are discussing Web Components, now is probably a good time to mention some of the component life-cycle hooks. Most Mythix UI component life-cycle hooks are simple wrappers around Web Component life-cycle hooks. You can see a list of the hooks and their translations between technologies below. The choice to rename these life-cycle hooks was made simply for ease of use. For example, <code>mounted</code> is a lot more natural sounding and easier to remember than <code>connectedCallback()</code>.</p>\n<table>\n<thead>\n<tr>\n<th id=\"web_component_life-cycle_hook_name\">Web Component life-cycle hook name</th>\n<th id=\"corresponding_mythix_ui_life-cycle_hook_name\">Corresponding Mythix UI life-cycle hook name</th>\n<th id=\"notes\">Notes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>connectedCallback</code></td>\n<td><code>mounted</code></td>\n<td>Unlike <code>connectedCallback</code>, Mythix UI will do some component setup before calling <code>mounted</code></td>\n</tr>\n<tr>\n<td><code>disconnectedCallback</code></td>\n<td><code>unmounted</code></td>\n<td>Behaves identically to <code>disconnectedCallback</code></td>\n</tr>\n<tr>\n<td><code>adoptedCallback</code></td>\n<td><code>adopted</code></td>\n<td>Behaves identically to <code>adoptedCallback</code></td>\n</tr>\n<tr>\n<td><code>attributeChangedCallback</code></td>\n<td><code>attributeChanged</code></td>\n<td>Behaves identically to <code>attributeChangedCallback</code>, <a href=\"/?search=name%3ASpecialized+Attribute+Methods\" rel=\"noopener noreferrer\" target=\"_blank\">except that special attribute methods may be called first</a>.</td>\n</tr>\n</tbody>\n</table>\n<p>Note: ℹ️ The good news is, if you hate our deviation from the standard, you can simply not use the life-cycle methods Mythux UI defines, and instead use the names defined in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Components\" rel=\"noopener noreferrer\" target=\"_blank\">Web Component</a> API standard as usual! Just don't forget to call <code>super()</code> in the methods you implement!</p>\n<p><button class=\"next-page-button\" onclick=\"globalThis.globalScope.goToNextEntity(event)\"><span>Go to Next Page</span><span class=\"material-symbols-outlined\">skip_next</span></button></p>","lineNumber":1,"type":"Article","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/docs/getting-started.md.yaml","id":"a612eec9ba9db1d46ea02928a5f260cd0e427bb8ab7bebdb3657c152ff181a35"},{"groupID":"4257b4deb113c2ea82ad8fdeaccba40ae9fdeb5721eb8b4396c216aba4b868de","groupName":"creating-your-first-component.md","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/docs","fullFileName":"/home/wyatt/Projects/mythix-ui-core/docs/creating-your-first-component.md.yaml","fileName":"creating-your-first-component.md.yaml","fileExtension":"md.yaml","order":"A2","name":"Creating Your First Component","desc":"<p>Creating your first component will be a blast! Not only will we have fun, but we will see how easy Mythix UI is to use. First, we need to define our component's class, and that needs to <code>extend</code> from <code>MythixUIComponent</code>.</p>\n<p>Next, we need to define what its <code>tagName</code> (<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/element\" rel=\"noopener noreferrer\" target=\"_blank\">Element</a> name) will be.</p>\n<p>Finally, we probably want our component to do something, so let's have it be a clock that will update it real time.</p>\n<pre><code class=\"hljs javascript language-javascript\"><span class=\"hljs-comment\">// /demos/real-time-clock.js</span>\n\n<span class=\"hljs-keyword\">import</span> {\n  <span class=\"hljs-title class_\">MythixUIComponent</span>,\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;@cdn/mythix-ui-core@1&#x27;</span>; <span class=\"hljs-comment\">// you should always specify your versions properly</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">ONE_SECOND</span> = <span class=\"hljs-number\">1000</span>; <span class=\"hljs-comment\">// 1000 milliseconds</span>\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">RealTimeClock</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">MythixUIComponent</span> {\n  <span class=\"hljs-keyword\">static</span> shadow = <span class=\"hljs-literal\">false</span>; <span class=\"hljs-comment\">// Inform our underlying component that we do not want a shadow DOM</span>\n\n  <span class=\"hljs-keyword\">static</span> tagName = <span class=\"hljs-string\">&#x27;real-time-clock&#x27;</span>; <span class=\"hljs-comment\">// The name of our element, i.e. `&lt;real-time-clock&gt;&lt;/real-time-clock&gt;`</span>\n  <span class=\"hljs-comment\">// FYI: Web Component standards REQUIRE a `/^\\w-/` (word-) prefix for custom element names</span>\n\n  <span class=\"hljs-title function_\">getFormattedTime</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>()).toGMTString()}</span>`</span>;\n  }\n\n  <span class=\"hljs-comment\">// Create a method to update our display time that is rendered</span>\n  <span class=\"hljs-comment\">// to the screen. We will do this simply by setting `textContent`</span>\n  <span class=\"hljs-comment\">// on our custom element. We will get more complicated in our</span>\n  <span class=\"hljs-comment\">// next example. For now, we will just keep it basic.</span>\n  <span class=\"hljs-title function_\">updateDisplayTime</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">textContent</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">getFormattedTime</span>();\n  }\n\n  <span class=\"hljs-comment\">// This is called when our element enters the DOM structure (i.e. is inserted as a child)</span>\n  <span class=\"hljs-title function_\">mounted</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-comment\">// First, let&#x27;s ensure to render our `textContent` right when we are inserted</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">updateDisplayTime</span>();\n\n    <span class=\"hljs-comment\">// Next, setup an interval to update the display every second</span>\n    <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">intervalID</span> = <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-function\">() =&gt;</span> {\n      <span class=\"hljs-comment\">// Update the display time every second</span>\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">updateDisplayTime</span>();\n    }, <span class=\"hljs-variable constant_\">ONE_SECOND</span>);\n  }\n\n  <span class=\"hljs-title function_\">unmounted</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">intervalID</span>) {\n      <span class=\"hljs-built_in\">clearInterval</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">intervalID</span>);\n      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">intervalID</span> = <span class=\"hljs-literal\">null</span>;\n    }\n  }\n}\n\n<span class=\"hljs-title class_\">RealTimeClock</span>.<span class=\"hljs-title function_\">register</span>(); <span class=\"hljs-comment\">// Register our component with the browser</span>\n</code></pre>\n<pre><code class=\"hljs html language-html\"><span class=\"hljs-comment\">&lt;!-- /index.html --&gt;</span>\n\n<span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Mythix UI Demo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!-- Import Maps --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;importmap&quot;</span>&gt;</span><span class=\"language-handlebars\"><span class=\"language-xml\">\n      {\n        &quot;imports&quot;: {\n          &quot;@cdn&quot;: &quot;https://cdn.jsdelivr.net/npm&quot;,\n          &quot;@cdn/mythix-ui-core@$</span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">majorVersion</span>}}</span><span class=\"language-xml\">&quot;: &quot;https://cdn.jsdelivr.net/npm/mythix-ui-core@$</span><span class=\"hljs-template-variable\">{{<span class=\"hljs-name\">majorVersion</span>}}</span><span class=\"language-xml\">/dist/index.js&quot;\n        }\n      }\n    </span></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!-- Mythix UI --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://cdn.jsdelivr.net/npm/mythix-ui-core@1/dist/index.js&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!-- Custom URL Resolver --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n      <span class=\"hljs-keyword\">const</span> mythixUI = (globalThis.<span class=\"hljs-property\">mythixUI</span> = (globalThis.<span class=\"hljs-property\">mythixUI</span> || {})); <span class=\"hljs-comment\">// Use or setup standard mythixUI scope</span>\n      <span class=\"hljs-keyword\">const</span> globalScope = mythixUI.<span class=\"hljs-property\">globalScope</span> = (mythixUI.<span class=\"hljs-property\">globalScope</span> || {}); <span class=\"hljs-comment\">// Use or setup standard globalScope scope</span>\n\n      <span class=\"hljs-comment\">// Resolver for &lt;mythix-require&gt;</span>\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">CDN_SCRIPT</span>  = <span class=\"hljs-regexp\">/^@cdn\\/([\\w-]+)(@[\\d.]+)?$/</span>;\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">DEMO_SCRIPT</span> = <span class=\"hljs-regexp\">/^@demos\\/(.+)$/</span>;\n\n      mythixUI.<span class=\"hljs-property\">urlResolver</span> = <span class=\"hljs-function\">(<span class=\"hljs-params\">{ src, path, fileName }</span>) =&gt;</span> {\n        <span class=\"hljs-comment\">// Check if this is a CDN url</span>\n        <span class=\"hljs-keyword\">let</span> result = (<span class=\"hljs-string\">&#x27;&#x27;</span> + src).<span class=\"hljs-title function_\">match</span>(<span class=\"hljs-variable constant_\">CDN_SCRIPT</span>);\n        <span class=\"hljs-keyword\">if</span> (result)\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`https://cdn.jsdelivr.net/npm/<span class=\"hljs-subst\">${result[<span class=\"hljs-number\">1</span>]}</span><span class=\"hljs-subst\">${result[<span class=\"hljs-number\">2</span>] || <span class=\"hljs-string\">&#x27;@1&#x27;</span> /* Default version */ }</span>/dist/<span class=\"hljs-subst\">${result[<span class=\"hljs-number\">1</span>]}</span>.html`</span>;\n\n        <span class=\"hljs-comment\">// Check if this is a demo script URL</span>\n        result = (<span class=\"hljs-string\">&#x27;&#x27;</span> + src).<span class=\"hljs-title function_\">match</span>(<span class=\"hljs-variable constant_\">DEMO_SCRIPT</span>);\n        <span class=\"hljs-keyword\">if</span> (result)\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`/demos/<span class=\"hljs-subst\">${result[<span class=\"hljs-number\">1</span>]}</span>`</span>;\n\n        <span class=\"hljs-comment\">// Pass through</span>\n        <span class=\"hljs-keyword\">return</span> src;\n      }\n    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mythix-require</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;@demos/real-time-clock.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mythix-require</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">real-time-clock</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">real-time-clock</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<p>And this is the result:\n<mythix-require src=\"/demos/real-time-clock.js\"></mythix-require>\n<span class=\"realtime-example\"><real-time-clock></real-time-clock></span></p>\n<p>How cool is that? Now, for our next component, we will upgrade this example to have its own built-in HTML template as part of the component.</p>\n<p>Let's go!</p>\n<p><button class=\"next-page-button\" onclick=\"globalThis.globalScope.goToNextEntity(event)\"><span>Go to Next Page</span><span class=\"material-symbols-outlined\">skip_next</span></button></p>","lineNumber":1,"type":"Article","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/docs/creating-your-first-component.md.yaml","id":"6e361cdb932cb49371ce5d59428a3c6de1cf86aab4ce0f036b6dcf37775ff647"},{"groupID":"468503b2c5681f93b98f4d5838358acc58b12de6de8e5ac5d109fe5b91a43786","groupName":"attributes-and-other-misc-bolts.md","repo":"https://github.com/th317erd/mythix-ui-core","filePath":"/home/wyatt/Projects/mythix-ui-core/docs","fullFileName":"/home/wyatt/Projects/mythix-ui-core/docs/attributes-and-other-misc-bolts.md.yaml","fileName":"attributes-and-other-misc-bolts.md.yaml","fileExtension":"md.yaml","order":"A5","name":"Attributes and other Misc Bolts","desc":"<p>Mythix UI has some specialized attributes that you should probably know of.</p>\n<p>Though Mythix UI strives to be a minimalistic framework, we also try to balance that with some useful features. For this purpose we have reserved a few attribute names, and use them for some really cool features.</p>\n<ol>\n<li><p><strong><code>data-mythix-src: URL</code></strong></p>\n<p>This is the \"lazy loading\" (also called \"lazy partials\") attribute. If it is used on <em>any</em> element, then it will setup a load trigger to load the url specified by this attribute, and dump the contents into the <code>children</code> of the owning element.</p>\n<p>For example:</p>\n<pre><code class=\"hljs html language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">data-mythix-src</span>=<span class=\"hljs-string\">&quot;./articles/mythix-takes-the-industry-by-storm.html&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">article</span>&gt;</span>\n</code></pre>\n<p>This will load the url <code>./articles/mythix-takes-the-industry-by-storm.html</code> when this specific <code>&lt;article&gt;</code> element is first scrolled into view. After it successfully loads the content, it will append to the <code>children</code> of the tag owning this attribute.</p>\n<p>This is super handy to keep load times short on any website! By use of auto-loading partials like this, you can easily decrease the initial load time of your site. If you make many things auto-loaded partials, then smaller chunks of your website will load on an \"as-needed\" basis (when they enter the view). When content is inserted as <code>children</code>, it is also ran through the template engine. So for example, your loaded content could contain sub <code>data-mythix-src</code> attributes in child elements, or it could contain other dynamic properties, which would be mutated by the template engine on insert.</p></li>\n<li><p><strong><code>data-auto-merge: CSSSelector</code></strong></p>\n<p>The <code>data-auto-merge</code> attribute specifies a comma-separated list of CSS selectors. When any <code>&lt;template&gt;</code> is being inserted for a Mythix UI component, Mythix UI will see if any of these selectors match the component whose template is being inserted. If it does, then the element with the matching <code>data-auto-merge</code> attribute will be cloned and inserted into the component as well.</p>\n<p>You can think of this attribute like an \"element style\" that is applied to every component. The selectors say which elements are the \"target\" this element will be cloned into. If it helps further, you can think of this kinda like a <code>::before</code> pseudo selector… except that in this case actual elements will be cloned and appended to the DOM.</p>\n<p>This is extremely useful to bypass some of the headache with Web Components. For example, you can load a font for your site, and set the <code>data-auto-merge=\"*\"</code> attribute, and that font will then be loaded (and usable) inside <strong>every</strong> Mythix UI component--even third party ones.</p></li>\n<li><p><strong><code>data-for: CSSSelector</code></strong></p>\n<p>The <code>data-for</code> attribute is used to link templates to their respective Web Component. The Mythix UI team has put in a lot of effort to try and ensure not transpilers or other tools are needed, nor the use of too much \"auto-magic\". So yes, though it may be painfully unfortunate, one must manually link a component's HTML template to the component's JavaScript. To make this less painful, you can use the <code>data-for</code> attribute, which if used, must be a direct 1x1 match with the <code>static tagName</code> property of the component.</p>\n<p>You could also ignore this attribute entirely and instead simply define your own <a href=\"/?search=name%3AMythixUIComponent.getComponentTemplate\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.getComponentTemplate</code></a> method.</p></li>\n<li><p><strong><code>data-from: CSSSelector</code></strong></p>\n<p><code>data-from</code> is specific to the <code>&lt;mythix-merge&gt;</code> element, but is common enough where we felt we should list it here. It specifies a target template (or other element target matching the CSS selector) to be the source of element merging.</p>\n<p>For example, when one component inherits from another component, it is common to also insert into the child component's template a <code>&lt;mythix-merge data-from=\"parent-component\"&gt;</code> to pull in the styling and other content of the parent.</p>\n<p>Sometimes you don't want to merge everything. In this case, one can use combo <code>data-filter: CSSSelector</code> attribute to merge all source elements <em>except</em> those matching this defined CSS selector.</p>\n<p>The selected elements that are merged into the destination ultimately replace the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node\" rel=\"noopener noreferrer\" target=\"_blank\">Node</a> that this attribute is defined on. Any CSS selector can be defined, so this can also target multiple elements to merge into the destination.</p></li>\n<li><p><strong><code>data-mythix-component-name: string</code></strong></p>\n<p>This attribute is added automatically to every component as it is mounting. It simply contains the value of the component's name. Why? Primarily for CSS styling and also for querying the DOM. It is used internally by Mythix UI for example to keep components invisible (with <code>opacity: 0.0</code>) while things are loading, to decrease rendering jitter.</p>\n<p>It is standard practice for every Mythix UI component to have this attribute, and it is configured this way by default.</p></li>\n</ol>\n<p><button class=\"next-page-button\" onclick=\"globalThis.globalScope.goToNextEntity(event)\"><span>Go to Next Page</span><span class=\"material-symbols-outlined\">skip_next</span></button></p>","lineNumber":1,"type":"Article","repoLink":"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/docs/attributes-and-other-misc-bolts.md.yaml","id":"529b1aed5eeeee5216f74f2dd9a7100d06f64837cbe01b041a55d6d2e6989d7c"},{"caption":"… HTMLElement Instance Properties","desc":"All <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement#instance_properties\" rel=\"noopener noreferrer\" target=\"_blank\">HTMLElement Instance Properties</a> are inherited from <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement\" rel=\"noopener noreferrer\" target=\"_blank\">HTMLElement</a>","link":"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement#instance_properties","type":"Property","parent":"id:a45986ee3684b29d0bf8bd296455c38058c3b48ece13c5b46ccf0a5062ea0ebd","searchable":false,"id":"274307abbbff65ad71c3a375b8918b95ac0ffe2203de312967f40a6baa736e98"},{"name":"isMythixComponent","dataType":"boolean","caption":"[static MythixUIComponent.isMythixComponent]","desc":"Is <code>true</code> for Mythix UI components.","type":"Property","parent":"id:a45986ee3684b29d0bf8bd296455c38058c3b48ece13c5b46ccf0a5062ea0ebd","lineNumber":15,"dataTypes":["boolean"],"id":"f0ab1430b9e46ad8068100caf4acf0bd62feb7bd8176fec3ec7e8e8251c38036"},{"name":"sensitiveTagName","dataType":"string","caption":"sensitiveTagName","desc":"Works identically to <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\" rel=\"noopener noreferrer\" target=\"_blank\">Element.tagName</a> for XML, where case is preserved.\nIn HTML this works like <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\" rel=\"noopener noreferrer\" target=\"_blank\">Element.tagName</a>, but instead of the result\nalways being UPPERCASE, the tag name will be returned with the casing preserved.","type":"Property","parent":"id:a45986ee3684b29d0bf8bd296455c38058c3b48ece13c5b46ccf0a5062ea0ebd","lineNumber":266,"dataTypes":["string"],"id":"b00d29ae3f3abe5cb38cfcf559d25f75548e943c7eb5f9c349cb805916f04345"},{"name":"templateID","dataType":"string","caption":"templateID","desc":"This is a convenience property that returns the value of <code>this.constructor.TEMPLATE_ID</code>","type":"Property","parent":"id:a45986ee3684b29d0bf8bd296455c38058c3b48ece13c5b46ccf0a5062ea0ebd","lineNumber":271,"dataTypes":["string"],"id":"c9ab18ee4a6eb72c87adffb5d57bfa2a480226193cdfed9017445783925f0cb1"},{"name":"delayTimers","dataType":"Map&lt;string, Promise&gt;","caption":"delayTimers","desc":"A <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" rel=\"noopener noreferrer\" target=\"_blank\">Map</a> instance that\nretains <code>setTimeout</code> ids so that <a href=\"/?search=name%3AMythixUIComponent.debounce\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.debounce</code></a> can properly function. Keys are <a href=\"/?search=name%3AMythixUIComponent.debounce\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.debounce</code></a>\ntimer ids (of type <code>string</code>). Values are <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" rel=\"noopener noreferrer\" target=\"_blank\">Promise</a> instances.\nEach promise instance also has a special key <code>timerID</code> that contains a <code>setTimeout</code> id of a javascript timer.","notes":["⚠️ Use at your own risk. This is Mythix UI internal code that might change in the future.","👁️ <a href=\"/?search=name%3AMythixUIComponent.debounce\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.debounce</code></a>"],"type":"Property","parent":"id:a45986ee3684b29d0bf8bd296455c38058c3b48ece13c5b46ccf0a5062ea0ebd","lineNumber":277,"dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" rel=\"noopener noreferrer\" target=\"_blank\">Map</a>&lt;string, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" rel=\"noopener noreferrer\" target=\"_blank\">Promise</a>&gt;"],"id":"81f818aa9aab604973bdc8f3d1fb3af7f8d40aeff3c82bb9691f9dc95ed819c3"},{"name":"shadow","dataType":"[ShadowRoot](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot)","caption":"shadow","desc":"The shadow root of this component (or <code>null</code> if none).","notes":["This is the cached result of calling <a href=\"/?search=name%3AMythixUIComponent.createShadowDOM\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.createShadowDOM</code></a> when the component is first initialized."],"type":"Property","parent":"id:a45986ee3684b29d0bf8bd296455c38058c3b48ece13c5b46ccf0a5062ea0ebd","lineNumber":294,"dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot\" rel=\"noopener noreferrer\" target=\"_blank\">ShadowRoot</a>"],"id":"07800200af9b8e54be2892be5ba2c5c0ff416e0d42ae9ae72ce1dd93404a01c8"},{"name":"template","dataType":"[template element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template)","caption":"template","desc":"The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template\" rel=\"noopener noreferrer\" target=\"_blank\">template</a> element for this\ncomponent, or <code>null</code> if there is no template found for the component.","notes":["This is the cached result of calling <a href=\"/?search=name%3AMythixUIComponent.getComponentTemplate\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent.getComponentTemplate</code></a> when the component is first initialized."],"type":"Property","parent":"id:a45986ee3684b29d0bf8bd296455c38058c3b48ece13c5b46ccf0a5062ea0ebd","lineNumber":271,"dataTypes":["<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template\" rel=\"noopener noreferrer\" target=\"_blank\">template element</a>"],"id":"0eaaa5c6baea288ba7cc3a3ca608f7a0c990fd584ba4b9b393cf407148ff7899"},{"name":"MYTHIX_INTERSECTION_OBSERVERS","dataType":"symbol","desc":"<p>This symbol is used as a <a href=\"/?search=name%3AUtils.metadata\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.metadata</code></a> key against elements with a <code>data-src</code> attribute.\nFor elements with this attribute, set an <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\" rel=\"noopener noreferrer\" target=\"_blank\">intersection observer</a> is setup.\nWhen the intersection observer reports that the element is visible, then the URL specified by <code>data-src</code> is fetched, and dumped into\nthe element as its children. This allows for dynamic \"partials\" that are loaded at run-time.</p>\n<p>The value stored at this <a href=\"/?search=name%3AUtils.metadata\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.metadata</code></a> key is a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" rel=\"noopener noreferrer\" target=\"_blank\">Map</a> of <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\" rel=\"noopener noreferrer\" target=\"_blank\">intersection observer</a>\ninstances. The keys of this map are the intersection observers themselves. The values are raw objects with the shape\n<code>{ wasVisible: boolean, ratioVisible: float, previousVisibility: boolean, visibility: boolean }</code>.</p>","type":"Property","parent":"id:734092caeb134c8254fae7291f08b1b248bea2965fe55974f6e27a3185d2542f","lineNumber":70,"dataTypes":["symbol"],"id":"f5cd639b6b13ce33f87caf5ec0d7263b3eaedabd9b5ba5e0412c9870e1080cd3"},{"name":"MYTHIX_NAME_VALUE_PAIR_HELPER","dataType":"symbol","desc":"<p>This is used as a <a href=\"/?search=name%3AUtils.metadata\" rel=\"noopener noreferrer\" target=\"_blank\"><code>metadata</code></a> key by <a href=\"/?search=name%3AUtils.globalStoreNameValuePairHelper\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.globalStoreNameValuePairHelper</code></a>\nto store key/value pairs for a single value.</p>\n<p>Mythix UI has global store and fetch helpers for setting and fetching dynamic properties. These\nmethods only accept a single value by design… but sometimes it is desired that a value be set\nwith a specific key instead. This <code>MYTHIX_NAME_VALUE_PAIR_HELPER</code> property assists with this process,\nallowing global helpers to still function with a single value set, while in some cases still passing\na key through to the setter. <a class=\"source-control-link\" href=\"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/constants.js#L1\" target=\"_blank\"><span class=\"material-symbols-outlined\">arrow_outward</span></a></p>","notes":["⚠️ Use at your own risk. This is Mythix UI internal code that might change in the future."],"type":"Property","parent":"id:734092caeb134c8254fae7291f08b1b248bea2965fe55974f6e27a3185d2542f","lineNumber":67,"dataTypes":["symbol"],"id":"661d0e3c72e6f97bea08aebedb11421c824668d6eb43d3f6d4d4ca0d19482a44"},{"name":"MYTHIX_SHADOW_PARENT","dataType":"symbol","desc":"This is used as a <a href=\"/?search=name%3AUtils.metadata\" rel=\"noopener noreferrer\" target=\"_blank\"><code>metadata</code></a> key by <a href=\"/?search=name%3AMythixUIComponent\" rel=\"noopener noreferrer\" target=\"_blank\"><code>MythixUIComponent</code></a> to\nstore the parent node of a Shadow DOM, so that it can later be traversed by <a href=\"/?search=name%3AUtils.getParentNode\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.getParentNode</code></a>.","notes":["⚠️ Use at your own risk. This is Mythix UI internal code that might change in the future.","👁️ <a href=\"/?search=name%3AUtils.getParentNode\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.getParentNode</code></a>."],"type":"Property","parent":"id:734092caeb134c8254fae7291f08b1b248bea2965fe55974f6e27a3185d2542f","lineNumber":68,"dataTypes":["symbol"],"id":"b82537d8e560d5956bfec816bd2a206f87ccda5d947df87d30598860ca604bc8"},{"name":"MYTHIX_TYPE","dataType":"symbol","desc":"This is used for type checking by <code>instanceof</code> checks to determine if an instance\nis a specific type (even across javascript contexts and library versions). <a class=\"source-control-link\" href=\"https://github.com/th317erd/mythix-ui-core/blob/main//home/wyatt/Projects/mythix-ui-core/lib/constants.js#L1\" target=\"_blank\"><span class=\"material-symbols-outlined\">arrow_outward</span></a>","notes":["👁️ <a href=\"/?search=name%3ABaseUtils.isType\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.isType</code></a>."],"type":"Property","parent":"id:734092caeb134c8254fae7291f08b1b248bea2965fe55974f6e27a3185d2542f","lineNumber":69,"dataTypes":["symbol"],"id":"2e41a7e0088b1fcb6d9d13d99f1bba317fdcf1dfa99a6b1604d6984ff3937844"},{"name":"DYNAMIC_PROPERTY_TYPE","dataType":"symbol","desc":"Used for runtime type reflection against <a href=\"/?search=name%3AUtils.DynamicProperty\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Utils.DynamicProperty</code></a>.","notes":["👁️ <a href=\"/?search=name%3ADynamicProperty\" rel=\"noopener noreferrer\" target=\"_blank\"><code>DynamicProperty</code></a>.","👁️ <a href=\"/?search=name%3ABaseUtils.isType\" rel=\"noopener noreferrer\" target=\"_blank\"><code>BaseUtils.isType</code></a>.","👁️ <a href=\"/?search=name%3AConstants.MYTHIX_TYPE\" rel=\"noopener noreferrer\" target=\"_blank\"><code>Constants.MYTHIX_TYPE</code></a>."],"type":"Property","parent":"id:734092caeb134c8254fae7291f08b1b248bea2965fe55974f6e27a3185d2542f","lineNumber":81,"dataTypes":["symbol"],"id":"500714cc11a25e153c40b7093469f71a789b697b7d7dcbed34d66e70d4861e0b"}]